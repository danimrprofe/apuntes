{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"arduino/04.LEDRGB/","text":"Lecci\u00f3n 4 RGB LED Resumen Los LED RGB son una forma divertida y f\u00e1cil para agregar color a sus proyectos. Puesto que es como regular 3 LED en uno, el uso y conenxi\u00f3n no es muy diferente. Existen 2 versiones: \u00c1nodo com\u00fan C\u00e1todo com\u00fan. \u00c1nodo com\u00fan utiliza 5V en el pin com\u00fan, mientras que el c\u00e1todo com\u00fan se conecta a tierra. Como con cualquier LED, tenemos que conectar algunas resistencias en l\u00ednea (3 total) as\u00ed que podemos limitar la corriente absorbida. En nuestro programa , se comienzan con el LED en el estado de color rojo, entonces se descolora a verde, luego se descolora azul y finalmente hacia el color rojo. Haciendo esto que nos pasar\u00e1 por la mayor parte del color que se puede lograr. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x M M de x (4) cables (cables de puente de macho a macho) (1) x RGB LED (3) resistencias de 220 ohmios x RGB A primera vista, LEDs RGB (rojo, verde y azul) s\u00f3lo parecen regular LED. Sin embargo, dentro del paquete del LED generalmente, hay realmente tres LEDs, uno rojo, uno verde y s\u00ed, uno azul. Controlando el brillo de cada uno de los LEDs individuales, usted puede mezclar pr\u00e1cticamente cualquier color que desee. Mezclamos colores del mismo modo que ser\u00eda mezclar pintura en una paleta - ajustando el brillo de cada uno de los tres LEDs. La manera dura para hacer esto ser\u00eda usar valor diferentes resistencias (o resistencias variables) como hicimos con el en la lecci\u00f3n 2, pero eso es un mucho trabajo! Afortunadamente para nosotros, Kit UNO R3 tiene una funci\u00f3n analogWrite que puede utilizar con pines marcados con un ~ a la salida de una cantidad variable de energ\u00eda los LEDs apropiados. El LED RGB tiene cuatro conductores. Hay un cable a la conexi\u00f3n positiva de cada uno de los LEDs individuales dentro del paquete y un patilla \u00fanica que est\u00e1 conectado a los tres lados negativos de los LEDs. En las fotograf\u00edas le mostramos 4 electrodo LED. Cada perno separado de color verde o azul o de rojo se llama \u00e1nodo. Siempre conectar\u00e1 \u00ab+\u00bb a \u00e9l. C\u00e1todo va a \"-\" (tierra). Si se conecta otra forma diferente el LED no se encender\u00e1. La com\u00fan conexi\u00f3n negativa del paquete LED es el segundo pasador de la parte plana. Tambi\u00e9n es el m\u00e1s largo de las cuatro patas y se conectar\u00e1n a la tierra. Cada LED dentro del paquete requiere su propio resistor de 220\u03a9 para prevenir demasiada corriente que fluye a trav\u00e9s de \u00e9l. Los tres conductores del positivo de los LEDs (uno rojo, uno verde y uno azul) est\u00e1n conectados a los pines de salida UNO con estas resistencias. Color La raz\u00f3n por la que usted puede mezclar cualquier color usted tiene gusto variando las cantidades de rojo, verde y azul de la luz es que el ojo tiene tres tipos de receptor de luz (rojo, verde y azul). Su ojo y el cerebro procesan las cantidades de rojo, verde y azul y conviertan en un color del espectro. En cierto modo, mediante el uso de los tres LEDs, estamos jugando un truco en el ojo. Esta misma idea se utiliza en televisores, donde la pantalla LCD tiene puntos de color rojo, verde y azul junto a unos a otros que componen cada p\u00edxel. Si establece el brillo de todos los tres LEDs al ser el mismo, el color general de la luz ser\u00e1 blanco. Si apagamos el LED azul, para que s\u00f3lo los LEDs rojo y verdes son el mismo brillo, la luz aparecer\u00e1 amarillo. Podemos controlar el brillo de cada una de las partes de rojas, verdes y azules del LED por separado, lo que es posible mezclar cualquier color que nos gusta. El color Negro no es tanto un color como una ausencia de luz. Por lo tanto, lo m\u00e1s cercano que podemos llegar a negro con el LED es apagar los tres colores. Teor\u00eda (PWM) Modulaci\u00f3n de ancho de pulso (PWM) es una t\u00e9cnica para el control de potencia. Tambi\u00e9n utilizamos aqu\u00ed para controlar el brillo de cada uno de los LEDs. El siguiente diagrama muestra que la se\u00f1al de uno de lo PWM pines en la UNO. Aproximadamente cada 1/500 de segundo, la salida PWM producir\u00e1 un pulso. La duraci\u00f3n de este pulso es controlada por la funci\u00f3n 'analogWrite'. As\u00ed: 'analogWrite(0)' no producir\u00e1 ning\u00fan pulso 'analogWrite(255)' producir\u00e1 un pulso que dura todo el camino hasta el pulso siguiente vencimiento, para que la salida es en realidad todo el tiempo. Si especificamos un valor en el analogWrite que est\u00e1 en alg\u00fan lugar entre 0 y 255, se producir un pulso. Si el pulso de salida es alto para el 5% del tiempo, entonces lo que nosotros estamos manejando s\u00f3lo recibir\u00e1 el 5% de potencia. Si la salida es 5V para el 90% del tiempo, la carga recibir\u00e1 el 90% de la potencia entregada a \u00e9l. Los LED se encender\u00e1n y apagar\u00e1n en esos periodos, pero nosotros percibiremos que el brillo del LED cambia. Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo // Define pines #define BLUE 3 #define GREEN 5 #define RED 6 void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE, OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } // define variables int redValue; int greenValue; int blueValue; // main loop void loop() { #define delayTime 10 // fading time between colors redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; // this is unnecessary as we've either turned on RED in SETUP // or in the previous loop ... regardless, this turns RED off // analogWrite(RED, 0); // delay(1000); for(int i = 0; i < 255; i += 1) // fades out red bring green full when i=255 { redValue -= 1; greenValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(RED, 255 - redValue); // analogWrite(GREEN, 255 - greenValue); analogWrite(RED, redValue); analogWrite(GREEN, greenValue); delay(delayTime); } redValue = 0; greenValue = 255; blueValue = 0; for(int i = 0; i < 255; i += 1) // fades out green bring blue full when i=255 { greenValue -= 1; blueValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(GREEN, 255 - greenValue); // analogWrite(BLUE, 255 - blueValue); analogWrite(GREEN, greenValue); analogWrite(BLUE, blueValue); delay(delayTime); } redValue = 0; greenValue = 0; blueValue = 255; for(int i = 0; i < 255; i += 1) // fades out blue bring red full when i=255 { // The following code has been rearranged to match the other two similar sections blueValue -= 1; redValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(BLUE, 255 - blueValue); // analogWrite(RED, 255 - redValue);1 analogWrite(BLUE, blueValue); analogWrite(RED, redValue); delay(delayTime); } } After wiring, please open the Sketch in folder path: Tutorial > English > code > Lesson 4 RGB LED > RGB_LED, and click UPLOAD to upload the program. See Lesson 2 for details about program uploading if there are any errors. The programa starts by specifying which pins are going to be used for each of the colors: // Define Pins #define BLUE 3 #define GREEN 5 #define RED 6 The next step is to write the 'setup' function. As we have learnt in earlier lessons, the setup function runs just once after the Arduino has reset. In this case, all it has to do is define the three pins we are using as beingoutputs. void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE,OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } Antes de echar un vistazo a la funci\u00f3n loop , veamos la \u00faltima funci\u00f3n en el proyecto. Las variables de definici\u00f3n: redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; Esta funci\u00f3n tiene tres argumentos, uno para el brillo de los LEDs rojos, verdes y azules. En cada caso de que el n\u00famero ser\u00e1 en el rango 0 a 255, donde 0 significa apagado y 255 significa brillo m\u00e1ximo. La funci\u00f3n entonces llama 'analogWrite' para ajustar el brillo de cada LED. Si nos fijamos en la funci\u00f3n loop se puede ver que ajuste la cantidad de luz roja, verde y azul que queremos mostrar y luego una pausa por un segundo antes de pasar al siguiente color. #define delayTime 10 // fading time between colors Delay(delayTime); Trate de a\u00f1adir algunos colores de los tuyos el dibujo y ver el efecto en tu LED.","title":"04.LEDRGB"},{"location":"arduino/04.LEDRGB/#leccion-4-rgb-led","text":"","title":"Lecci\u00f3n 4 RGB LED"},{"location":"arduino/04.LEDRGB/#resumen","text":"Los LED RGB son una forma divertida y f\u00e1cil para agregar color a sus proyectos. Puesto que es como regular 3 LED en uno, el uso y conenxi\u00f3n no es muy diferente. Existen 2 versiones: \u00c1nodo com\u00fan C\u00e1todo com\u00fan. \u00c1nodo com\u00fan utiliza 5V en el pin com\u00fan, mientras que el c\u00e1todo com\u00fan se conecta a tierra. Como con cualquier LED, tenemos que conectar algunas resistencias en l\u00ednea (3 total) as\u00ed que podemos limitar la corriente absorbida. En nuestro programa , se comienzan con el LED en el estado de color rojo, entonces se descolora a verde, luego se descolora azul y finalmente hacia el color rojo. Haciendo esto que nos pasar\u00e1 por la mayor parte del color que se puede lograr. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x M M de x (4) cables (cables de puente de macho a macho) (1) x RGB LED (3) resistencias de 220 ohmios x","title":"Resumen"},{"location":"arduino/04.LEDRGB/#rgb","text":"A primera vista, LEDs RGB (rojo, verde y azul) s\u00f3lo parecen regular LED. Sin embargo, dentro del paquete del LED generalmente, hay realmente tres LEDs, uno rojo, uno verde y s\u00ed, uno azul. Controlando el brillo de cada uno de los LEDs individuales, usted puede mezclar pr\u00e1cticamente cualquier color que desee. Mezclamos colores del mismo modo que ser\u00eda mezclar pintura en una paleta - ajustando el brillo de cada uno de los tres LEDs. La manera dura para hacer esto ser\u00eda usar valor diferentes resistencias (o resistencias variables) como hicimos con el en la lecci\u00f3n 2, pero eso es un mucho trabajo! Afortunadamente para nosotros, Kit UNO R3 tiene una funci\u00f3n analogWrite que puede utilizar con pines marcados con un ~ a la salida de una cantidad variable de energ\u00eda los LEDs apropiados. El LED RGB tiene cuatro conductores. Hay un cable a la conexi\u00f3n positiva de cada uno de los LEDs individuales dentro del paquete y un patilla \u00fanica que est\u00e1 conectado a los tres lados negativos de los LEDs. En las fotograf\u00edas le mostramos 4 electrodo LED. Cada perno separado de color verde o azul o de rojo se llama \u00e1nodo. Siempre conectar\u00e1 \u00ab+\u00bb a \u00e9l. C\u00e1todo va a \"-\" (tierra). Si se conecta otra forma diferente el LED no se encender\u00e1. La com\u00fan conexi\u00f3n negativa del paquete LED es el segundo pasador de la parte plana. Tambi\u00e9n es el m\u00e1s largo de las cuatro patas y se conectar\u00e1n a la tierra. Cada LED dentro del paquete requiere su propio resistor de 220\u03a9 para prevenir demasiada corriente que fluye a trav\u00e9s de \u00e9l. Los tres conductores del positivo de los LEDs (uno rojo, uno verde y uno azul) est\u00e1n conectados a los pines de salida UNO con estas resistencias.","title":"RGB"},{"location":"arduino/04.LEDRGB/#color","text":"La raz\u00f3n por la que usted puede mezclar cualquier color usted tiene gusto variando las cantidades de rojo, verde y azul de la luz es que el ojo tiene tres tipos de receptor de luz (rojo, verde y azul). Su ojo y el cerebro procesan las cantidades de rojo, verde y azul y conviertan en un color del espectro. En cierto modo, mediante el uso de los tres LEDs, estamos jugando un truco en el ojo. Esta misma idea se utiliza en televisores, donde la pantalla LCD tiene puntos de color rojo, verde y azul junto a unos a otros que componen cada p\u00edxel. Si establece el brillo de todos los tres LEDs al ser el mismo, el color general de la luz ser\u00e1 blanco. Si apagamos el LED azul, para que s\u00f3lo los LEDs rojo y verdes son el mismo brillo, la luz aparecer\u00e1 amarillo. Podemos controlar el brillo de cada una de las partes de rojas, verdes y azules del LED por separado, lo que es posible mezclar cualquier color que nos gusta. El color Negro no es tanto un color como una ausencia de luz. Por lo tanto, lo m\u00e1s cercano que podemos llegar a negro con el LED es apagar los tres colores.","title":"Color"},{"location":"arduino/04.LEDRGB/#teoria-pwm","text":"Modulaci\u00f3n de ancho de pulso (PWM) es una t\u00e9cnica para el control de potencia. Tambi\u00e9n utilizamos aqu\u00ed para controlar el brillo de cada uno de los LEDs. El siguiente diagrama muestra que la se\u00f1al de uno de lo PWM pines en la UNO. Aproximadamente cada 1/500 de segundo, la salida PWM producir\u00e1 un pulso. La duraci\u00f3n de este pulso es controlada por la funci\u00f3n 'analogWrite'. As\u00ed: 'analogWrite(0)' no producir\u00e1 ning\u00fan pulso 'analogWrite(255)' producir\u00e1 un pulso que dura todo el camino hasta el pulso siguiente vencimiento, para que la salida es en realidad todo el tiempo. Si especificamos un valor en el analogWrite que est\u00e1 en alg\u00fan lugar entre 0 y 255, se producir un pulso. Si el pulso de salida es alto para el 5% del tiempo, entonces lo que nosotros estamos manejando s\u00f3lo recibir\u00e1 el 5% de potencia. Si la salida es 5V para el 90% del tiempo, la carga recibir\u00e1 el 90% de la potencia entregada a \u00e9l. Los LED se encender\u00e1n y apagar\u00e1n en esos periodos, pero nosotros percibiremos que el brillo del LED cambia.","title":"Teor\u00eda (PWM)"},{"location":"arduino/04.LEDRGB/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/04.LEDRGB/#esquema","text":"","title":"Esquema"},{"location":"arduino/04.LEDRGB/#diagrama-de-cableado","text":"","title":"Diagrama de cableado"},{"location":"arduino/04.LEDRGB/#codigo","text":"// Define pines #define BLUE 3 #define GREEN 5 #define RED 6 void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE, OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } // define variables int redValue; int greenValue; int blueValue; // main loop void loop() { #define delayTime 10 // fading time between colors redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; // this is unnecessary as we've either turned on RED in SETUP // or in the previous loop ... regardless, this turns RED off // analogWrite(RED, 0); // delay(1000); for(int i = 0; i < 255; i += 1) // fades out red bring green full when i=255 { redValue -= 1; greenValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(RED, 255 - redValue); // analogWrite(GREEN, 255 - greenValue); analogWrite(RED, redValue); analogWrite(GREEN, greenValue); delay(delayTime); } redValue = 0; greenValue = 255; blueValue = 0; for(int i = 0; i < 255; i += 1) // fades out green bring blue full when i=255 { greenValue -= 1; blueValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(GREEN, 255 - greenValue); // analogWrite(BLUE, 255 - blueValue); analogWrite(GREEN, greenValue); analogWrite(BLUE, blueValue); delay(delayTime); } redValue = 0; greenValue = 0; blueValue = 255; for(int i = 0; i < 255; i += 1) // fades out blue bring red full when i=255 { // The following code has been rearranged to match the other two similar sections blueValue -= 1; redValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(BLUE, 255 - blueValue); // analogWrite(RED, 255 - redValue);1 analogWrite(BLUE, blueValue); analogWrite(RED, redValue); delay(delayTime); } } After wiring, please open the Sketch in folder path: Tutorial > English > code > Lesson 4 RGB LED > RGB_LED, and click UPLOAD to upload the program. See Lesson 2 for details about program uploading if there are any errors. The programa starts by specifying which pins are going to be used for each of the colors: // Define Pins #define BLUE 3 #define GREEN 5 #define RED 6 The next step is to write the 'setup' function. As we have learnt in earlier lessons, the setup function runs just once after the Arduino has reset. In this case, all it has to do is define the three pins we are using as beingoutputs. void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE,OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } Antes de echar un vistazo a la funci\u00f3n loop , veamos la \u00faltima funci\u00f3n en el proyecto. Las variables de definici\u00f3n: redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; Esta funci\u00f3n tiene tres argumentos, uno para el brillo de los LEDs rojos, verdes y azules. En cada caso de que el n\u00famero ser\u00e1 en el rango 0 a 255, donde 0 significa apagado y 255 significa brillo m\u00e1ximo. La funci\u00f3n entonces llama 'analogWrite' para ajustar el brillo de cada LED. Si nos fijamos en la funci\u00f3n loop se puede ver que ajuste la cantidad de luz roja, verde y azul que queremos mostrar y luego una pausa por un segundo antes de pasar al siguiente color. #define delayTime 10 // fading time between colors Delay(delayTime); Trate de a\u00f1adir algunos colores de los tuyos el dibujo y ver el efecto en tu LED.","title":"C\u00f3digo"},{"location":"arduino/05.Pulsador/","text":"Lecci\u00f3n 5 Entradas Digitales Resumen En esta lecci\u00f3n, usted aprender\u00e1 a utilizar los botones con entradas digitales para encender y apagar un LED. Presionar el bot\u00f3n se encender\u00e1 el LED; pulsar el otro bot\u00f3n se apagar\u00e1 el LED. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x LED rojo de 5mm x (1) (1) x resistencia de 220 ohmios interruptores de presi\u00f3n x (2) (7) x M M cables (cables de puente de macho a macho) Introducci\u00f3n del componente Pulsadores Los interruptores son componentes muy simples. Cuando pulse un bot\u00f3n o girar una palanca, conectan dos contactos para que la electricidad fluya a trav\u00e9s de ellos. Los interruptores t\u00e1ctiles poco utilizados en esta lecci\u00f3n tienen cuatro conexiones, que pueden ser un poco confusas En realidad, hay realmente dos conexiones el\u00e9ctricas. Dentro del paquete de interruptor, pins B y C se conectan entre s\u00ed, como son A y D. Conexi\u00f3n Esquema Diagrama de cableado Aunque los cuerpos de los interruptores son cuadrados, los pasadores sobresalen de los lados opuestos del interruptor. Esto significa que los pines s\u00f3lo estar\u00e1n lo suficientemente separados cuando se colocan correctamente en la placa de pruebas. Recuerde que el LED tiene que tener el cable negativo m\u00e1s corto a la izquierda. C\u00f3digo Despu\u00e9s de cablearlo, por favor, abra el programa en el c\u00f3digo de carpeta - Lecci\u00f3n 5 entradas digitales y presione UPLOAD para cargar el programa. Si se aparecen errores, ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre el tutorial de subir programa. El bosquejo en su placa UNO de carga. Presionando el bot\u00f3n izquierdo se encender\u00e1 el LED mientras que pulsando el bot\u00f3n derecho apagar\u00e1. La primera parte del proyecto define tres variables para ls tres patas que se van a utilizar. El 'ledPin' es el pin de salida y 'pinBotonA' se refiere al interruptor m\u00e1s cerca de la parte superior de la placa y 'buttonBpin' para el otro interruptor. La funci\u00f3n de setup define el ledPin como una salida normal, pero ahora tenemos las dos entradas para ocuparse. En este caso, utilizamos el conjunto el pinMode ser 'INPUT_PULLUP' como este: El modo pin de INPUT_PULLUP significa que el pin debe ser utilizado como una entrada, pero que si nada mas se conecta a la entrada, la entrada tendra el valor HIGH . En otras palabras, el valor predeterminado de la entrada es HIGH , a menos que se ponga a LOW al pulsar el bot\u00f3n. Por esta raz\u00f3n los interruptores est\u00e1n conectados a tierra. Cuando un interruptor se presiona, se conecta la clavija de entrada a la tierra, para que ya no es alta. Puesto que la entrada es normalmente alta y va s\u00f3lo baja cuando se pulsa el bot\u00f3n, la l\u00f3gica es un poco boca abajo. Nosotros nos encargaremos de esto en la funci\u00f3n loop En la funci\u00f3n loop hay dos declaraciones de 'si'. Uno para cada bot\u00f3n. Cada uno hace un 'digitalRead' en la entrada adecuada. Recuerde que si se presiona el bot\u00f3n, la entrada correspondiente ser\u00e1 baja, si el bot\u00f3n A es bajo, entonces digitalWrite pone el valor HIGH el PIN al que tenemos conectado el LED, y este se enciende. C\u00f3digo completo int ledPin = 5; int pinBotonA = 9; int pinBotonB = 8; byte leds = 0; void setup() { pinMode(ledPin, OUTPUT); pinMode(pinBotonA, INPUT_PULLUP); pinMode(pinBotonB, INPUT_PULLUP); } void loop() { if (digitalRead(pinBotonA) == LOW) { digitalWrite(ledPin, HIGH); } if (digitalRead(pinBotonB) == LOW) { digitalWrite(ledPin, LOW); } } Del mismo modo, si se presiona el bot\u00f3n B, un bajo se escribe en el ledPin.","title":"05.Pulsador"},{"location":"arduino/05.Pulsador/#leccion-5-entradas-digitales","text":"","title":"Lecci\u00f3n 5 Entradas Digitales"},{"location":"arduino/05.Pulsador/#resumen","text":"En esta lecci\u00f3n, usted aprender\u00e1 a utilizar los botones con entradas digitales para encender y apagar un LED. Presionar el bot\u00f3n se encender\u00e1 el LED; pulsar el otro bot\u00f3n se apagar\u00e1 el LED. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x LED rojo de 5mm x (1) (1) x resistencia de 220 ohmios interruptores de presi\u00f3n x (2) (7) x M M cables (cables de puente de macho a macho) Introducci\u00f3n del componente","title":"Resumen"},{"location":"arduino/05.Pulsador/#pulsadores","text":"Los interruptores son componentes muy simples. Cuando pulse un bot\u00f3n o girar una palanca, conectan dos contactos para que la electricidad fluya a trav\u00e9s de ellos. Los interruptores t\u00e1ctiles poco utilizados en esta lecci\u00f3n tienen cuatro conexiones, que pueden ser un poco confusas En realidad, hay realmente dos conexiones el\u00e9ctricas. Dentro del paquete de interruptor, pins B y C se conectan entre s\u00ed, como son A y D.","title":"Pulsadores"},{"location":"arduino/05.Pulsador/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/05.Pulsador/#esquema","text":"","title":"Esquema"},{"location":"arduino/05.Pulsador/#diagrama-de-cableado","text":"Aunque los cuerpos de los interruptores son cuadrados, los pasadores sobresalen de los lados opuestos del interruptor. Esto significa que los pines s\u00f3lo estar\u00e1n lo suficientemente separados cuando se colocan correctamente en la placa de pruebas. Recuerde que el LED tiene que tener el cable negativo m\u00e1s corto a la izquierda.","title":"Diagrama de cableado"},{"location":"arduino/05.Pulsador/#codigo","text":"Despu\u00e9s de cablearlo, por favor, abra el programa en el c\u00f3digo de carpeta - Lecci\u00f3n 5 entradas digitales y presione UPLOAD para cargar el programa. Si se aparecen errores, ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre el tutorial de subir programa. El bosquejo en su placa UNO de carga. Presionando el bot\u00f3n izquierdo se encender\u00e1 el LED mientras que pulsando el bot\u00f3n derecho apagar\u00e1. La primera parte del proyecto define tres variables para ls tres patas que se van a utilizar. El 'ledPin' es el pin de salida y 'pinBotonA' se refiere al interruptor m\u00e1s cerca de la parte superior de la placa y 'buttonBpin' para el otro interruptor. La funci\u00f3n de setup define el ledPin como una salida normal, pero ahora tenemos las dos entradas para ocuparse. En este caso, utilizamos el conjunto el pinMode ser 'INPUT_PULLUP' como este: El modo pin de INPUT_PULLUP significa que el pin debe ser utilizado como una entrada, pero que si nada mas se conecta a la entrada, la entrada tendra el valor HIGH . En otras palabras, el valor predeterminado de la entrada es HIGH , a menos que se ponga a LOW al pulsar el bot\u00f3n. Por esta raz\u00f3n los interruptores est\u00e1n conectados a tierra. Cuando un interruptor se presiona, se conecta la clavija de entrada a la tierra, para que ya no es alta. Puesto que la entrada es normalmente alta y va s\u00f3lo baja cuando se pulsa el bot\u00f3n, la l\u00f3gica es un poco boca abajo. Nosotros nos encargaremos de esto en la funci\u00f3n loop En la funci\u00f3n loop hay dos declaraciones de 'si'. Uno para cada bot\u00f3n. Cada uno hace un 'digitalRead' en la entrada adecuada. Recuerde que si se presiona el bot\u00f3n, la entrada correspondiente ser\u00e1 baja, si el bot\u00f3n A es bajo, entonces digitalWrite pone el valor HIGH el PIN al que tenemos conectado el LED, y este se enciende.","title":"C\u00f3digo"},{"location":"arduino/05.Pulsador/#codigo-completo","text":"int ledPin = 5; int pinBotonA = 9; int pinBotonB = 8; byte leds = 0; void setup() { pinMode(ledPin, OUTPUT); pinMode(pinBotonA, INPUT_PULLUP); pinMode(pinBotonB, INPUT_PULLUP); } void loop() { if (digitalRead(pinBotonA) == LOW) { digitalWrite(ledPin, HIGH); } if (digitalRead(pinBotonB) == LOW) { digitalWrite(ledPin, LOW); } } Del mismo modo, si se presiona el bot\u00f3n B, un bajo se escribe en el ledPin.","title":"C\u00f3digo completo"},{"location":"arduino/06.zumbador%20activo/","text":"Lecci\u00f3n 6 Activar zumbador Resumen En esta lecci\u00f3n, aprender\u00e1 a generar un sonido con un timbre activo. Componente necesario: 1 Placa Arduino UNO 1 zumbador de Active x 2 F M cables (cables de hembra a macho DuPont) Zumbador Los zumbadores electr\u00f3nicos son ampliamente utilizados en ordenadores, impresoras, fotocopiadoras, alarmas, juguetes electr\u00f3nicos, dispositivos electr\u00f3nicos automotores, tel\u00e9fonos, alarmas y otros productos electr\u00f3nicos para dispositivos de voz. Se pueden categorizar en activos y pasivos . Gire que los pernos de dos zumbadores boca arriba. Con un tablero de circuito verde es un zumbador pasivo, mientras que el otro cerrado con una cinta negra es un activo. Un zumbador activo tiene una fuente oscilante integrada, por lo que va a generar un sonido cuando se electrifica. El zumbador activo es a menudo m\u00e1s caro Un zumbador pasivo no tiene esa fuente para que no pitan si se utilizan se\u00f1ales de DC; en cambio, necesitar\u00e1 usar ondas cuadradas cuya frecuencia es entre 2K y 5K manejarlo. Conexi\u00f3n Esquema Diagrama de conexiones C\u00f3digo int buzzer = 12;//the pin of the active buzzer void setup() { pinMode(buzzer,OUTPUT);//initialize the buzzer pin as an output } void loop() { unsigned char i; while(1) { //output an frequency for(i=0;i<80;i++) { digitalWrite(buzzer,HIGH); delay(1);//wait for 1ms digitalWrite(buzzer,LOW); delay(1);//wait for 1ms } //output another frequency for(i=0;i<100;i++) { digitalWrite(buzzer,HIGH); delay(2);//wait for 2ms digitalWrite(buzzer,LOW); delay(2);//wait for 2ms } } }","title":"06.zumbador activo"},{"location":"arduino/06.zumbador%20activo/#leccion-6-activar-zumbador","text":"","title":"Lecci\u00f3n 6 Activar zumbador"},{"location":"arduino/06.zumbador%20activo/#resumen","text":"En esta lecci\u00f3n, aprender\u00e1 a generar un sonido con un timbre activo. Componente necesario: 1 Placa Arduino UNO 1 zumbador de Active x 2 F M cables (cables de hembra a macho DuPont)","title":"Resumen"},{"location":"arduino/06.zumbador%20activo/#zumbador","text":"Los zumbadores electr\u00f3nicos son ampliamente utilizados en ordenadores, impresoras, fotocopiadoras, alarmas, juguetes electr\u00f3nicos, dispositivos electr\u00f3nicos automotores, tel\u00e9fonos, alarmas y otros productos electr\u00f3nicos para dispositivos de voz. Se pueden categorizar en activos y pasivos . Gire que los pernos de dos zumbadores boca arriba. Con un tablero de circuito verde es un zumbador pasivo, mientras que el otro cerrado con una cinta negra es un activo. Un zumbador activo tiene una fuente oscilante integrada, por lo que va a generar un sonido cuando se electrifica. El zumbador activo es a menudo m\u00e1s caro Un zumbador pasivo no tiene esa fuente para que no pitan si se utilizan se\u00f1ales de DC; en cambio, necesitar\u00e1 usar ondas cuadradas cuya frecuencia es entre 2K y 5K manejarlo.","title":"Zumbador"},{"location":"arduino/06.zumbador%20activo/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/06.zumbador%20activo/#esquema","text":"","title":"Esquema"},{"location":"arduino/06.zumbador%20activo/#diagrama-de-conexiones","text":"","title":"Diagrama de conexiones"},{"location":"arduino/06.zumbador%20activo/#codigo","text":"int buzzer = 12;//the pin of the active buzzer void setup() { pinMode(buzzer,OUTPUT);//initialize the buzzer pin as an output } void loop() { unsigned char i; while(1) { //output an frequency for(i=0;i<80;i++) { digitalWrite(buzzer,HIGH); delay(1);//wait for 1ms digitalWrite(buzzer,LOW); delay(1);//wait for 1ms } //output another frequency for(i=0;i<100;i++) { digitalWrite(buzzer,HIGH); delay(2);//wait for 2ms digitalWrite(buzzer,LOW); delay(2);//wait for 2ms } } }","title":"C\u00f3digo"},{"location":"arduino/07.zumbador-pasivo/","text":"Lecci\u00f3n 7 Zumbador Pasivo Resumen El prop\u00f3sito del experimento es generar ocho sonidos, cada sonido dura 0,5 segundos: Do (523Hz) Re (587Hz) Mi (659Hz) Fa (698Hz) Sol (784Hz) La (880Hz) Si (988Hz) Do alto (1047Hz) Componentes necesarios (1) x Placa Arduino UNO (1) zumbador pasivo de x (2) x F M cables (cables de hembra a macho DuPont) Zumbador pasivo El principio de funcionamiento del zumbador pasiva est\u00e1 utilizando PWM generar audio para hacer el aire para que vibre. Debidamente cambiado tanto como la frecuencia de vibraci\u00f3n, puede generar diferentes sonidos. Por ejemplo, enviando un pulso de 523Hz, puede generar Alto, pulso de 587Hz, puede generar el rango medio, pulso de 659Hz, que puede producir Mi de rango medio. Por el timbre, puede reproducir una canci\u00f3n. Nosotros debemos tener cuidado de no utilizar la funci\u00f3n de () escritura anal\u00f3gica Kit UNO R3 para generar un pulso el timbre, porque la salida de pulso de anal\u00f3gico (de escritura) se fija (500 Hz). Conexi\u00f3n Esquema Diagrama de conexiones Cableado el zumbador conectado a la placa UNO R3, rojo (positivo) que el pin8, cable negro (negativo) a la tierra. C\u00f3digo #include \"pitches.h\" // notes in the melody: int melody[] = { NOTE_C5, NOTE_D5, NOTE_E5, NOTE_F5, NOTE_G5, NOTE_A5, NOTE_B5, NOTE_C6}; int duration = 500; // 500 miliseconds void setup() { } void loop() { for (int thisNote = 0; thisNote < 8; thisNote++) { // pin8 output the voice, every scale is 0.5 sencond tone(8, melody[thisNote], duration); // Output the voice after several minutes delay(1000); } // restart after two seconds delay(2000); } Necesitaremos tener un archivo en la misma carpeta con las notas, que llamaremos pitches.h . En este archivo guardaremos las constantes de cada una de las notas necesarias. /************************************************* * Public Constants *************************************************/ #define NOTE_B0 31 #define NOTE_C1 33 #define NOTE_CS1 35 #define NOTE_D1 37 #define NOTE_DS1 39 #define NOTE_E1 41 #define NOTE_F1 44 #define NOTE_FS1 46 #define NOTE_G1 49 #define NOTE_GS1 52 #define NOTE_A1 55 #define NOTE_AS1 58 #define NOTE_B1 62 #define NOTE_C2 65 #define NOTE_CS2 69 #define NOTE_D2 73 #define NOTE_DS2 78 #define NOTE_E2 82 #define NOTE_F2 87 #define NOTE_FS2 93 #define NOTE_G2 98 #define NOTE_GS2 104 #define NOTE_A2 110 #define NOTE_AS2 117 #define NOTE_B2 123 #define NOTE_C3 131 #define NOTE_CS3 139 #define NOTE_D3 147 #define NOTE_DS3 156 #define NOTE_E3 165 #define NOTE_F3 175 #define NOTE_FS3 185 #define NOTE_G3 196 #define NOTE_GS3 208 #define NOTE_A3 220 #define NOTE_AS3 233 #define NOTE_B3 247 #define NOTE_C4 262 #define NOTE_CS4 277 #define NOTE_D4 294 #define NOTE_DS4 311 #define NOTE_E4 330 #define NOTE_F4 349 #define NOTE_FS4 370 #define NOTE_G4 392 #define NOTE_GS4 415 #define NOTE_A4 440 #define NOTE_AS4 466 #define NOTE_B4 494 #define NOTE_C5 523 #define NOTE_CS5 554 #define NOTE_D5 587 #define NOTE_DS5 622 #define NOTE_E5 659 #define NOTE_F5 698 #define NOTE_FS5 740 #define NOTE_G5 784 #define NOTE_GS5 831 #define NOTE_A5 880 #define NOTE_AS5 932 #define NOTE_B5 988 #define NOTE_C6 1047 #define NOTE_CS6 1109 #define NOTE_D6 1175 #define NOTE_DS6 1245 #define NOTE_E6 1319 #define NOTE_F6 1397 #define NOTE_FS6 1480 #define NOTE_G6 1568 #define NOTE_GS6 1661 #define NOTE_A6 1760 #define NOTE_AS6 1865 #define NOTE_B6 1976 #define NOTE_C7 2093 #define NOTE_CS7 2217 #define NOTE_D7 2349 #define NOTE_DS7 2489 #define NOTE_E7 2637 #define NOTE_F7 2794 #define NOTE_FS7 2960 #define NOTE_G7 3136 #define NOTE_GS7 3322 #define NOTE_A7 3520 #define NOTE_AS7 3729 #define NOTE_B7 3951 #define NOTE_C8 4186 #define NOTE_CS8 4435 #define NOTE_D8 4699 #define NOTE_DS8 4978","title":"07.zumbador pasivo"},{"location":"arduino/07.zumbador-pasivo/#leccion-7-zumbador-pasivo","text":"","title":"Lecci\u00f3n 7 Zumbador Pasivo"},{"location":"arduino/07.zumbador-pasivo/#resumen","text":"El prop\u00f3sito del experimento es generar ocho sonidos, cada sonido dura 0,5 segundos: Do (523Hz) Re (587Hz) Mi (659Hz) Fa (698Hz) Sol (784Hz) La (880Hz) Si (988Hz) Do alto (1047Hz)","title":"Resumen"},{"location":"arduino/07.zumbador-pasivo/#componentes-necesarios","text":"(1) x Placa Arduino UNO (1) zumbador pasivo de x (2) x F M cables (cables de hembra a macho DuPont)","title":"Componentes necesarios"},{"location":"arduino/07.zumbador-pasivo/#zumbador-pasivo","text":"El principio de funcionamiento del zumbador pasiva est\u00e1 utilizando PWM generar audio para hacer el aire para que vibre. Debidamente cambiado tanto como la frecuencia de vibraci\u00f3n, puede generar diferentes sonidos. Por ejemplo, enviando un pulso de 523Hz, puede generar Alto, pulso de 587Hz, puede generar el rango medio, pulso de 659Hz, que puede producir Mi de rango medio. Por el timbre, puede reproducir una canci\u00f3n. Nosotros debemos tener cuidado de no utilizar la funci\u00f3n de () escritura anal\u00f3gica Kit UNO R3 para generar un pulso el timbre, porque la salida de pulso de anal\u00f3gico (de escritura) se fija (500 Hz).","title":"Zumbador pasivo"},{"location":"arduino/07.zumbador-pasivo/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/07.zumbador-pasivo/#esquema","text":"","title":"Esquema"},{"location":"arduino/07.zumbador-pasivo/#diagrama-de-conexiones","text":"Cableado el zumbador conectado a la placa UNO R3, rojo (positivo) que el pin8, cable negro (negativo) a la tierra.","title":"Diagrama de conexiones"},{"location":"arduino/07.zumbador-pasivo/#codigo","text":"#include \"pitches.h\" // notes in the melody: int melody[] = { NOTE_C5, NOTE_D5, NOTE_E5, NOTE_F5, NOTE_G5, NOTE_A5, NOTE_B5, NOTE_C6}; int duration = 500; // 500 miliseconds void setup() { } void loop() { for (int thisNote = 0; thisNote < 8; thisNote++) { // pin8 output the voice, every scale is 0.5 sencond tone(8, melody[thisNote], duration); // Output the voice after several minutes delay(1000); } // restart after two seconds delay(2000); } Necesitaremos tener un archivo en la misma carpeta con las notas, que llamaremos pitches.h . En este archivo guardaremos las constantes de cada una de las notas necesarias. /************************************************* * Public Constants *************************************************/ #define NOTE_B0 31 #define NOTE_C1 33 #define NOTE_CS1 35 #define NOTE_D1 37 #define NOTE_DS1 39 #define NOTE_E1 41 #define NOTE_F1 44 #define NOTE_FS1 46 #define NOTE_G1 49 #define NOTE_GS1 52 #define NOTE_A1 55 #define NOTE_AS1 58 #define NOTE_B1 62 #define NOTE_C2 65 #define NOTE_CS2 69 #define NOTE_D2 73 #define NOTE_DS2 78 #define NOTE_E2 82 #define NOTE_F2 87 #define NOTE_FS2 93 #define NOTE_G2 98 #define NOTE_GS2 104 #define NOTE_A2 110 #define NOTE_AS2 117 #define NOTE_B2 123 #define NOTE_C3 131 #define NOTE_CS3 139 #define NOTE_D3 147 #define NOTE_DS3 156 #define NOTE_E3 165 #define NOTE_F3 175 #define NOTE_FS3 185 #define NOTE_G3 196 #define NOTE_GS3 208 #define NOTE_A3 220 #define NOTE_AS3 233 #define NOTE_B3 247 #define NOTE_C4 262 #define NOTE_CS4 277 #define NOTE_D4 294 #define NOTE_DS4 311 #define NOTE_E4 330 #define NOTE_F4 349 #define NOTE_FS4 370 #define NOTE_G4 392 #define NOTE_GS4 415 #define NOTE_A4 440 #define NOTE_AS4 466 #define NOTE_B4 494 #define NOTE_C5 523 #define NOTE_CS5 554 #define NOTE_D5 587 #define NOTE_DS5 622 #define NOTE_E5 659 #define NOTE_F5 698 #define NOTE_FS5 740 #define NOTE_G5 784 #define NOTE_GS5 831 #define NOTE_A5 880 #define NOTE_AS5 932 #define NOTE_B5 988 #define NOTE_C6 1047 #define NOTE_CS6 1109 #define NOTE_D6 1175 #define NOTE_DS6 1245 #define NOTE_E6 1319 #define NOTE_F6 1397 #define NOTE_FS6 1480 #define NOTE_G6 1568 #define NOTE_GS6 1661 #define NOTE_A6 1760 #define NOTE_AS6 1865 #define NOTE_B6 1976 #define NOTE_C7 2093 #define NOTE_CS7 2217 #define NOTE_D7 2349 #define NOTE_DS7 2489 #define NOTE_E7 2637 #define NOTE_F7 2794 #define NOTE_FS7 2960 #define NOTE_G7 3136 #define NOTE_GS7 3322 #define NOTE_A7 3520 #define NOTE_AS7 3729 #define NOTE_B7 3951 #define NOTE_C8 4186 #define NOTE_CS8 4435 #define NOTE_D8 4699 #define NOTE_DS8 4978","title":"C\u00f3digo"},{"location":"arduino/08.Interruptor-bola/","text":"Lecci\u00f3n 8 Interruptor de bola de inclinaci\u00f3n Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar un interruptor de bola de inclinaci\u00f3n para detectar el peque\u00f1o \u00e1ngulo de inclinaci\u00f3n. Componentes Requeridos (1) x Placa Arduino UNO (1) x interruptor de inclinaci\u00f3n bola (2) x F-M wires (cables de hembra a macho DuPont) Sensor de inclinaci\u00f3n Los sensores de inclinaci\u00f3n (interruptor de bola de inclinaci\u00f3n) le permiten detectar orientaci\u00f3n o inclinaci\u00f3n. Son peque\u00f1os, econ\u00f3micos, de bajo consumo y f\u00e1ciles de usar. Si se usan correctamente, no se desgastar\u00e1n. Su simplicidad los hace populares para los juguetes, los admin\u00edculos y los aparatos. A veces, se conocen como \"interruptores de mercurio\", \"interruptores de inclinaci\u00f3n\" o \"sensores de bola rodante\" por razones obvias. Se componen generalmente de una cavidad de una cierta clase (cil\u00edndrica es popular, aunque no siempre) con una masa libre conductora adentro, tal como una gota del mercurio o bola rodante. Un extremo de la cavidad tiene dos elementos conductores (polos). Cuando el sensor est\u00e1 orientado de tal manera que dicho extremo est\u00e1 hacia abajo, la masa rueda sobre los polos y los cortocircuitos, actuando como un interruptor de tiro. Aunque no es tan preciso ni flexible como un aceler\u00f3metro completo, los interruptores de inclinaci\u00f3n pueden detectar movimiento u orientaci\u00f3n. Otro beneficio es que los grandes pueden cambiar de energ\u00eda por su cuenta. Los aceler\u00f3metros, por otro lado, producen voltaje digital o anal\u00f3gico que luego deben analizarse utilizando circuitos extra. Conexi\u00f3n Esquema Diagrama de conexiones C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 8 interruptor de la bola y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error.","title":"Lecci\u00f3n 8 Interruptor de bola de inclinaci\u00f3n"},{"location":"arduino/08.Interruptor-bola/#leccion-8-interruptor-de-bola-de-inclinacion","text":"","title":"Lecci\u00f3n 8 Interruptor de bola de inclinaci\u00f3n"},{"location":"arduino/08.Interruptor-bola/#resumen","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar un interruptor de bola de inclinaci\u00f3n para detectar el peque\u00f1o \u00e1ngulo de inclinaci\u00f3n.","title":"Resumen"},{"location":"arduino/08.Interruptor-bola/#componentes-requeridos","text":"(1) x Placa Arduino UNO (1) x interruptor de inclinaci\u00f3n bola (2) x F-M wires (cables de hembra a macho DuPont)","title":"Componentes Requeridos"},{"location":"arduino/08.Interruptor-bola/#sensor-de-inclinacion","text":"Los sensores de inclinaci\u00f3n (interruptor de bola de inclinaci\u00f3n) le permiten detectar orientaci\u00f3n o inclinaci\u00f3n. Son peque\u00f1os, econ\u00f3micos, de bajo consumo y f\u00e1ciles de usar. Si se usan correctamente, no se desgastar\u00e1n. Su simplicidad los hace populares para los juguetes, los admin\u00edculos y los aparatos. A veces, se conocen como \"interruptores de mercurio\", \"interruptores de inclinaci\u00f3n\" o \"sensores de bola rodante\" por razones obvias. Se componen generalmente de una cavidad de una cierta clase (cil\u00edndrica es popular, aunque no siempre) con una masa libre conductora adentro, tal como una gota del mercurio o bola rodante. Un extremo de la cavidad tiene dos elementos conductores (polos). Cuando el sensor est\u00e1 orientado de tal manera que dicho extremo est\u00e1 hacia abajo, la masa rueda sobre los polos y los cortocircuitos, actuando como un interruptor de tiro. Aunque no es tan preciso ni flexible como un aceler\u00f3metro completo, los interruptores de inclinaci\u00f3n pueden detectar movimiento u orientaci\u00f3n. Otro beneficio es que los grandes pueden cambiar de energ\u00eda por su cuenta. Los aceler\u00f3metros, por otro lado, producen voltaje digital o anal\u00f3gico que luego deben analizarse utilizando circuitos extra.","title":"Sensor de inclinaci\u00f3n"},{"location":"arduino/08.Interruptor-bola/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/08.Interruptor-bola/#esquema","text":"","title":"Esquema"},{"location":"arduino/08.Interruptor-bola/#diagrama-de-conexiones","text":"","title":"Diagrama de conexiones"},{"location":"arduino/08.Interruptor-bola/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 8 interruptor de la bola y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error.","title":"C\u00f3digo"},{"location":"arduino/09.Servo/","text":"Lecci\u00f3n 9 Servo Resumen Los servos son un tipo especial de motor de c.c. que se caracterizan por su capacidad para posicionarse de forma inmediata en cualquier posici\u00f3n dentro de su intervalo de operaci\u00f3n. Se mueven en una precisi\u00f3n de 180\u00ba como m\u00e1ximo. El servo tiene un eje que puede girar y que es accionado por un motor. La posici\u00f3n del eje puede ser controlada con una se\u00f1al anal\u00f3gica. Para ello, el servomotor espera un tren de pulsos que se corresponde con el movimiento a realizar. El Servo tiene tres cables: - Marr\u00f3n es el cable a tierra y deben conectarse a GND puerto UNO, el r - Rojo es el cable de corriente y debe conectarse al puerto de 5v - Naranja es el cable de se\u00f1al y debe conectarse al puerto 9. Componentes necesario: Cant Elemento 1 Placa Arduino UNO 1 Servo (SG90) 1 M cables (cables de puente de macho a macho) Servomotor SG90 Par\u00e1metro Valor Longitud del cable: 25cm Sin carga; Velocidad: 0,12 seg/60 degree (4.8V), 0.10 sec/60 grados (6.0V) Puesto de par (4.8V): 1,6 kg/cm Temperatura: -30 ~ 60' C Ancho de banda muerta: 5 us Voltaje de funcionamiento: 3.5 ~ 6V Dimensi\u00f3n: 1.26 en x 1,18 en x 0,47 en (3,2 x 3 cm x 1.2 cm) Peso: 4,73 onzas (134) El servo viene con diferentes accesorios que se pueden utilizar para sujetarlo a otras piezas. Esquema de conexi\u00f3n Diagrama de cableado Montaje Necesitaremos 3 jumpers para conectar el servo a la placa. C\u00f3digo Antes de ejecutar esto, debemos incluir la biblioteca servo . Esta librer\u00eda incorpora funciones que nos permitir\u00e1n manejar de forma m\u00e1s sencilla el comportamiento del motor. En caso de no tenerla, podr\u00edamos incluirla descargando el archivo .zip y seguir los siguientes pasos: Un c\u00f3digo de ejemplo ser\u00eda el siguiente. Este c\u00f3digo mueve el eje del motor 180 grados en una direcci\u00f3n y luego en la contraria, indefinidamente #include <Servo.h> Servo myservo; // create servo object to control a servo // twelve servo objects can be created on most boards int pos = 0; // variable to store the servo position void setup() { myservo.attach(9); // Le asignamos el PIN 9. } void loop() { for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees // in steps of 1 degree myservo.write(pos); // tell servo to go to position in variable 'pos' delay(15); // waits 15ms for the servo to reach the position } for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees myservo.write(pos); // tell servo to go to position in variable 'pos' delay(15); // waits 15ms for the servo to reach the position } } Servo MG995 El servomotor MG995 es un servomotor digital de alta velocidad y alta precisi\u00f3n. El servomotor est\u00e1 construido con una carcasa de pl\u00e1stico reforzado y un eje de metal. El servomotor es compatible con la mayor\u00eda de los sistemas de control remoto de radiofrecuencia y puede ser controlado por un microcontrolador o un ordenador. El servomotor tiene una salida de 5 V y una corriente m\u00e1xima de 2 A. El servomotor puede alcanzar una velocidad de giro de 0,12 segundos por vuelta. Comparativa: El SG90 es un microservo m\u00e1s peque\u00f1o y ligero que el MG995. Tambi\u00e9n es m\u00e1s econ\u00f3mico. El SG90 tiene un rango de movimiento de aproximadamente 180 grados, mientras que el MG995 tiene un rango de movimiento de aproximadamente 360 grados.","title":"09.Servo"},{"location":"arduino/09.Servo/#leccion-9-servo","text":"","title":"Lecci\u00f3n 9 Servo"},{"location":"arduino/09.Servo/#resumen","text":"Los servos son un tipo especial de motor de c.c. que se caracterizan por su capacidad para posicionarse de forma inmediata en cualquier posici\u00f3n dentro de su intervalo de operaci\u00f3n. Se mueven en una precisi\u00f3n de 180\u00ba como m\u00e1ximo. El servo tiene un eje que puede girar y que es accionado por un motor. La posici\u00f3n del eje puede ser controlada con una se\u00f1al anal\u00f3gica. Para ello, el servomotor espera un tren de pulsos que se corresponde con el movimiento a realizar. El Servo tiene tres cables: - Marr\u00f3n es el cable a tierra y deben conectarse a GND puerto UNO, el r - Rojo es el cable de corriente y debe conectarse al puerto de 5v - Naranja es el cable de se\u00f1al y debe conectarse al puerto 9. Componentes necesario: Cant Elemento 1 Placa Arduino UNO 1 Servo (SG90) 1 M cables (cables de puente de macho a macho)","title":"Resumen"},{"location":"arduino/09.Servo/#servomotor-sg90","text":"Par\u00e1metro Valor Longitud del cable: 25cm Sin carga; Velocidad: 0,12 seg/60 degree (4.8V), 0.10 sec/60 grados (6.0V) Puesto de par (4.8V): 1,6 kg/cm Temperatura: -30 ~ 60' C Ancho de banda muerta: 5 us Voltaje de funcionamiento: 3.5 ~ 6V Dimensi\u00f3n: 1.26 en x 1,18 en x 0,47 en (3,2 x 3 cm x 1.2 cm) Peso: 4,73 onzas (134) El servo viene con diferentes accesorios que se pueden utilizar para sujetarlo a otras piezas.","title":"Servomotor SG90"},{"location":"arduino/09.Servo/#esquema-de-conexion","text":"","title":"Esquema de conexi\u00f3n"},{"location":"arduino/09.Servo/#diagrama-de-cableado","text":"","title":"Diagrama de cableado"},{"location":"arduino/09.Servo/#montaje","text":"Necesitaremos 3 jumpers para conectar el servo a la placa.","title":"Montaje"},{"location":"arduino/09.Servo/#codigo","text":"Antes de ejecutar esto, debemos incluir la biblioteca servo . Esta librer\u00eda incorpora funciones que nos permitir\u00e1n manejar de forma m\u00e1s sencilla el comportamiento del motor. En caso de no tenerla, podr\u00edamos incluirla descargando el archivo .zip y seguir los siguientes pasos: Un c\u00f3digo de ejemplo ser\u00eda el siguiente. Este c\u00f3digo mueve el eje del motor 180 grados en una direcci\u00f3n y luego en la contraria, indefinidamente #include <Servo.h> Servo myservo; // create servo object to control a servo // twelve servo objects can be created on most boards int pos = 0; // variable to store the servo position void setup() { myservo.attach(9); // Le asignamos el PIN 9. } void loop() { for (pos = 0; pos <= 180; pos += 1) { // goes from 0 degrees to 180 degrees // in steps of 1 degree myservo.write(pos); // tell servo to go to position in variable 'pos' delay(15); // waits 15ms for the servo to reach the position } for (pos = 180; pos >= 0; pos -= 1) { // goes from 180 degrees to 0 degrees myservo.write(pos); // tell servo to go to position in variable 'pos' delay(15); // waits 15ms for the servo to reach the position } }","title":"C\u00f3digo"},{"location":"arduino/09.Servo/#servo-mg995","text":"El servomotor MG995 es un servomotor digital de alta velocidad y alta precisi\u00f3n. El servomotor est\u00e1 construido con una carcasa de pl\u00e1stico reforzado y un eje de metal. El servomotor es compatible con la mayor\u00eda de los sistemas de control remoto de radiofrecuencia y puede ser controlado por un microcontrolador o un ordenador. El servomotor tiene una salida de 5 V y una corriente m\u00e1xima de 2 A. El servomotor puede alcanzar una velocidad de giro de 0,12 segundos por vuelta. Comparativa: El SG90 es un microservo m\u00e1s peque\u00f1o y ligero que el MG995. Tambi\u00e9n es m\u00e1s econ\u00f3mico. El SG90 tiene un rango de movimiento de aproximadamente 180 grados, mientras que el MG995 tiene un rango de movimiento de aproximadamente 360 grados.","title":"Servo MG995"},{"location":"arduino/10.Sensor-ultrasonico/","text":"10. M\u00f3dulo Sensor ultras\u00f3nico El sensor ultras\u00f3nico es ideal para todo tipo de proyectos que necesitan medidas de distancia, evitando los obst\u00e1culos como ejemplos. El HC-SR04 es barato y f\u00e1cil de usar ya que vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores. Componentes necesarios Para hacer una prueba sencilla de funcionamiento del sensor, necesitaremos: (1) x Placa Arduino UNO (1) x M\u00f3dulo de sensor ultras\u00f3nico (4) x F M cables (cables de hembra a macho DuPont) Sensor de ultrasonidos El m\u00f3dulo HC-SR04 del sensor ultras\u00f3nico nos permite medir distancias entre 2 cm y 400 cm, con una precisi\u00f3n que var\u00eda puede alcanzar los 3 mm. El principio b\u00e1sico del trabajo es el siguiente: Dispara una se\u00f1al de nivel alto de al menos 10us El M\u00f3dulo env\u00eda autom\u00e1ticamente ocho se\u00f1ales de 40 kHz y detecta si hay una se\u00f1al de retorno, por rebotar en alguna superficie. Esta se\u00f1al de retorno depender\u00e1 de la distancia recorrida y, por tanto, de la distancia. La distancia recorrida se podr\u00eda calcular en funci\u00f3n de: La velocidad del sonido El tiempo que tardar\u00e1 en ir y volver realmente es el doble de la distancia que hay al objeto. La formula que nos dar\u00eda la distancia recorrida podr\u00eda ser: distancia = (tiempo * 340 ) / 2 El diagrama de sincronizaci\u00f3n se muestra a continuaci\u00f3n. S\u00f3lo tiene que suministrar un pulso de 10us corto a la entrada de activaci\u00f3n para iniciar el rango, y luego el m\u00f3dulo enviar\u00e1 una r\u00e1faga de 8 ciclos de ultrasonido a 40 kHz y aumentar su eco. El Echo es un objeto de distancia que es el ancho de pulso y el rango en proporci\u00f3n. Se puede calcular el rango a trav\u00e9s del intervalo de tiempo entre la se\u00f1al de disparo de env\u00edo y la se\u00f1al de eco de recepci\u00f3n. La f\u00f3rmula es la siguiente: F\u00f3rmula cent\u00edmetros: us / 58 = cent\u00edmetros Pulgadas: us / 148 = inch; O: el rango = tiempo de alto nivel * velocidad (340M / S) / 2; Sugerimos utilizar m\u00e1s de 60ms de ciclo de medici\u00f3n, con el fin de evitar la se\u00f1al de disparo a la se\u00f1al de eco. Pines del sensor Conexi\u00f3n Aqu\u00ed podemos ver como conectar los cuatro pines del sensor al Arduino Uno. Diagrama de cableado El diagrama de cableado es el siguiente. Recordad que utilizamos en general rojo para cables conectados a 5V y negro para 0V o tierra (GND). Montaje C\u00f3digo Necesitaremos una librer\u00eda para poder utilizar algunas funciones y comunicarnos con el sensor. Para ello, deberemos de incluirla en nuestro proyecto, de la siguiente forma: Una vez inclu\u00edda, ya la podemos utilizar en nuestro programa. Vamos a utilizar el monitor serie para mostrar los datos por pantalla, por lo menos mientras probamos el programa. #include \"SR04.h\" //Incluimos la librer\u00eda a utilizar #define TRIG_PIN 12 #define ECHO_PIN 11 SR04 sr04 = SR04(ECHO_PIN,TRIG_PIN); long distancia; void setup() { Serial.begin(9600); delay(1000); } void loop() { distancia=sr04.Distance(); //Devuelve la distancia en Cm. Serial.print(distancia); Serial.println(\"cm\"); delay(1000); //Esperaremos 1s entre mediciones } Abriendo el monitor y podemos ver los datos que vamos imprimiendo desde el programa Una vez detectados los valores, con estructuras if-else podr\u00edamos tomar decisiones en nuestro programa para realizar ciertas acciones.","title":"10. M\u00f3dulo Sensor ultras\u00f3nico"},{"location":"arduino/10.Sensor-ultrasonico/#10-modulo-sensor-ultrasonico","text":"El sensor ultras\u00f3nico es ideal para todo tipo de proyectos que necesitan medidas de distancia, evitando los obst\u00e1culos como ejemplos. El HC-SR04 es barato y f\u00e1cil de usar ya que vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores.","title":"10. M\u00f3dulo Sensor ultras\u00f3nico"},{"location":"arduino/10.Sensor-ultrasonico/#componentes-necesarios","text":"Para hacer una prueba sencilla de funcionamiento del sensor, necesitaremos: (1) x Placa Arduino UNO (1) x M\u00f3dulo de sensor ultras\u00f3nico (4) x F M cables (cables de hembra a macho DuPont)","title":"Componentes necesarios"},{"location":"arduino/10.Sensor-ultrasonico/#sensor-de-ultrasonidos","text":"El m\u00f3dulo HC-SR04 del sensor ultras\u00f3nico nos permite medir distancias entre 2 cm y 400 cm, con una precisi\u00f3n que var\u00eda puede alcanzar los 3 mm. El principio b\u00e1sico del trabajo es el siguiente: Dispara una se\u00f1al de nivel alto de al menos 10us El M\u00f3dulo env\u00eda autom\u00e1ticamente ocho se\u00f1ales de 40 kHz y detecta si hay una se\u00f1al de retorno, por rebotar en alguna superficie. Esta se\u00f1al de retorno depender\u00e1 de la distancia recorrida y, por tanto, de la distancia. La distancia recorrida se podr\u00eda calcular en funci\u00f3n de: La velocidad del sonido El tiempo que tardar\u00e1 en ir y volver realmente es el doble de la distancia que hay al objeto. La formula que nos dar\u00eda la distancia recorrida podr\u00eda ser: distancia = (tiempo * 340 ) / 2 El diagrama de sincronizaci\u00f3n se muestra a continuaci\u00f3n. S\u00f3lo tiene que suministrar un pulso de 10us corto a la entrada de activaci\u00f3n para iniciar el rango, y luego el m\u00f3dulo enviar\u00e1 una r\u00e1faga de 8 ciclos de ultrasonido a 40 kHz y aumentar su eco. El Echo es un objeto de distancia que es el ancho de pulso y el rango en proporci\u00f3n. Se puede calcular el rango a trav\u00e9s del intervalo de tiempo entre la se\u00f1al de disparo de env\u00edo y la se\u00f1al de eco de recepci\u00f3n. La f\u00f3rmula es la siguiente: F\u00f3rmula cent\u00edmetros: us / 58 = cent\u00edmetros Pulgadas: us / 148 = inch; O: el rango = tiempo de alto nivel * velocidad (340M / S) / 2; Sugerimos utilizar m\u00e1s de 60ms de ciclo de medici\u00f3n, con el fin de evitar la se\u00f1al de disparo a la se\u00f1al de eco.","title":"Sensor de ultrasonidos"},{"location":"arduino/10.Sensor-ultrasonico/#pines-del-sensor","text":"","title":"Pines del sensor"},{"location":"arduino/10.Sensor-ultrasonico/#conexion","text":"Aqu\u00ed podemos ver como conectar los cuatro pines del sensor al Arduino Uno.","title":"Conexi\u00f3n"},{"location":"arduino/10.Sensor-ultrasonico/#diagrama-de-cableado","text":"El diagrama de cableado es el siguiente. Recordad que utilizamos en general rojo para cables conectados a 5V y negro para 0V o tierra (GND).","title":"Diagrama de cableado"},{"location":"arduino/10.Sensor-ultrasonico/#montaje","text":"","title":"Montaje"},{"location":"arduino/10.Sensor-ultrasonico/#codigo","text":"Necesitaremos una librer\u00eda para poder utilizar algunas funciones y comunicarnos con el sensor. Para ello, deberemos de incluirla en nuestro proyecto, de la siguiente forma: Una vez inclu\u00edda, ya la podemos utilizar en nuestro programa. Vamos a utilizar el monitor serie para mostrar los datos por pantalla, por lo menos mientras probamos el programa. #include \"SR04.h\" //Incluimos la librer\u00eda a utilizar #define TRIG_PIN 12 #define ECHO_PIN 11 SR04 sr04 = SR04(ECHO_PIN,TRIG_PIN); long distancia; void setup() { Serial.begin(9600); delay(1000); } void loop() { distancia=sr04.Distance(); //Devuelve la distancia en Cm. Serial.print(distancia); Serial.println(\"cm\"); delay(1000); //Esperaremos 1s entre mediciones } Abriendo el monitor y podemos ver los datos que vamos imprimiendo desde el programa Una vez detectados los valores, con estructuras if-else podr\u00edamos tomar decisiones en nuestro programa para realizar ciertas acciones.","title":"C\u00f3digo"},{"location":"arduino/11.Humedadytemperatura/","text":"Lecci\u00f3n 11 Sensor de humedad y temperatura DHT11 Resumen En este tutorial vamos a aprender c\u00f3mo usar un sensor de humedad y temperatura DHT11 . Otra vez vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores que har\u00e1n que nuestro c\u00f3digo corto y f\u00e1cil de escribir. Componentes necesarios (1) x Elegoo Uno R3 (1) x m\u00f3dulo de humedad y temperatura DHT11 (3) x F M cables (cables de hembra a macho DuPont) Sensor de temperatura y humedad Sensor digital de temperatura y humedad DHT11 es un Sensor compuesto que contiene la salida de la se\u00f1al digital calibrado de la temperatura y la humedad. Aplicaciones: HVAC, deshumidificador, ensayos e inspecci\u00f3n de equipos, bienes de consumo, control autom\u00e1tico, autom\u00f3vil, registradores de datos, estaciones meteorol\u00f3gicas, electrodom\u00e9sticos, regulador de humedad, humedad m\u00e9dicos y otros medici\u00f3n y control. Par\u00e1metros del sensor Humedad relativa: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b11% H.R. Precisi\u00f3n: 25 \u00b0 C \u00b15% hr Intercambiabilidad: intercambiables Tiempo de respuesta: 1 / e (63%) de 25\u00ba c 6s 1m / s de aire 6s Hist\u00e9resis: < \u00b1 0.3% RH Estabilidad a largo plazo: < \u00b1 0.5% hr / a\u00f1o en Temperatura: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b10. 2 \u00b0 C Rango: 25 \u00b0 C \u00b12\u00b0 c Tiempo de respuesta: 1 / e (63%) 10S Caracter\u00edsticas el\u00e9ctricas Fuente de alimentaci\u00f3n: DC 3.5 ~ 5.5V Corriente: medici\u00f3n 0.3mA espera 60\u03bcA Periodo de muestreo: m\u00e1s de 2 segundos Descripci\u00f3n de pines VDD alimentaci\u00f3n 3,5~5.5V DC DATA bus de datos NC pin vac\u00edo GND tierra Esquema de conexi\u00f3n Diagrama de cableado Como se puede ver que s\u00f3lo necesitamos 3 conexiones al sensor, ya que uno de lo pin no se utiliza. Las conexiones son: voltaje, tierra y se\u00f1al de que puede conectarse a cualquier Pin en nuestro UNO. C\u00f3digo #include <dht_nonblocking.h> #define DHT_SENSOR_TYPE DHT_TYPE_11 static const int DHT_SENSOR_PIN = 2; DHT_nonblocking dht_sensor( DHT_SENSOR_PIN, DHT_SENSOR_TYPE ); /* * Initialize the serial port. */ void setup( ) { Serial.begin( 9600); } /* * Poll for a measurement, keeping the state machine alive. Returns * true if a measurement is available. */ static bool medir ( float *temperature, float *humidity ) { static unsigned long measurement_timestamp = millis( ); /* Measure once every four seconds. */ if( millis( ) - measurement_timestamp > 3000ul ) { if( dht_sensor.measure( temperature, humidity ) == true ) { measurement_timestamp = millis( ); return( true ); } } return( false ); } /* * Main program loop. */ void loop( ) { float temperature; float humidity; /* Measure temperature and humidity. If the functions returns true, then a measurement is available. */ if( medir( &temperature, &humidity ) == true ) { Serial.print( \"T = \" ); Serial.print( temperature, 1 ); Serial.print( \" deg. C, H = \" ); Serial.print( humidity, 1 ); Serial.println( \"%\" ); } } Salida en el monitor","title":"11.Humedadytemperatura"},{"location":"arduino/11.Humedadytemperatura/#leccion-11-sensor-de-humedad-y-temperatura-dht11","text":"","title":"Lecci\u00f3n 11 Sensor de humedad y temperatura DHT11"},{"location":"arduino/11.Humedadytemperatura/#resumen","text":"En este tutorial vamos a aprender c\u00f3mo usar un sensor de humedad y temperatura DHT11 . Otra vez vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores que har\u00e1n que nuestro c\u00f3digo corto y f\u00e1cil de escribir.","title":"Resumen"},{"location":"arduino/11.Humedadytemperatura/#componentes-necesarios","text":"(1) x Elegoo Uno R3 (1) x m\u00f3dulo de humedad y temperatura DHT11 (3) x F M cables (cables de hembra a macho DuPont)","title":"Componentes necesarios"},{"location":"arduino/11.Humedadytemperatura/#sensor-de-temperatura-y-humedad","text":"Sensor digital de temperatura y humedad DHT11 es un Sensor compuesto que contiene la salida de la se\u00f1al digital calibrado de la temperatura y la humedad. Aplicaciones: HVAC, deshumidificador, ensayos e inspecci\u00f3n de equipos, bienes de consumo, control autom\u00e1tico, autom\u00f3vil, registradores de datos, estaciones meteorol\u00f3gicas, electrodom\u00e9sticos, regulador de humedad, humedad m\u00e9dicos y otros medici\u00f3n y control.","title":"Sensor de temperatura y humedad"},{"location":"arduino/11.Humedadytemperatura/#parametros-del-sensor","text":"Humedad relativa: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b11% H.R. Precisi\u00f3n: 25 \u00b0 C \u00b15% hr Intercambiabilidad: intercambiables Tiempo de respuesta: 1 / e (63%) de 25\u00ba c 6s 1m / s de aire 6s Hist\u00e9resis: < \u00b1 0.3% RH Estabilidad a largo plazo: < \u00b1 0.5% hr / a\u00f1o en Temperatura: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b10. 2 \u00b0 C Rango: 25 \u00b0 C \u00b12\u00b0 c Tiempo de respuesta: 1 / e (63%) 10S Caracter\u00edsticas el\u00e9ctricas Fuente de alimentaci\u00f3n: DC 3.5 ~ 5.5V Corriente: medici\u00f3n 0.3mA espera 60\u03bcA Periodo de muestreo: m\u00e1s de 2 segundos Descripci\u00f3n de pines VDD alimentaci\u00f3n 3,5~5.5V DC DATA bus de datos NC pin vac\u00edo GND tierra","title":"Par\u00e1metros del sensor"},{"location":"arduino/11.Humedadytemperatura/#esquema-de-conexion","text":"","title":"Esquema de conexi\u00f3n"},{"location":"arduino/11.Humedadytemperatura/#diagrama-de-cableado","text":"Como se puede ver que s\u00f3lo necesitamos 3 conexiones al sensor, ya que uno de lo pin no se utiliza. Las conexiones son: voltaje, tierra y se\u00f1al de que puede conectarse a cualquier Pin en nuestro UNO.","title":"Diagrama de cableado"},{"location":"arduino/11.Humedadytemperatura/#codigo","text":"#include <dht_nonblocking.h> #define DHT_SENSOR_TYPE DHT_TYPE_11 static const int DHT_SENSOR_PIN = 2; DHT_nonblocking dht_sensor( DHT_SENSOR_PIN, DHT_SENSOR_TYPE ); /* * Initialize the serial port. */ void setup( ) { Serial.begin( 9600); } /* * Poll for a measurement, keeping the state machine alive. Returns * true if a measurement is available. */ static bool medir ( float *temperature, float *humidity ) { static unsigned long measurement_timestamp = millis( ); /* Measure once every four seconds. */ if( millis( ) - measurement_timestamp > 3000ul ) { if( dht_sensor.measure( temperature, humidity ) == true ) { measurement_timestamp = millis( ); return( true ); } } return( false ); } /* * Main program loop. */ void loop( ) { float temperature; float humidity; /* Measure temperature and humidity. If the functions returns true, then a measurement is available. */ if( medir( &temperature, &humidity ) == true ) { Serial.print( \"T = \" ); Serial.print( temperature, 1 ); Serial.print( \" deg. C, H = \" ); Serial.print( humidity, 1 ); Serial.println( \"%\" ); } }","title":"C\u00f3digo"},{"location":"arduino/11.Humedadytemperatura/#salida-en-el-monitor","text":"","title":"Salida en el monitor"},{"location":"arduino/12.Joystick/","text":"12.M\u00f3dulo Joystick anal\u00f3gico En este tutorial aprenderemos a usar el m\u00f3dulo de joystick anal\u00f3gico. Componentes necesarios (1) x Elegoo Uno R3 (1) x m\u00f3dulo de Joystick (5) x F M cables (cables de hembra a macho DuPont) Palanca de mando El m\u00f3dulo tiene 5 pines: VCC, tierra, X, Y, clave. Adem\u00e1s, podemos presionar el joystick hacia abajo Tenemos que usar pines Arduino anal\u00f3gicos para leer los datos de los pines X / Y, y un pin digital para leer el bot\u00f3n. El pin de la Llave est\u00e1 conectado a tierra, cuando el joystick est\u00e1 presionado hacia abajo, y est\u00e1 flotando de otra manera. Para obtener lecturas estables del pin Key / Select, debe conectarse a VCC a trav\u00e9s de una resistencia pull-up. Las resistencias incorporadas en los pines digitales de Arduino se pueden utilizar. Para obtener un tutorial sobre c\u00f3mo activar las resistencias pull-up para pines Arduino, configuradas como entradas Esquema Diagrama de cableado Necesitamos 5 las conexiones de la palanca de mando. Las conexiones son: Clave Y X Voltaje Tierra \u00abY y X\u00bb son anal\u00f3gicas y \"Clave\" es digital. C\u00f3digo // Arduino pin numbers const int SW_pin = 2; // digital pin connected to switch output const int X_pin = 0; // analog pin connected to X output const int Y_pin = 1; // analog pin connected to Y output void setup() { pinMode(SW_pin, INPUT); digitalWrite(SW_pin, HIGH); Serial.begin(9600); } void loop() { Serial.print(\"Switch: \"); Serial.print(digitalRead(SW_pin)); Serial.print(\"\\n\"); Serial.print(\"X-axis: \"); Serial.print(analogRead(X_pin)); Serial.print(\"\\n\"); Serial.print(\"Y-axis: \"); Serial.println(analogRead(Y_pin)); Serial.print(\"\\n\\n\"); delay(500); } El rango de valores va de 0 a 1024. Abrir al monitor y puede ver los datos como soplo: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1.","title":"12.M\u00f3dulo Joystick anal\u00f3gico"},{"location":"arduino/12.Joystick/#12modulo-joystick-analogico","text":"En este tutorial aprenderemos a usar el m\u00f3dulo de joystick anal\u00f3gico.","title":"12.M\u00f3dulo Joystick anal\u00f3gico"},{"location":"arduino/12.Joystick/#componentes-necesarios","text":"(1) x Elegoo Uno R3 (1) x m\u00f3dulo de Joystick (5) x F M cables (cables de hembra a macho DuPont)","title":"Componentes necesarios"},{"location":"arduino/12.Joystick/#palanca-de-mando","text":"El m\u00f3dulo tiene 5 pines: VCC, tierra, X, Y, clave. Adem\u00e1s, podemos presionar el joystick hacia abajo Tenemos que usar pines Arduino anal\u00f3gicos para leer los datos de los pines X / Y, y un pin digital para leer el bot\u00f3n. El pin de la Llave est\u00e1 conectado a tierra, cuando el joystick est\u00e1 presionado hacia abajo, y est\u00e1 flotando de otra manera. Para obtener lecturas estables del pin Key / Select, debe conectarse a VCC a trav\u00e9s de una resistencia pull-up. Las resistencias incorporadas en los pines digitales de Arduino se pueden utilizar. Para obtener un tutorial sobre c\u00f3mo activar las resistencias pull-up para pines Arduino, configuradas como entradas","title":"Palanca de mando"},{"location":"arduino/12.Joystick/#esquema","text":"","title":"Esquema"},{"location":"arduino/12.Joystick/#diagrama-de-cableado","text":"Necesitamos 5 las conexiones de la palanca de mando. Las conexiones son: Clave Y X Voltaje Tierra \u00abY y X\u00bb son anal\u00f3gicas y \"Clave\" es digital.","title":"Diagrama de cableado"},{"location":"arduino/12.Joystick/#codigo","text":"// Arduino pin numbers const int SW_pin = 2; // digital pin connected to switch output const int X_pin = 0; // analog pin connected to X output const int Y_pin = 1; // analog pin connected to Y output void setup() { pinMode(SW_pin, INPUT); digitalWrite(SW_pin, HIGH); Serial.begin(9600); } void loop() { Serial.print(\"Switch: \"); Serial.print(digitalRead(SW_pin)); Serial.print(\"\\n\"); Serial.print(\"X-axis: \"); Serial.print(analogRead(X_pin)); Serial.print(\"\\n\"); Serial.print(\"Y-axis: \"); Serial.println(analogRead(Y_pin)); Serial.print(\"\\n\\n\"); delay(500); } El rango de valores va de 0 a 1024. Abrir al monitor y puede ver los datos como soplo: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1.","title":"C\u00f3digo"},{"location":"arduino/14.LCD/","text":"Lecci\u00f3n 14 Pantalla LCD Resumen En esta lecci\u00f3n aprendremos a: Conectar la pantalla LCD alfanum\u00e9rico a su placa de Arduino. C\u00f3mo utilizar la funci\u00f3n lcd.print () para imprimir datos en la pantalla. C\u00f3mo mover el cursor en la pantalla. C\u00f3mo encender o apagar la pantalla. C\u00f3mo encender o apagar el cursor. C\u00f3mo configurar la direcci\u00f3n del cursor. C\u00f3mo encender o apagar la luz de fondo. C\u00f3mo crear una animaci\u00f3n en la pantalla. La pantalla tiene una retroiluminaci\u00f3n de LED y puede mostrar dos filas con hasta 16 caracteres en cada fila. Puede ver los rect\u00e1ngulos para cada car\u00e1cter en la pantalla y los p\u00edxeles que componen cada car\u00e1cter. La pantalla es blanca en azul y est\u00e1 dise\u00f1ada para mostrar texto. En esta lecci\u00f3n, se ejecutar\u00e1 el programa de ejemplo de Arduino para la librer\u00eda de la LCD, pero en la siguiente lecci\u00f3n, nos pondremos nuestra pantalla para mostrar la temperatura mediante sensores. Componentes necesarios 1 x Placa de Arduino Uno 1 x Pantalla LCD alfanum\u00e9rica 1602 1 x Cable USB Potenci\u00f3metro (10k) 830 tie-puntos Breadboard M-M cables (cables de puente de macho a macho) LCD1602 La mayoria de los LCD1602 tienen 16 patillas, pero algunos de ellos pueden tener 18 patillas. Para el LCD1602 de 16 patillas hay unas patillas llamadas: VSS: Un pin que se conecta a tierra VDD: Un pin que se conecta a un + 5V fuente de alimentaci\u00f3n VO: Un pasador que ajusta el contraste de LCD1602 RS: Un registro seleccione pin que controla donde en memoria de la pantalla LCD datos de escritura. Usted puede seleccionar el registro de datos, que es lo que pasa en la pantalla, o un registro de instrucci\u00f3n, que es donde busca controlador de LCD para obtener instrucciones sobre qu\u00e9 hacer. R/W: Pin A lectura y escritura que selecciona el modo de lectura o escritura a modo de E:, Permitiendo a un perno con energ\u00eda de bajo nivel, m\u00f3dulo causas la LDC para ejecutar instrucciones. D0-D7: Pernos que leer y escribir datos A y K: Que el control de la retroiluminaci\u00f3n LED de los pernos Conexi\u00f3n Esquema Diagrama de cableado La pantalla LCD necesita seis pines de Arduino, todo listo para ser salidas digitales. Tambi\u00e9n necesita 5V y GND conexiones. Hay bastantes conexiones que hay que hacer. Alinear la pantalla con la parte superior de la placa ayuda a identificar sus pines sin tener que contar demasiado, especialmente si la placa tiene sus filas numeradas con la fila 1 como la fila superior de la placa. No se olvide del cable amarillo largo que conecta el potenci\u00f3metro a la patilla 3 de la pantalla. El 'potenci\u00f3metro' se utiliza para controlar el contraste de la pantalla. Es posible que su pantalla se suministre sin pines de cabecera conectados a ella. Si es as\u00ed, siga las instrucciones de la siguiente secci\u00f3n. Codigo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 22 LCD pantalla y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Lo primero que nota en el dibujo es la l\u00ednea: #include < LiquidCrystal.h > Esto dice Arduino que queremos utilizar la librer\u00eda de cristal l\u00edquido. A continuaci\u00f3n tenemos la l\u00ednea que ten\u00edamos que modificar. Esto define qu\u00e9 pines de Arduino son para conectarse a que pines de la pantalla. LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Despu\u00e9s de subir este c\u00f3digo, aseg\u00farese de que se enciende la retroiluminaci\u00f3n y ajustar el potenci\u00f3metro de toda la manera alrededor hasta que aparezca el mensaje de texto En la funci\u00f3n de setup , tenemos dos comandos: LCD.Begin (16, 2); LCD.Print (\"Hola, mundo!\"); La primera cuenta la librer\u00eda de cristal l\u00edquido cu\u00e1ntas columnas y filas tiene la pantalla. La segunda l\u00ednea muestra el mensaje que vemos en la primera l\u00ednea de la pantalla. En la funci\u00f3n de 'loop', aso tienen dos comandos: lcd.setCursor (0, 1); LCD.Print(Millis()/1000); El primero establece la posici\u00f3n del cursor (donde aparecer\u00e1 el siguiente texto) columna 0 y fila 1. Los n\u00fameros de columna y fila comienzan en 0 en lugar de 1. La segunda l\u00ednea muestra el n\u00famero de milisegundos desde que se restableci\u00f3 el Arduino. //www.elegoo.com //2016.12.9 /* LiquidCrystal Library - Hello World Demonstrates the use a 16x2 LCD display. The LiquidCrystal library works with all LCD displays that are compatible with the Hitachi HD44780 driver. There are many of them out there, and you can usually tell them by the 16-pin interface. This sketch prints \"Hello World!\" to the LCD and shows the time. The circuit: * LCD RS pin to digital pin 7 * LCD Enable pin to digital pin 8 * LCD D4 pin to digital pin 9 * LCD D5 pin to digital pin 10 * LCD D6 pin to digital pin 11 * LCD D7 pin to digital pin 12 * LCD R/W pin to ground * LCD VSS pin to ground * LCD VCC pin to 5V * 10K resistor: * ends to +5V and ground * wiper to LCD VO pin (pin 3) Library originally added 18 Apr 2008 by David A. Mellis library modified 5 Jul 2009 by Limor Fried (http://www.ladyada.net) example added 9 Jul 2009 by Tom Igoe modified 22 Nov 2010 by Tom Igoe This example code is in the public domain. http://www.arduino.cc/en/Tutorial/LiquidCrystal */ // include the library code: #include <LiquidCrystal.h> // initialize the library with the numbers of the interface pins LiquidCrystal lcd(7, 8, 9, 10, 11, 12); void setup() { // set up the LCD's number of columns and rows: lcd.begin(16, 2); // Print a message to the LCD. lcd.print(\"Hello, World!\"); } void loop() { // set the cursor to column 0, line 1 // (note: line 1 is the second row, since counting begins with 0): lcd.setCursor(0, 1); // print the number of seconds since reset: lcd.print(millis() / 1000); }","title":"14.LCD"},{"location":"arduino/14.LCD/#leccion-14-pantalla-lcd","text":"","title":"Lecci\u00f3n 14 Pantalla LCD"},{"location":"arduino/14.LCD/#resumen","text":"En esta lecci\u00f3n aprendremos a: Conectar la pantalla LCD alfanum\u00e9rico a su placa de Arduino. C\u00f3mo utilizar la funci\u00f3n lcd.print () para imprimir datos en la pantalla. C\u00f3mo mover el cursor en la pantalla. C\u00f3mo encender o apagar la pantalla. C\u00f3mo encender o apagar el cursor. C\u00f3mo configurar la direcci\u00f3n del cursor. C\u00f3mo encender o apagar la luz de fondo. C\u00f3mo crear una animaci\u00f3n en la pantalla. La pantalla tiene una retroiluminaci\u00f3n de LED y puede mostrar dos filas con hasta 16 caracteres en cada fila. Puede ver los rect\u00e1ngulos para cada car\u00e1cter en la pantalla y los p\u00edxeles que componen cada car\u00e1cter. La pantalla es blanca en azul y est\u00e1 dise\u00f1ada para mostrar texto. En esta lecci\u00f3n, se ejecutar\u00e1 el programa de ejemplo de Arduino para la librer\u00eda de la LCD, pero en la siguiente lecci\u00f3n, nos pondremos nuestra pantalla para mostrar la temperatura mediante sensores.","title":"Resumen"},{"location":"arduino/14.LCD/#componentes-necesarios","text":"1 x Placa de Arduino Uno 1 x Pantalla LCD alfanum\u00e9rica 1602 1 x Cable USB Potenci\u00f3metro (10k) 830 tie-puntos Breadboard M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/14.LCD/#lcd1602","text":"La mayoria de los LCD1602 tienen 16 patillas, pero algunos de ellos pueden tener 18 patillas. Para el LCD1602 de 16 patillas hay unas patillas llamadas: VSS: Un pin que se conecta a tierra VDD: Un pin que se conecta a un + 5V fuente de alimentaci\u00f3n VO: Un pasador que ajusta el contraste de LCD1602 RS: Un registro seleccione pin que controla donde en memoria de la pantalla LCD datos de escritura. Usted puede seleccionar el registro de datos, que es lo que pasa en la pantalla, o un registro de instrucci\u00f3n, que es donde busca controlador de LCD para obtener instrucciones sobre qu\u00e9 hacer. R/W: Pin A lectura y escritura que selecciona el modo de lectura o escritura a modo de E:, Permitiendo a un perno con energ\u00eda de bajo nivel, m\u00f3dulo causas la LDC para ejecutar instrucciones. D0-D7: Pernos que leer y escribir datos A y K: Que el control de la retroiluminaci\u00f3n LED de los pernos","title":"LCD1602"},{"location":"arduino/14.LCD/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/14.LCD/#esquema","text":"","title":"Esquema"},{"location":"arduino/14.LCD/#diagrama-de-cableado","text":"La pantalla LCD necesita seis pines de Arduino, todo listo para ser salidas digitales. Tambi\u00e9n necesita 5V y GND conexiones. Hay bastantes conexiones que hay que hacer. Alinear la pantalla con la parte superior de la placa ayuda a identificar sus pines sin tener que contar demasiado, especialmente si la placa tiene sus filas numeradas con la fila 1 como la fila superior de la placa. No se olvide del cable amarillo largo que conecta el potenci\u00f3metro a la patilla 3 de la pantalla. El 'potenci\u00f3metro' se utiliza para controlar el contraste de la pantalla. Es posible que su pantalla se suministre sin pines de cabecera conectados a ella. Si es as\u00ed, siga las instrucciones de la siguiente secci\u00f3n.","title":"Diagrama de cableado"},{"location":"arduino/14.LCD/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 22 LCD pantalla y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Lo primero que nota en el dibujo es la l\u00ednea: #include < LiquidCrystal.h > Esto dice Arduino que queremos utilizar la librer\u00eda de cristal l\u00edquido. A continuaci\u00f3n tenemos la l\u00ednea que ten\u00edamos que modificar. Esto define qu\u00e9 pines de Arduino son para conectarse a que pines de la pantalla. LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Despu\u00e9s de subir este c\u00f3digo, aseg\u00farese de que se enciende la retroiluminaci\u00f3n y ajustar el potenci\u00f3metro de toda la manera alrededor hasta que aparezca el mensaje de texto En la funci\u00f3n de setup , tenemos dos comandos: LCD.Begin (16, 2); LCD.Print (\"Hola, mundo!\"); La primera cuenta la librer\u00eda de cristal l\u00edquido cu\u00e1ntas columnas y filas tiene la pantalla. La segunda l\u00ednea muestra el mensaje que vemos en la primera l\u00ednea de la pantalla. En la funci\u00f3n de 'loop', aso tienen dos comandos: lcd.setCursor (0, 1); LCD.Print(Millis()/1000); El primero establece la posici\u00f3n del cursor (donde aparecer\u00e1 el siguiente texto) columna 0 y fila 1. Los n\u00fameros de columna y fila comienzan en 0 en lugar de 1. La segunda l\u00ednea muestra el n\u00famero de milisegundos desde que se restableci\u00f3 el Arduino. //www.elegoo.com //2016.12.9 /* LiquidCrystal Library - Hello World Demonstrates the use a 16x2 LCD display. The LiquidCrystal library works with all LCD displays that are compatible with the Hitachi HD44780 driver. There are many of them out there, and you can usually tell them by the 16-pin interface. This sketch prints \"Hello World!\" to the LCD and shows the time. The circuit: * LCD RS pin to digital pin 7 * LCD Enable pin to digital pin 8 * LCD D4 pin to digital pin 9 * LCD D5 pin to digital pin 10 * LCD D6 pin to digital pin 11 * LCD D7 pin to digital pin 12 * LCD R/W pin to ground * LCD VSS pin to ground * LCD VCC pin to 5V * 10K resistor: * ends to +5V and ground * wiper to LCD VO pin (pin 3) Library originally added 18 Apr 2008 by David A. Mellis library modified 5 Jul 2009 by Limor Fried (http://www.ladyada.net) example added 9 Jul 2009 by Tom Igoe modified 22 Nov 2010 by Tom Igoe This example code is in the public domain. http://www.arduino.cc/en/Tutorial/LiquidCrystal */ // include the library code: #include <LiquidCrystal.h> // initialize the library with the numbers of the interface pins LiquidCrystal lcd(7, 8, 9, 10, 11, 12); void setup() { // set up the LCD's number of columns and rows: lcd.begin(16, 2); // Print a message to the LCD. lcd.print(\"Hello, World!\"); } void loop() { // set the cursor to column 0, line 1 // (note: line 1 is the second row, since counting begins with 0): lcd.setCursor(0, 1); // print the number of seconds since reset: lcd.print(millis() / 1000); }","title":"Codigo"},{"location":"arduino/15.Termometro/","text":"Lecci\u00f3n 15: Term\u00f3metro Resumen En esta lecci\u00f3n, utilizar\u00e1 una pantalla LCD para mostrar la temperatura. Componentes necesarios Elegoo Uno R3 LCD1602 M\u00f3dulo x resistencia de ohmio 10 k x termistor x potenci\u00f3metro> * x 830 tie puntos Breadboard x M M cables (cables de puente de macho a macho) Termistor Un termistor es un resistor t\u00e9rmico - un resistor que cambia su resistencia con la temperatura. T\u00e9cnicamente, los resistores son termistores - sus cambios de resistencia con temperatura - pero el cambio es generalmente muy peque\u00f1o y dif\u00edcil de medir. Los termistores est\u00e1n hechos para que la resistencia cambia dr\u00e1sticamente con la temperatura para que pueda ser 100 ohmios o m\u00e1s del cambio por grado! Hay dos clases de termistores: NTC (coeficiente de temperatura negativo) PTC (coeficiente positivo de temperatura). En general, usted ver\u00e1 sensores NTC para medir la temperatura. PTC es de uso frecuente como fusibles Reseteables - un aumento de temperatura aumenta la resistencia que significa que conforme pasa m\u00e1s corriente a trav\u00e9s de ellos, se calientan y 'estrangular detr\u00e1s' la corriente, muy \u00fatil para la protecci\u00f3n de circuitos. Conexi\u00f3n Esquema Diagrama de cableado El dise\u00f1o de la placa se basa en el dise\u00f1o de la lecci\u00f3n 22 , as\u00edque simplificar\u00e1 las cosas si hay esto en la protoboard. Hay unos cables de puente cerca de la olla que se han movido ligeramente en este dise\u00f1o. Los 10 k\u03a9 resistencia y termistores son todas nuevas incorporaciones a la Junta C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 23 term\u00f3metro y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El cableado de esto est\u00e1 basado en la lecci\u00f3n 22. Cargar para arriba en su Arduino y encontrar\u00e1 que calienta el sensor de temperatura al poner el dedo en \u00e9l aumentar\u00e1 la temperatura. Es \u00fatil poner una l\u00ednea de comentario sobre el comando 'lcd'. BSED4D5D6D7 LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Esto facilita las cosas si decides cambiar que utilizas los pernos. En la funci\u00f3n loop ahora hay dos cosas interesantes sucediendo. En primer lugar tenemos que convertir la anal\u00f3gica del sensor de temperatura una temperatura real, y en segundo lugar tenemos que encontrar la manera a los mismos. En primer lugar, echemos un vistazo a c\u00e1lculo de la temperatura. int tempReading = analogRead(tempPin); doble tempK = log (10000.0 * ((1024.0/tempReading - 1))); tempK = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempK * tempK)) * tempK); float tempC = tempK - 273.15; floatfloat tempF = (tempC * 9.0) / 5.0 + 32.0; Cambio lecturas se muestra en una pantalla LCD puede ser complicado. El principal problema es que la lectura puede no ser siempre el mismo n\u00famero de d\u00edgitos. Por lo tanto, si la temperatura cambia de 101,50 a 99.00 entonces el d\u00edgito adicional de la lectura antigua es en peligro de quedar en la pantalla. Para evitar esto, escriba la l\u00ednea de la pantalla LCD cada vez el bucle. lcd.setCursor (0, 0); LCD.Print (\"Temp C\"); lcd.setCursor (6, 0); LCD.Print(tempF); El comentario bastante extra\u00f1o sirve para recordarles de las 16 columnas de la pantalla. Luego puede imprimir una cadena de esa longitud con espacios donde ir\u00e1 la lectura real. Para rellenar los espacios en blanco, establecer la posici\u00f3n del cursor por donde la lectura debe aparecer y luego imprimirlo.","title":"15.Termometro"},{"location":"arduino/15.Termometro/#leccion-15-termometro","text":"","title":"Lecci\u00f3n 15: Term\u00f3metro"},{"location":"arduino/15.Termometro/#resumen","text":"En esta lecci\u00f3n, utilizar\u00e1 una pantalla LCD para mostrar la temperatura.","title":"Resumen"},{"location":"arduino/15.Termometro/#componentes-necesarios","text":"Elegoo Uno R3 LCD1602 M\u00f3dulo x resistencia de ohmio 10 k x termistor x potenci\u00f3metro> * x 830 tie puntos Breadboard x M M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/15.Termometro/#termistor","text":"Un termistor es un resistor t\u00e9rmico - un resistor que cambia su resistencia con la temperatura. T\u00e9cnicamente, los resistores son termistores - sus cambios de resistencia con temperatura - pero el cambio es generalmente muy peque\u00f1o y dif\u00edcil de medir. Los termistores est\u00e1n hechos para que la resistencia cambia dr\u00e1sticamente con la temperatura para que pueda ser 100 ohmios o m\u00e1s del cambio por grado! Hay dos clases de termistores: NTC (coeficiente de temperatura negativo) PTC (coeficiente positivo de temperatura). En general, usted ver\u00e1 sensores NTC para medir la temperatura. PTC es de uso frecuente como fusibles Reseteables - un aumento de temperatura aumenta la resistencia que significa que conforme pasa m\u00e1s corriente a trav\u00e9s de ellos, se calientan y 'estrangular detr\u00e1s' la corriente, muy \u00fatil para la protecci\u00f3n de circuitos.","title":"Termistor"},{"location":"arduino/15.Termometro/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/15.Termometro/#esquema","text":"","title":"Esquema"},{"location":"arduino/15.Termometro/#diagrama-de-cableado","text":"El dise\u00f1o de la placa se basa en el dise\u00f1o de la lecci\u00f3n 22 , as\u00edque simplificar\u00e1 las cosas si hay esto en la protoboard. Hay unos cables de puente cerca de la olla que se han movido ligeramente en este dise\u00f1o. Los 10 k\u03a9 resistencia y termistores son todas nuevas incorporaciones a la Junta","title":"Diagrama de cableado"},{"location":"arduino/15.Termometro/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 23 term\u00f3metro y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El cableado de esto est\u00e1 basado en la lecci\u00f3n 22. Cargar para arriba en su Arduino y encontrar\u00e1 que calienta el sensor de temperatura al poner el dedo en \u00e9l aumentar\u00e1 la temperatura. Es \u00fatil poner una l\u00ednea de comentario sobre el comando 'lcd'. BSED4D5D6D7 LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Esto facilita las cosas si decides cambiar que utilizas los pernos. En la funci\u00f3n loop ahora hay dos cosas interesantes sucediendo. En primer lugar tenemos que convertir la anal\u00f3gica del sensor de temperatura una temperatura real, y en segundo lugar tenemos que encontrar la manera a los mismos. En primer lugar, echemos un vistazo a c\u00e1lculo de la temperatura. int tempReading = analogRead(tempPin); doble tempK = log (10000.0 * ((1024.0/tempReading - 1))); tempK = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempK * tempK)) * tempK); float tempC = tempK - 273.15; floatfloat tempF = (tempC * 9.0) / 5.0 + 32.0; Cambio lecturas se muestra en una pantalla LCD puede ser complicado. El principal problema es que la lectura puede no ser siempre el mismo n\u00famero de d\u00edgitos. Por lo tanto, si la temperatura cambia de 101,50 a 99.00 entonces el d\u00edgito adicional de la lectura antigua es en peligro de quedar en la pantalla. Para evitar esto, escriba la l\u00ednea de la pantalla LCD cada vez el bucle. lcd.setCursor (0, 0); LCD.Print (\"Temp C\"); lcd.setCursor (6, 0); LCD.Print(tempF); El comentario bastante extra\u00f1o sirve para recordarles de las 16 columnas de la pantalla. Luego puede imprimir una cadena de esa longitud con espacios donde ir\u00e1 la lectura real. Para rellenar los espacios en blanco, establecer la posici\u00f3n del cursor por donde la lectura debe aparecer y luego imprimirlo.","title":"C\u00f3digo"},{"location":"arduino/16.OchoLed/","text":"Lecci\u00f3n 16 Ocho LED con 74HC595 Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar ocho LEDs rojo grandes con un UNO sin necesidad de renunciar a 8 patas de salida Aunque usted podr\u00eda conectar ocho LEDs con una resistencia a un pin UNO r\u00e1pidamente empezar\u00eda a quedarse sin patas en su UNO. Si no tienes un mont\u00f3n de cosas conectadas a la ONU. Est\u00e1 bien hacerlo - pero a menudo tiempos queremos botones, sensores, servos, etc. y antes de saberlo que no tienes pernos de izquierda. As\u00ed, en lugar de hacer eso, vas a usar un chip llamado el 74HC595 Serial a paralelo convertidor. Este chip tiene ocho salidas (perfectos) y tres entradas que utilizas para alimentar datos en \u00e9l un poco a la vez. Este chip hace un poco m\u00e1s lento para los LEDs (s\u00f3lo se puede cambiar el LED unos 500.000 veces por segundo en lugar de 8.000.000 por segundo) pero todav\u00eda es muy r\u00e1pido, forma m\u00e1s r\u00e1pido que los seres humanos puede detectar, as\u00edque vale! Componente necesario: (1) x Elegoo Uno R3 Protoboard leds resistencias de 220 ohmios IC x 74hc595 M M cables (cables de puente de macho a macho) 74HC595 Registro de desplazamiento El registro de desplazamiento es un tipo de chip que tiene lo que puede considerarse como posiciones de memoria ocho, cada uno de ellos puede ser un 1 o un 0. Para definir cada uno de estos valores encendido o apagado, alimentamos en los datos mediante los pines del chip 'Datos' y 'El reloj'. El pin de reloj debe recibir ocho pulsos. En cada pulso, si el pin de datos es alto, entonces un 1 obtiene empujado en el registro de desplazamiento; de lo contrario, un 0. Cuando se han recibido los ocho impulsos, permitiendo el pin 'Pestillo' copia esos ocho valores en el registro de cierre. Esto es necesario; de lo contrario, parpadean mal los LEDs como se carga los datos en el registro de desplazamiento. El chip tambi\u00e9n tiene un pin de salida activado (OE), que se utiliza para activar o desactivar las salidas a la vez. Podr\u00eda conectar esto a un pin PWM capaz UNO y usar 'analogWrite' para controlar el brillo de los LEDs. Este pin es baja activa, por lo que nos ate a la tierra GND. Conexi\u00f3n Esquema Diagrama de cableado Ya que tenemos ocho LEDs y ocho resistencias para conectar, hay realmente muy pocas conexiones a realizar. Es probablemente m\u00e1s f\u00e1cil poner el chip 74HC595 en primer lugar, como casi todo lo dem\u00e1s se conecta a \u00e9l. Ponerlo de modo que la muesca en forma de U poco hacia la parte superior de la placa. Pin 1 del chip es a la izquierda de esta muesca. Digital 12 del UNO va al pin #14 del registro de desplazamiento Digital 11 del UNO va al pin #12 del registro de desplazamiento 9 digital a partir de la UNO va al pin #11 del registro de desplazamiento Todos sino una de las salidas de la IC est\u00e1 en el lado izquierdo del chip. Por lo tanto, para facilitar la conexi\u00f3n, es donde est\u00e1n los LEDs, tambi\u00e9n. Despu\u00e9s de la viruta, poner las resistencias en su lugar. Usted necesita tener cuidado de que ninguno de los cables de las resistencias tocan. Usted debe comprobar esto otra vez antes de conectar la energ\u00eda a la ONU. Si le resulta dif\u00edcil organizar las resistencias sin sus conductores tocando, entonces ayuda a acortar los cables que est\u00e1n mintiendo m\u00e1s cercanos a la superficie de la placa. A continuaci\u00f3n, coloque los LEDs en la protoboard. Cuanto m\u00e1s positivo lleva LED debe ser hacia el chip, de cualquier lado de la placa est\u00e1n en. Conecte los conductores del puente como se muestra arriba. No olvide que va desde el pin 8 del IC a la columna GND de la placa. Carga el bosquejo aparece un poco m\u00e1s adelante y probar. Cada LED debe encenderse alternadamente hasta que todos los LEDs est\u00e1n encendidos y luego se apagara y el ciclo se repite. C\u00f3digo Despu\u00e9s de cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 24 8 LED con 74HC595 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Lo primero que hacemos es definir los tres pernos que vamos a utilizar. Estos son los UNO salidas digitales que se conectar\u00e1n a los pines de datos, reloj y cierre de los 74HC595. int latchPin = 11; clockPin int = 9; int dataPin = 12; A continuaci\u00f3n, se define una variable llamada 'leds'. Esto se utiliza para sostener el patr\u00f3n de que LED actualmente es activado o desactivados. Datos de tipo 'byte' representan n\u00fameros de ocho bits. Cada bit puede estar encendido o apagado, esto es perfecto para realizar un seguimiento de cu\u00e1les de nuestros ocho LEDs son on u off. leds de byte = 0; La funci\u00f3n de setup s\u00f3lo establece los tres pernos que estamos utilizando para ser de salidas digitales. void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); } La funci\u00f3n loop inicialmente apaga todos los LEDs, al darle a los variable 'leds' el valor 0. A continuaci\u00f3n, llama 'updateShiftRegister' que enviar\u00e1 el patr\u00f3n de 'leds' para el registro de desplazamiento para que el LED se apague. Se tratar\u00e1 con 'updateShiftRegister' funcionamiento m\u00e1s adelante. La funci\u00f3n loop hace una pausa de medio segundo y entonces empieza a contar de 0 a 7 usando el bucle 'for' y la variable 'i'. Cada vez utiliza la funci\u00f3n de Arduino 'verdadera' para establecer el bit que controla ese LED en la variable 'leds'. A continuaci\u00f3n tambi\u00e9n llama 'updateShiftRegister' para que los leds actualizar para reflejar lo que est\u00e1 en la variable 'leds'. Hay entonces medio segundo de retraso antes de 'i' se incrementa y se ilumina el LED pr\u00f3ximo. void loop() { LED = 0; updateShiftRegister(); Delay(500); for (int i = 0; i < 8; i ++) { bitSet(leds, i); updateShiftRegister(); Delay(500); } } La funci\u00f3n 'updateShiftRegister', en primer lugar se establece la latchPin baja, entonces llama al UNO funci\u00f3n 'shiftOut' antes de poner el 'latchPin' alta otra vez. Esto toma cuatro par\u00e1metros, los dos primeros son los pines para datos y el reloj respectivamente. El tercer par\u00e1metro especifica que final de los datos que desea iniciar en el. Vamos a empezar con la derecha m\u00e1s poco, que se conoce como el 'Bit menos significativo' (LSB). El \u00faltimo par\u00e1metro es los datos reales para ser cambiado de puesto en el registro de desplazamiento, que en este caso es 'leds'. void updateShiftRegister() { digitalWrite (latchPin, bajo); shiftOut (dataPin, clockPin, LSBFIRST, leds); digitalWrite (latchPin, HIGH); } Si usted dese\u00f3 dar vuelta a uno de los LED apagado en lugar, llamar\u00eda una funci\u00f3n similar de Arduino (bitClear) con la variable de 'leds'. Esto ajustar\u00e1 ese poco de 'leds' para ser 0 y entonces s\u00f3lo necesitar\u00e1 seguir con una llamada a 'updateShiftRegister' para actualizar la actual LED.","title":"16.OchoLed"},{"location":"arduino/16.OchoLed/#leccion-16-ocho-led-con-74hc595","text":"","title":"Lecci\u00f3n 16 Ocho LED con 74HC595"},{"location":"arduino/16.OchoLed/#resumen","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar ocho LEDs rojo grandes con un UNO sin necesidad de renunciar a 8 patas de salida Aunque usted podr\u00eda conectar ocho LEDs con una resistencia a un pin UNO r\u00e1pidamente empezar\u00eda a quedarse sin patas en su UNO. Si no tienes un mont\u00f3n de cosas conectadas a la ONU. Est\u00e1 bien hacerlo - pero a menudo tiempos queremos botones, sensores, servos, etc. y antes de saberlo que no tienes pernos de izquierda. As\u00ed, en lugar de hacer eso, vas a usar un chip llamado el 74HC595 Serial a paralelo convertidor. Este chip tiene ocho salidas (perfectos) y tres entradas que utilizas para alimentar datos en \u00e9l un poco a la vez. Este chip hace un poco m\u00e1s lento para los LEDs (s\u00f3lo se puede cambiar el LED unos 500.000 veces por segundo en lugar de 8.000.000 por segundo) pero todav\u00eda es muy r\u00e1pido, forma m\u00e1s r\u00e1pido que los seres humanos puede detectar, as\u00edque vale! Componente necesario: (1) x Elegoo Uno R3 Protoboard leds resistencias de 220 ohmios IC x 74hc595 M M cables (cables de puente de macho a macho)","title":"Resumen"},{"location":"arduino/16.OchoLed/#74hc595-registro-de-desplazamiento","text":"El registro de desplazamiento es un tipo de chip que tiene lo que puede considerarse como posiciones de memoria ocho, cada uno de ellos puede ser un 1 o un 0. Para definir cada uno de estos valores encendido o apagado, alimentamos en los datos mediante los pines del chip 'Datos' y 'El reloj'. El pin de reloj debe recibir ocho pulsos. En cada pulso, si el pin de datos es alto, entonces un 1 obtiene empujado en el registro de desplazamiento; de lo contrario, un 0. Cuando se han recibido los ocho impulsos, permitiendo el pin 'Pestillo' copia esos ocho valores en el registro de cierre. Esto es necesario; de lo contrario, parpadean mal los LEDs como se carga los datos en el registro de desplazamiento. El chip tambi\u00e9n tiene un pin de salida activado (OE), que se utiliza para activar o desactivar las salidas a la vez. Podr\u00eda conectar esto a un pin PWM capaz UNO y usar 'analogWrite' para controlar el brillo de los LEDs. Este pin es baja activa, por lo que nos ate a la tierra GND.","title":"74HC595 Registro de desplazamiento"},{"location":"arduino/16.OchoLed/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/16.OchoLed/#esquema","text":"","title":"Esquema"},{"location":"arduino/16.OchoLed/#diagrama-de-cableado","text":"Ya que tenemos ocho LEDs y ocho resistencias para conectar, hay realmente muy pocas conexiones a realizar. Es probablemente m\u00e1s f\u00e1cil poner el chip 74HC595 en primer lugar, como casi todo lo dem\u00e1s se conecta a \u00e9l. Ponerlo de modo que la muesca en forma de U poco hacia la parte superior de la placa. Pin 1 del chip es a la izquierda de esta muesca. Digital 12 del UNO va al pin #14 del registro de desplazamiento Digital 11 del UNO va al pin #12 del registro de desplazamiento 9 digital a partir de la UNO va al pin #11 del registro de desplazamiento Todos sino una de las salidas de la IC est\u00e1 en el lado izquierdo del chip. Por lo tanto, para facilitar la conexi\u00f3n, es donde est\u00e1n los LEDs, tambi\u00e9n. Despu\u00e9s de la viruta, poner las resistencias en su lugar. Usted necesita tener cuidado de que ninguno de los cables de las resistencias tocan. Usted debe comprobar esto otra vez antes de conectar la energ\u00eda a la ONU. Si le resulta dif\u00edcil organizar las resistencias sin sus conductores tocando, entonces ayuda a acortar los cables que est\u00e1n mintiendo m\u00e1s cercanos a la superficie de la placa. A continuaci\u00f3n, coloque los LEDs en la protoboard. Cuanto m\u00e1s positivo lleva LED debe ser hacia el chip, de cualquier lado de la placa est\u00e1n en. Conecte los conductores del puente como se muestra arriba. No olvide que va desde el pin 8 del IC a la columna GND de la placa. Carga el bosquejo aparece un poco m\u00e1s adelante y probar. Cada LED debe encenderse alternadamente hasta que todos los LEDs est\u00e1n encendidos y luego se apagara y el ciclo se repite.","title":"Diagrama de cableado"},{"location":"arduino/16.OchoLed/#codigo","text":"Despu\u00e9s de cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 24 8 LED con 74HC595 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Lo primero que hacemos es definir los tres pernos que vamos a utilizar. Estos son los UNO salidas digitales que se conectar\u00e1n a los pines de datos, reloj y cierre de los 74HC595. int latchPin = 11; clockPin int = 9; int dataPin = 12; A continuaci\u00f3n, se define una variable llamada 'leds'. Esto se utiliza para sostener el patr\u00f3n de que LED actualmente es activado o desactivados. Datos de tipo 'byte' representan n\u00fameros de ocho bits. Cada bit puede estar encendido o apagado, esto es perfecto para realizar un seguimiento de cu\u00e1les de nuestros ocho LEDs son on u off. leds de byte = 0; La funci\u00f3n de setup s\u00f3lo establece los tres pernos que estamos utilizando para ser de salidas digitales. void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); } La funci\u00f3n loop inicialmente apaga todos los LEDs, al darle a los variable 'leds' el valor 0. A continuaci\u00f3n, llama 'updateShiftRegister' que enviar\u00e1 el patr\u00f3n de 'leds' para el registro de desplazamiento para que el LED se apague. Se tratar\u00e1 con 'updateShiftRegister' funcionamiento m\u00e1s adelante. La funci\u00f3n loop hace una pausa de medio segundo y entonces empieza a contar de 0 a 7 usando el bucle 'for' y la variable 'i'. Cada vez utiliza la funci\u00f3n de Arduino 'verdadera' para establecer el bit que controla ese LED en la variable 'leds'. A continuaci\u00f3n tambi\u00e9n llama 'updateShiftRegister' para que los leds actualizar para reflejar lo que est\u00e1 en la variable 'leds'. Hay entonces medio segundo de retraso antes de 'i' se incrementa y se ilumina el LED pr\u00f3ximo. void loop() { LED = 0; updateShiftRegister(); Delay(500); for (int i = 0; i < 8; i ++) { bitSet(leds, i); updateShiftRegister(); Delay(500); } } La funci\u00f3n 'updateShiftRegister', en primer lugar se establece la latchPin baja, entonces llama al UNO funci\u00f3n 'shiftOut' antes de poner el 'latchPin' alta otra vez. Esto toma cuatro par\u00e1metros, los dos primeros son los pines para datos y el reloj respectivamente. El tercer par\u00e1metro especifica que final de los datos que desea iniciar en el. Vamos a empezar con la derecha m\u00e1s poco, que se conoce como el 'Bit menos significativo' (LSB). El \u00faltimo par\u00e1metro es los datos reales para ser cambiado de puesto en el registro de desplazamiento, que en este caso es 'leds'. void updateShiftRegister() { digitalWrite (latchPin, bajo); shiftOut (dataPin, clockPin, LSBFIRST, leds); digitalWrite (latchPin, HIGH); } Si usted dese\u00f3 dar vuelta a uno de los LED apagado en lugar, llamar\u00eda una funci\u00f3n similar de Arduino (bitClear) con la variable de 'leds'. Esto ajustar\u00e1 ese poco de 'leds' para ser 0 y entonces s\u00f3lo necesitar\u00e1 seguir con una llamada a 'updateShiftRegister' para actualizar la actual LED.","title":"C\u00f3digo"},{"location":"arduino/17.Monitorserie/","text":"Lecci\u00f3n 17 El monitor Serial Resumen En esta lecci\u00f3n, se basar\u00e1 en la lecci\u00f3n 16, a\u00f1adiendo la facilidad de controlar los LEDs desde el ordenador con el Monitor serie del Arduino. El monitor serial es el 'cable' entre el ordenador y tu UNO. Le permite enviar y recibir mensajes de texto, \u00fatiles para la depuraci\u00f3n y tambi\u00e9n control de la ONU de un teclado! Por ejemplo, usted ser\u00e1 capaz de enviar comandos desde el ordenador para encender LEDs. En esta lecci\u00f3n, utilizar\u00e1 exactamente las mismas piezas y una disposici\u00f3n similar del protoboard como lecci\u00f3n 16. Por lo tanto, si a\u00fan no lo ha hecho, siga lecci\u00f3n 16 ahora. Medidas adoptadas Despu\u00e9s de que han subido este cableado sobre el UNO, haga clic en el bot\u00f3n derecho en la barra de herramientas en el IDE de Arduino. Es en un c\u00edrculo el bot\u00f3n a continuaci\u00f3n. Se abrir\u00e1 la siguiente ventana. Haga clic en el bot\u00f3n Serial Monitor para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Esta ventana se llama al Monitor Serial y es parte del software del IDE de Arduino. Su trabajo es la que permite a ambos enviar mensajes desde tu ordenador a una placa UNO (por USB) y tambi\u00e9n recibir mensajes de la placa UNO. El mensaje \"Enter LED n\u00famero 0 a 7or 'x' para borrar\" ha sido enviado por el Arduino. Nos est\u00e1 diciendo qu\u00e9 comandos podemos enviamos a Arduino: o enviar la 'x' (para apagar todos los LEDs) o el n\u00famero de LED que desea activar (donde 0 es el LED de la parte inferior, 1 es la siguiente, hasta 7 para el LED superior). Trate de escribir los siguientes comandos en la parte superior del Monitor Serial que es el nivel con el bot\u00f3n 'Enviar'. Presione 'Enviar', despu\u00e9s de escribir cada uno de estos caracteres: x 0 3 5 Escribir x voluntad no tienen ning\u00fan efecto si los LEDs ya est\u00e1n todos fuera, pero al entrar en cada n\u00famero, el correspondiente LED deber\u00e1 encenderse y usted recibir\u00e1 un mensaje de confirmaci\u00f3n de la placa UNO. El Monitor Serial aparecer\u00e1 como se muestra a continuaci\u00f3n. Escriba x otra vez y pulse 'Enviar' para apagar todos los LEDs C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor abra el Serial Monitor del programa en la carpeta de c\u00f3digo-lecci\u00f3n 25 y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Como era de esperar, el cableado se basa en el cableado utilizado en la lecci\u00f3n 24. Por lo tanto, s\u00f3lo cubrimos los nuevos bits aqu\u00ed. Le resultar\u00e1 \u00fatil para referirse al dibujo completo en el IDE de Arduino. En la funci\u00f3n de setup , hay tres nuevas l\u00edneas al final: void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); updateShiftRegister(); Serial.Begin(9600); ```mientras (!. Serie); Espere hasta que es listo - Leonardo Serial.println (\"Enter LED n\u00famero de 0 a 7 o 'x' para borrar\"); } En primer lugar, tenemos el comando 'Serial.begin(9600)'. Esto inicia la comunicaci\u00f3n serial, para que la UNO puede enviar comandos a trav\u00e9s de la conexi\u00f3n USB. El valor 9600 es la configuraci\u00f3n velocidad de la conexi\u00f3n. Esto es la rapidez con la que los datos debe ser enviado. Esto puede cambiar a un valor m\u00e1s alto, pero tambi\u00e9n tendr\u00e1s que cambiar al monitor de Arduino Serial el mismo valor. Hablaremos de esto m\u00e1s adelante; por ahora, dejar en 9600. El comienzo de la l\u00ednea con 'mientras' asegura que hay algo en el otro extremo de la conexi\u00f3n USB para Arduino hablar antes de que comience el env\u00edo de mensajes. De lo contrario, el mensaje puede ser enviado, pero no aparece. Esta l\u00ednea es realmente s\u00f3lo es necesaria si est\u00e1 utilizando a un Arduino Leonardo porque el Arduino UNO se restablece autom\u00e1ticamente la placa Arduino al abrir el Monitor de la serie, mientras que esto no sucede con el Leonardo. La \u00faltima de las nuevas l\u00edneas en **setup** env\u00eda el mensaje que vemos en la parte superior del Monitor serie. La funci\u00f3n de 'bucle' es donde sucede toda la acci\u00f3n ```arduino void loop() { if (Serial.available()) { char ch = Serial.read(); if (ch >= '0' && ch <= '7') { int led = ch - '0'; bitSet(leds, led); updateShiftRegister(); Serial.print(\"Turned on LED \"); Serial.println(led); } if (ch == 'x') { leds = 0; 129 / 165 updateShiftRegister(); Serial.println(\"Cleared\"); } } } Todo lo que ocurre dentro del bucle est\u00e1 contenido dentro de una instrucci\u00f3n 'if'. As\u00ed que a menos que la llamada a la funci\u00f3n incorporada de Arduino 'Serial.available()' es 'true' entonces nada suceder\u00e1. Serial.Available() devuelve 'true' si los datos ha sido enviado a la ONU y all\u00edest\u00e1 listos para ser procesado. Los mensajes entrantes se llevan a cabo en lo que se llama un b\u00fafer y Serial.available() devuelve true si ese buffer es no vac\u00eda. Si un mensaje ha sido recibido, es a la siguiente l\u00ednea de c\u00f3digo: char ch = Serial.read(); Esto lee el siguiente car\u00e1cter del b\u00fafer y elimina del buffer. Tambi\u00e9n asigna a la variable 'ch'. La variable 'ch' es de tipo 'char' que significa 'car\u00e1cter' y como su nombre indica, tiene un car\u00e1cter \u00fanico. Si usted ha seguido las instrucciones en el prompt en la parte superior del Monitor Serial, luego este personaje ser\u00e1n o bien un n\u00famero d\u00edgito entre 0 y 7 o la letra 'x'. La instrucci\u00f3n 'if' en la l\u00ednea siguiente comprueba para ver si es un solo d\u00edgito por ver si 'ch' es mayor o igual que el car\u00e1cter ' 0 'y menor o igual que el personaje 7'. Parece un poco extra\u00f1o comparar caracteres de esta manera, pero es perfectamente aceptable. Cada car\u00e1cter est\u00e1 representado por un n\u00famero \u00fanico, conocido su valor ASCII. Esto significa que cuando se comparan caracteres usando < = y > = es realmente los valores ASCII que se estaban comparando. Si pasa la prueba, llegamos a la siguiente l\u00ednea: int led = ch-'0'; \u00a1Ahora estamos actuando aritm\u00e9tica en los personajes! Estamos restando el d\u00edgito '0' de cualquier d\u00edgitos fue introducido. Por lo tanto, si escribi\u00f3 '0' y luego '0' a '0' ser\u00e1 igual a 0. Si escribi\u00f3 '7' y '7'-'0' ser\u00e1 igual al n\u00famero 7 ya que es realmente los valores ASCII que se utilizan en la sustracci\u00f3n. Desde sabemos que el n\u00famero del LED que queremos encender, nos basta establecer este bit en la variable 'leds' y actualizar el registro de desplazamiento. bitSet (leds, led); 121 / 165 updateShiftRegister(); Las dos l\u00edneas escriben de nuevo un mensaje de confirmaci\u00f3n en el Monitor serie. Serial.Print (\"encendido LED\"); Serial.println(LED); La primera l\u00ednea utiliza Serial.print en lugar de Serial.println. La diferencia entre los dos es que Serial.print no se inicia una nueva l\u00ednea despu\u00e9s de imprimir lo que est\u00e1 en su par\u00e1metro. Usamos esto en la primera l\u00ednea, porque estamos impresi\u00f3n el mensaje en dos partes. En primer lugar el general bits: 'Enciende LED' y luego el n\u00famero del LED. El n\u00famero del LED se realiza en un 'int' variable en lugar de ser una cadena de texto. Serial.Print puede tomar ya sea una cadena de texto dentro de comillas dobles, o un 'int' o para el caso casi cualquier tipo de variable. Despu\u00e9s de la instrucci\u00f3n 'if' que maneja el caso, cuando un d\u00edgito se ha manejado, hay una segunda instrucci\u00f3n 'if' que comprueba si la 'ch' es la letra 'x'. Si (ch == 'x') { LE D=0; updateShiftRegister(); Serial.println(\"cleared\"); } Si es as\u00ed, entonces se borran todos los LEDs y env\u00eda un mensaje de confirmaci\u00f3n.","title":"17.Monitorserie"},{"location":"arduino/17.Monitorserie/#leccion-17-el-monitor-serial","text":"","title":"Lecci\u00f3n 17 El monitor Serial"},{"location":"arduino/17.Monitorserie/#resumen","text":"En esta lecci\u00f3n, se basar\u00e1 en la lecci\u00f3n 16, a\u00f1adiendo la facilidad de controlar los LEDs desde el ordenador con el Monitor serie del Arduino. El monitor serial es el 'cable' entre el ordenador y tu UNO. Le permite enviar y recibir mensajes de texto, \u00fatiles para la depuraci\u00f3n y tambi\u00e9n control de la ONU de un teclado! Por ejemplo, usted ser\u00e1 capaz de enviar comandos desde el ordenador para encender LEDs. En esta lecci\u00f3n, utilizar\u00e1 exactamente las mismas piezas y una disposici\u00f3n similar del protoboard como lecci\u00f3n 16. Por lo tanto, si a\u00fan no lo ha hecho, siga lecci\u00f3n 16 ahora. Medidas adoptadas Despu\u00e9s de que han subido este cableado sobre el UNO, haga clic en el bot\u00f3n derecho en la barra de herramientas en el IDE de Arduino. Es en un c\u00edrculo el bot\u00f3n a continuaci\u00f3n. Se abrir\u00e1 la siguiente ventana. Haga clic en el bot\u00f3n Serial Monitor para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Esta ventana se llama al Monitor Serial y es parte del software del IDE de Arduino. Su trabajo es la que permite a ambos enviar mensajes desde tu ordenador a una placa UNO (por USB) y tambi\u00e9n recibir mensajes de la placa UNO. El mensaje \"Enter LED n\u00famero 0 a 7or 'x' para borrar\" ha sido enviado por el Arduino. Nos est\u00e1 diciendo qu\u00e9 comandos podemos enviamos a Arduino: o enviar la 'x' (para apagar todos los LEDs) o el n\u00famero de LED que desea activar (donde 0 es el LED de la parte inferior, 1 es la siguiente, hasta 7 para el LED superior). Trate de escribir los siguientes comandos en la parte superior del Monitor Serial que es el nivel con el bot\u00f3n 'Enviar'. Presione 'Enviar', despu\u00e9s de escribir cada uno de estos caracteres: x 0 3 5 Escribir x voluntad no tienen ning\u00fan efecto si los LEDs ya est\u00e1n todos fuera, pero al entrar en cada n\u00famero, el correspondiente LED deber\u00e1 encenderse y usted recibir\u00e1 un mensaje de confirmaci\u00f3n de la placa UNO. El Monitor Serial aparecer\u00e1 como se muestra a continuaci\u00f3n. Escriba x otra vez y pulse 'Enviar' para apagar todos los LEDs","title":"Resumen"},{"location":"arduino/17.Monitorserie/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor abra el Serial Monitor del programa en la carpeta de c\u00f3digo-lecci\u00f3n 25 y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Como era de esperar, el cableado se basa en el cableado utilizado en la lecci\u00f3n 24. Por lo tanto, s\u00f3lo cubrimos los nuevos bits aqu\u00ed. Le resultar\u00e1 \u00fatil para referirse al dibujo completo en el IDE de Arduino. En la funci\u00f3n de setup , hay tres nuevas l\u00edneas al final: void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); updateShiftRegister(); Serial.Begin(9600); ```mientras (!. Serie); Espere hasta que es listo - Leonardo Serial.println (\"Enter LED n\u00famero de 0 a 7 o 'x' para borrar\"); } En primer lugar, tenemos el comando 'Serial.begin(9600)'. Esto inicia la comunicaci\u00f3n serial, para que la UNO puede enviar comandos a trav\u00e9s de la conexi\u00f3n USB. El valor 9600 es la configuraci\u00f3n velocidad de la conexi\u00f3n. Esto es la rapidez con la que los datos debe ser enviado. Esto puede cambiar a un valor m\u00e1s alto, pero tambi\u00e9n tendr\u00e1s que cambiar al monitor de Arduino Serial el mismo valor. Hablaremos de esto m\u00e1s adelante; por ahora, dejar en 9600. El comienzo de la l\u00ednea con 'mientras' asegura que hay algo en el otro extremo de la conexi\u00f3n USB para Arduino hablar antes de que comience el env\u00edo de mensajes. De lo contrario, el mensaje puede ser enviado, pero no aparece. Esta l\u00ednea es realmente s\u00f3lo es necesaria si est\u00e1 utilizando a un Arduino Leonardo porque el Arduino UNO se restablece autom\u00e1ticamente la placa Arduino al abrir el Monitor de la serie, mientras que esto no sucede con el Leonardo. La \u00faltima de las nuevas l\u00edneas en **setup** env\u00eda el mensaje que vemos en la parte superior del Monitor serie. La funci\u00f3n de 'bucle' es donde sucede toda la acci\u00f3n ```arduino void loop() { if (Serial.available()) { char ch = Serial.read(); if (ch >= '0' && ch <= '7') { int led = ch - '0'; bitSet(leds, led); updateShiftRegister(); Serial.print(\"Turned on LED \"); Serial.println(led); } if (ch == 'x') { leds = 0; 129 / 165 updateShiftRegister(); Serial.println(\"Cleared\"); } } } Todo lo que ocurre dentro del bucle est\u00e1 contenido dentro de una instrucci\u00f3n 'if'. As\u00ed que a menos que la llamada a la funci\u00f3n incorporada de Arduino 'Serial.available()' es 'true' entonces nada suceder\u00e1. Serial.Available() devuelve 'true' si los datos ha sido enviado a la ONU y all\u00edest\u00e1 listos para ser procesado. Los mensajes entrantes se llevan a cabo en lo que se llama un b\u00fafer y Serial.available() devuelve true si ese buffer es no vac\u00eda. Si un mensaje ha sido recibido, es a la siguiente l\u00ednea de c\u00f3digo: char ch = Serial.read(); Esto lee el siguiente car\u00e1cter del b\u00fafer y elimina del buffer. Tambi\u00e9n asigna a la variable 'ch'. La variable 'ch' es de tipo 'char' que significa 'car\u00e1cter' y como su nombre indica, tiene un car\u00e1cter \u00fanico. Si usted ha seguido las instrucciones en el prompt en la parte superior del Monitor Serial, luego este personaje ser\u00e1n o bien un n\u00famero d\u00edgito entre 0 y 7 o la letra 'x'. La instrucci\u00f3n 'if' en la l\u00ednea siguiente comprueba para ver si es un solo d\u00edgito por ver si 'ch' es mayor o igual que el car\u00e1cter ' 0 'y menor o igual que el personaje 7'. Parece un poco extra\u00f1o comparar caracteres de esta manera, pero es perfectamente aceptable. Cada car\u00e1cter est\u00e1 representado por un n\u00famero \u00fanico, conocido su valor ASCII. Esto significa que cuando se comparan caracteres usando < = y > = es realmente los valores ASCII que se estaban comparando. Si pasa la prueba, llegamos a la siguiente l\u00ednea: int led = ch-'0'; \u00a1Ahora estamos actuando aritm\u00e9tica en los personajes! Estamos restando el d\u00edgito '0' de cualquier d\u00edgitos fue introducido. Por lo tanto, si escribi\u00f3 '0' y luego '0' a '0' ser\u00e1 igual a 0. Si escribi\u00f3 '7' y '7'-'0' ser\u00e1 igual al n\u00famero 7 ya que es realmente los valores ASCII que se utilizan en la sustracci\u00f3n. Desde sabemos que el n\u00famero del LED que queremos encender, nos basta establecer este bit en la variable 'leds' y actualizar el registro de desplazamiento. bitSet (leds, led); 121 / 165 updateShiftRegister(); Las dos l\u00edneas escriben de nuevo un mensaje de confirmaci\u00f3n en el Monitor serie. Serial.Print (\"encendido LED\"); Serial.println(LED); La primera l\u00ednea utiliza Serial.print en lugar de Serial.println. La diferencia entre los dos es que Serial.print no se inicia una nueva l\u00ednea despu\u00e9s de imprimir lo que est\u00e1 en su par\u00e1metro. Usamos esto en la primera l\u00ednea, porque estamos impresi\u00f3n el mensaje en dos partes. En primer lugar el general bits: 'Enciende LED' y luego el n\u00famero del LED. El n\u00famero del LED se realiza en un 'int' variable en lugar de ser una cadena de texto. Serial.Print puede tomar ya sea una cadena de texto dentro de comillas dobles, o un 'int' o para el caso casi cualquier tipo de variable. Despu\u00e9s de la instrucci\u00f3n 'if' que maneja el caso, cuando un d\u00edgito se ha manejado, hay una segunda instrucci\u00f3n 'if' que comprueba si la 'ch' es la letra 'x'. Si (ch == 'x') { LE D=0; updateShiftRegister(); Serial.println(\"cleared\"); } Si es as\u00ed, entonces se borran todos los LEDs y env\u00eda un mensaje de confirmaci\u00f3n.","title":"C\u00f3digo"},{"location":"arduino/18.Fotocelula/","text":"Lecci\u00f3n 18 Fotoc\u00e9lula Resumen Vamos a aprender como medir la intensidad de la luz utilizando una entrada anal\u00f3gica. Con lo que aprenderemos, podremos posteriormente utilizar el nivel de luz para controlar el apagar un LED o encenderlo cuando no haya luz, por ejemplo. Componentes necesarios: Los componentes que utilizaremos son los siguientes: [x] Elegoo Uno R3 [x] Protoboard [x] LEDs [x] Resistencias de 220 ohmios [x] Resistencia de 1 kohm (1000 ohms) [x] 1 x fotoresistor o LDR (fotoc\u00e9lula) [x] 16 x M M cables (cables de puente de macho a macho) Fotoc\u00e9lula Una fotorresistencia o LDR (por sus siglas en ingl\u00e9s \u201clight-dependent resistor\u201d) es un componente electr\u00f3nico cuya resistencia var\u00eda en funci\u00f3n de la luz. Se trata de un sensor que act\u00faa como una resistencia variable en funci\u00f3n de la luz que capta. Esta tiene una resistencia de cerca de 50 k\u03a9 en cerca de oscuridad y \u03a9 500 en luz brillante. Para convertir este valor variable de la resistencia en algo que podemos medir en la entrada anal\u00f3gica de la Junta de un R3 de UNO, debe ser convertida en un voltaje. La forma m\u00e1s sencilla de hacerlo es combinar con una resistencia fija. La resistencia y fotoc\u00e9lula junto se comportan como una sola. Cuando la luz es muy brillante, entonces la resistencia de la fotoc\u00e9lula es muy baja en comparaci\u00f3n con la resistencia de valor fijo, y as\u00edes como si el bote se dio vuelta a m\u00e1ximo. Cuando la fotoc\u00e9lula est\u00e1 en una luz apagada, la resistencia es mayor que la resistencia fija de 1 k\u03a9 y es como si el recipiente estuviera girando hacia GND. Cargue el croquis dado en la siguiente secci\u00f3n y trate de cubrir la fotoc\u00e9lula con el dedo y, a continuaci\u00f3n, sost\u00e9ngalo cerca de una fuente de luz. Conexi\u00f3n Diagrama de cableado C\u00f3digo para leer valor de un LDR int sensorPin = A0; // select the input pin for LDR int sensorValue = 0; // variable to store the value coming from the sensor void setup() { Serial.begin(9600); //sets serial port for communication } void loop() { sensorValue = analogRead(sensorPin); // read the value from the sensor Serial.println(sensorValue); //prints the values coming from the sensor on the screen delay(100); } C\u00f3digo encender un LED cuando la luz es baja Encender LED cuando la luz es baja y viceversa. Para ello, deberemos colocar un LED en el pin 13, con su correspondiente resistencia. El umbral es el valor a partir del cual vamos a decidir si encender la bombilla o no En este caso est\u00e1 fijado a 100 \u03a9 . const int LEDPin = 13; const int LDRPin = A0; const int umbral = 100; void setup() { pinMode(LEDPin, OUTPUT); pinMode(LDRPin, INPUT); } void loop() { int input = analogRead(LDRPin); if (input > umbral) { digitalWrite(LEDPin, HIGH); } else { digitalWrite(LEDPin, LOW); } } Lo mismo, pero con un valor de umbral fijado por nosotros. const long A = 1000; //Resistencia en oscuridad en K\u03a9 const int B = 15; //Resistencia a la luz (10 Lux) en K\u03a9 const int Rc = 10; //Resistencia calibracion en K\u03a9 const int LDRPin = A0; //Pin del LDR int V; int ilum; void setup() { Serial.begin(115200); } void loop() { V = analogRead(LDRPin); //ilum = ((long)(1024-V)*A*10)/((long)B*Rc*V); //usar si LDR entre GND y A0 ilum = ((long)V*A*10)/((long)B*Rc*(1024-V)); //usar si LDR entre A0 y Vcc (como en el esquema anterior) Serial.println(ilum); delay(1000); }","title":"18.Fotocelula"},{"location":"arduino/18.Fotocelula/#leccion-18-fotocelula","text":"","title":"Lecci\u00f3n 18 Fotoc\u00e9lula"},{"location":"arduino/18.Fotocelula/#resumen","text":"Vamos a aprender como medir la intensidad de la luz utilizando una entrada anal\u00f3gica. Con lo que aprenderemos, podremos posteriormente utilizar el nivel de luz para controlar el apagar un LED o encenderlo cuando no haya luz, por ejemplo.","title":"Resumen"},{"location":"arduino/18.Fotocelula/#componentes-necesarios","text":"Los componentes que utilizaremos son los siguientes: [x] Elegoo Uno R3 [x] Protoboard [x] LEDs [x] Resistencias de 220 ohmios [x] Resistencia de 1 kohm (1000 ohms) [x] 1 x fotoresistor o LDR (fotoc\u00e9lula) [x] 16 x M M cables (cables de puente de macho a macho)","title":"Componentes necesarios:"},{"location":"arduino/18.Fotocelula/#fotocelula","text":"Una fotorresistencia o LDR (por sus siglas en ingl\u00e9s \u201clight-dependent resistor\u201d) es un componente electr\u00f3nico cuya resistencia var\u00eda en funci\u00f3n de la luz. Se trata de un sensor que act\u00faa como una resistencia variable en funci\u00f3n de la luz que capta. Esta tiene una resistencia de cerca de 50 k\u03a9 en cerca de oscuridad y \u03a9 500 en luz brillante. Para convertir este valor variable de la resistencia en algo que podemos medir en la entrada anal\u00f3gica de la Junta de un R3 de UNO, debe ser convertida en un voltaje. La forma m\u00e1s sencilla de hacerlo es combinar con una resistencia fija. La resistencia y fotoc\u00e9lula junto se comportan como una sola. Cuando la luz es muy brillante, entonces la resistencia de la fotoc\u00e9lula es muy baja en comparaci\u00f3n con la resistencia de valor fijo, y as\u00edes como si el bote se dio vuelta a m\u00e1ximo. Cuando la fotoc\u00e9lula est\u00e1 en una luz apagada, la resistencia es mayor que la resistencia fija de 1 k\u03a9 y es como si el recipiente estuviera girando hacia GND. Cargue el croquis dado en la siguiente secci\u00f3n y trate de cubrir la fotoc\u00e9lula con el dedo y, a continuaci\u00f3n, sost\u00e9ngalo cerca de una fuente de luz.","title":"Fotoc\u00e9lula"},{"location":"arduino/18.Fotocelula/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/18.Fotocelula/#diagrama-de-cableado","text":"","title":"Diagrama de cableado"},{"location":"arduino/18.Fotocelula/#codigo-para-leer-valor-de-un-ldr","text":"int sensorPin = A0; // select the input pin for LDR int sensorValue = 0; // variable to store the value coming from the sensor void setup() { Serial.begin(9600); //sets serial port for communication } void loop() { sensorValue = analogRead(sensorPin); // read the value from the sensor Serial.println(sensorValue); //prints the values coming from the sensor on the screen delay(100); }","title":"C\u00f3digo para leer valor de un LDR"},{"location":"arduino/18.Fotocelula/#codigo-encender-un-led-cuando-la-luz-es-baja","text":"Encender LED cuando la luz es baja y viceversa. Para ello, deberemos colocar un LED en el pin 13, con su correspondiente resistencia. El umbral es el valor a partir del cual vamos a decidir si encender la bombilla o no En este caso est\u00e1 fijado a 100 \u03a9 . const int LEDPin = 13; const int LDRPin = A0; const int umbral = 100; void setup() { pinMode(LEDPin, OUTPUT); pinMode(LDRPin, INPUT); } void loop() { int input = analogRead(LDRPin); if (input > umbral) { digitalWrite(LEDPin, HIGH); } else { digitalWrite(LEDPin, LOW); } } Lo mismo, pero con un valor de umbral fijado por nosotros. const long A = 1000; //Resistencia en oscuridad en K\u03a9 const int B = 15; //Resistencia a la luz (10 Lux) en K\u03a9 const int Rc = 10; //Resistencia calibracion en K\u03a9 const int LDRPin = A0; //Pin del LDR int V; int ilum; void setup() { Serial.begin(115200); } void loop() { V = analogRead(LDRPin); //ilum = ((long)(1024-V)*A*10)/((long)B*Rc*V); //usar si LDR entre GND y A0 ilum = ((long)V*A*10)/((long)B*Rc*(1024-V)); //usar si LDR entre A0 y Vcc (como en el esquema anterior) Serial.println(ilum); delay(1000); }","title":"C\u00f3digo encender un LED cuando la luz es baja"},{"location":"arduino/19.Display%207segmentos%201%20digito/","text":"Lecci\u00f3n 19 74HC595 y display Segmentado Resumen Despu\u00e9s de aprender la lecci\u00f3n 24, 25 y 26, vamos a utilizar el registro de desplazamiento 74HC595 para controlar la visualizaci\u00f3n del segmento. La pantalla mostrar\u00e1 el n\u00famero de 9-0. Componentes necesarios Arduino Uno protoboard 74HC595 IC 1 Pantalla de 7 d\u00edgitos segmentada 220 ohm resistencias M-M cables (cables de puente de macho a macho) Display de siete segmentos Abajo est\u00e1 el diagrama de pines de siete segmentos 0-9 diez d\u00edgitos se corresponden con cada segmento es los siguientes (en la tabla siguiente se aplica com\u00fan c\u00e1todo dispositivo de exhibici\u00f3n de segmento siete, si se utiliza un \u00e1nodo com\u00fan, de la mesa debe ser reemplazado cada 1 0 0 si todos sustituidos por 1): dp a b c d e f g 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 0 2 0 1 1 0 1 1 0 1 3 0 1 1 1 1 0 0 1 4 0 0 1 1 0 0 1 1 5 0 1 0 1 1 0 1 1 6 0 1 0 1 1 1 1 1 7 0 1 1 1 0 0 0 0 8 0 1 1 1 1 1 1 1 9 0 1 1 1 1 0 1 1 Conexi\u00f3n Esquema Diagrama de cableado 131 / 165 La siguiente tabla muestra la tabla de correspondencias pantalla de siete segmentos 74HC595 pin 74HC595 pin Seven shows remarkable control pin (stroke) Q0 7 (A) Q1 6 (B) Q2 4 (C) Q3 2 (D) Q4 1 (E) Q5 9 (F) Q6 10 (G) Q7 5 (DP) Paso uno: conexi\u00f3n 74HC595 En primer lugar, el cableado est\u00e1 conectado a la alimentaci\u00f3n y tierra: VCC (pin 16) y Se\u00f1or (pin 10) conectado a 5V GND (pin 8) y OE (pin 13) a tierra Pin conexi\u00f3n DS, ST_CP y SH_CP: DS (pin 14) conectado al pin de tablero UNO R3 2 (la cifra por debajo de la l\u00ednea amarilla) ST_CP (pin 12, perno de pestillo) conectado al pin de tablero UNO R3 3 (l\u00ednea azul de la figura abajo) SH_CP (pin 11, pin de reloj) conectado al pin de tablero UNO R3 4 (figura debajo de la l\u00ednea blanca) Paso 2: conectar el display de siete segmentos El display de siete segmentos 3, 8 pin a UNO R3 Junta GND (este ejemplo utiliza el c\u00e1todo com\u00fan, si se utiliza el \u00e1nodo com\u00fan, por favor conecte el 3, 8 pines para tablero UNO R3 + 5V) Seg\u00fan la tabla anterior, conecte el 74HC595 Q0 ~ Q7 a siete segmentos pantalla pin correspondiente (A ~ G y DP) y luego cada pie en una resistencia de 220 ohmios en serie. C\u00f3digo int tDelay = 100; int latchPin = 11; // (11) ST_CP [RCK] on 74HC595 int clockPin = 9; // (9) SH_CP [SCK] on 74HC595 int dataPin = 12; // (12) DS [S1] on 74HC595 byte leds = 0; void updateShiftRegister() { digitalWrite(latchPin, LOW); shiftOut(dataPin, clockPin, LSBFIRST, leds); digitalWrite(latchPin, HIGH); } void setup() { pinMode(latchPin, OUTPUT); pinMode(dataPin, OUTPUT); pinMode(clockPin, OUTPUT); } void loop() { leds = 0; updateShiftRegister(); delay(tDelay); for (int i = 0; i < 8; i++) { bitSet(leds, i); updateShiftRegister(); delay(tDelay); } }","title":"19.Display 7segmentos 1 digito"},{"location":"arduino/19.Display%207segmentos%201%20digito/#leccion-19-74hc595-y-display-segmentado","text":"","title":"Lecci\u00f3n 19 74HC595 y display Segmentado"},{"location":"arduino/19.Display%207segmentos%201%20digito/#resumen","text":"Despu\u00e9s de aprender la lecci\u00f3n 24, 25 y 26, vamos a utilizar el registro de desplazamiento 74HC595 para controlar la visualizaci\u00f3n del segmento. La pantalla mostrar\u00e1 el n\u00famero de 9-0.","title":"Resumen"},{"location":"arduino/19.Display%207segmentos%201%20digito/#componentes-necesarios","text":"Arduino Uno protoboard 74HC595 IC 1 Pantalla de 7 d\u00edgitos segmentada 220 ohm resistencias M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/19.Display%207segmentos%201%20digito/#display-de-siete-segmentos","text":"Abajo est\u00e1 el diagrama de pines de siete segmentos 0-9 diez d\u00edgitos se corresponden con cada segmento es los siguientes (en la tabla siguiente se aplica com\u00fan c\u00e1todo dispositivo de exhibici\u00f3n de segmento siete, si se utiliza un \u00e1nodo com\u00fan, de la mesa debe ser reemplazado cada 1 0 0 si todos sustituidos por 1): dp a b c d e f g 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 0 2 0 1 1 0 1 1 0 1 3 0 1 1 1 1 0 0 1 4 0 0 1 1 0 0 1 1 5 0 1 0 1 1 0 1 1 6 0 1 0 1 1 1 1 1 7 0 1 1 1 0 0 0 0 8 0 1 1 1 1 1 1 1 9 0 1 1 1 1 0 1 1","title":"Display de siete segmentos"},{"location":"arduino/19.Display%207segmentos%201%20digito/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/19.Display%207segmentos%201%20digito/#esquema","text":"","title":"Esquema"},{"location":"arduino/19.Display%207segmentos%201%20digito/#diagrama-de-cableado","text":"131 / 165 La siguiente tabla muestra la tabla de correspondencias pantalla de siete segmentos 74HC595 pin 74HC595 pin Seven shows remarkable control pin (stroke) Q0 7 (A) Q1 6 (B) Q2 4 (C) Q3 2 (D) Q4 1 (E) Q5 9 (F) Q6 10 (G) Q7 5 (DP)","title":"Diagrama de cableado"},{"location":"arduino/19.Display%207segmentos%201%20digito/#paso-uno-conexion-74hc595","text":"En primer lugar, el cableado est\u00e1 conectado a la alimentaci\u00f3n y tierra: VCC (pin 16) y Se\u00f1or (pin 10) conectado a 5V GND (pin 8) y OE (pin 13) a tierra Pin conexi\u00f3n DS, ST_CP y SH_CP: DS (pin 14) conectado al pin de tablero UNO R3 2 (la cifra por debajo de la l\u00ednea amarilla) ST_CP (pin 12, perno de pestillo) conectado al pin de tablero UNO R3 3 (l\u00ednea azul de la figura abajo) SH_CP (pin 11, pin de reloj) conectado al pin de tablero UNO R3 4 (figura debajo de la l\u00ednea blanca)","title":"Paso uno: conexi\u00f3n 74HC595"},{"location":"arduino/19.Display%207segmentos%201%20digito/#paso-2-conectar-el-display-de-siete-segmentos","text":"El display de siete segmentos 3, 8 pin a UNO R3 Junta GND (este ejemplo utiliza el c\u00e1todo com\u00fan, si se utiliza el \u00e1nodo com\u00fan, por favor conecte el 3, 8 pines para tablero UNO R3 + 5V) Seg\u00fan la tabla anterior, conecte el 74HC595 Q0 ~ Q7 a siete segmentos pantalla pin correspondiente (A ~ G y DP) y luego cada pie en una resistencia de 220 ohmios en serie.","title":"Paso 2: conectar el display de siete segmentos"},{"location":"arduino/19.Display%207segmentos%201%20digito/#codigo","text":"int tDelay = 100; int latchPin = 11; // (11) ST_CP [RCK] on 74HC595 int clockPin = 9; // (9) SH_CP [SCK] on 74HC595 int dataPin = 12; // (12) DS [S1] on 74HC595 byte leds = 0; void updateShiftRegister() { digitalWrite(latchPin, LOW); shiftOut(dataPin, clockPin, LSBFIRST, leds); digitalWrite(latchPin, HIGH); } void setup() { pinMode(latchPin, OUTPUT); pinMode(dataPin, OUTPUT); pinMode(clockPin, OUTPUT); } void loop() { leds = 0; updateShiftRegister(); delay(tDelay); for (int i = 0; i < 8; i++) { bitSet(leds, i); updateShiftRegister(); delay(tDelay); } }","title":"C\u00f3digo"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/","text":"Lecci\u00f3n 20 Display de 7 segmentos de cuatro d\u00edgitos Resumen En esta lecci\u00f3n, aprendremos a utilizar una pantalla de 7 segmentos de 4 d\u00edgitos. Tenemos que tener en cuenta que: Si la pantalla es \u00e1nodo com\u00fan , el pin com\u00fan del \u00e1nodo se conecta a la fuente de energ\u00eda Si es de c\u00e1todo com\u00fan , el pin com\u00fan del c\u00e1todo se conecta a la tierra. Cuando se utilizan 4 d\u00edgitos de 7 segmentos, el \u00e1nodo com\u00fan o pin de c\u00e1todo com\u00fan se utiliza para controlar qu\u00e9 d\u00edgito aparece. A pesar de que hay s\u00f3lo un d\u00edgito de trabajo, el principio de persistencia de la visi\u00f3n le permite ver todos los n\u00fameros de muestra ya que cada uno es tan r\u00e1pida que apenas notar\u00e1 los intervalos de la velocidad de exploraci\u00f3n. Componentes necesarios Cantidad Componente 1 Elegoo Uno R3 1 protoboard 1 74HC595 IC 1 display de 4 d\u00edgitos de 7 segmentos 4 Resistencias de 220 ohm 1 M-M cables (cables de puente de macho a macho) Muestra de 4 d\u00edgitos de 7 segmentos Conexi\u00f3n Esquema Diagrama de cableado Cada d\u00edgito tiene 7 segmentos (A a G) y un punto decimal (D1 a D4). C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta - lecci\u00f3n 28 cuatro siete segmentos pantalla Digital y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error.","title":"20.Display 7segmentos 4 d\u00edgitos"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#leccion-20-display-de-7-segmentos-de-cuatro-digitos","text":"","title":"Lecci\u00f3n 20 Display de 7 segmentos de cuatro d\u00edgitos"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#resumen","text":"En esta lecci\u00f3n, aprendremos a utilizar una pantalla de 7 segmentos de 4 d\u00edgitos. Tenemos que tener en cuenta que: Si la pantalla es \u00e1nodo com\u00fan , el pin com\u00fan del \u00e1nodo se conecta a la fuente de energ\u00eda Si es de c\u00e1todo com\u00fan , el pin com\u00fan del c\u00e1todo se conecta a la tierra. Cuando se utilizan 4 d\u00edgitos de 7 segmentos, el \u00e1nodo com\u00fan o pin de c\u00e1todo com\u00fan se utiliza para controlar qu\u00e9 d\u00edgito aparece. A pesar de que hay s\u00f3lo un d\u00edgito de trabajo, el principio de persistencia de la visi\u00f3n le permite ver todos los n\u00fameros de muestra ya que cada uno es tan r\u00e1pida que apenas notar\u00e1 los intervalos de la velocidad de exploraci\u00f3n.","title":"Resumen"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#componentes-necesarios","text":"Cantidad Componente 1 Elegoo Uno R3 1 protoboard 1 74HC595 IC 1 display de 4 d\u00edgitos de 7 segmentos 4 Resistencias de 220 ohm 1 M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#muestra-de-4-digitos-de-7-segmentos","text":"","title":"Muestra de 4 d\u00edgitos de 7 segmentos"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#esquema","text":"","title":"Esquema"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#diagrama-de-cableado","text":"Cada d\u00edgito tiene 7 segmentos (A a G) y un punto decimal (D1 a D4).","title":"Diagrama de cableado"},{"location":"arduino/20.Display%207segmentos%204%20d%C3%ADgitos/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta - lecci\u00f3n 28 cuatro siete segmentos pantalla Digital y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error.","title":"C\u00f3digo"},{"location":"arduino/21.MotorCC/","text":"Lecci\u00f3n 21 Motor de corriente continua Resumen En esta lecci\u00f3n, aprender\u00e1 a controlar un peque\u00f1o motor DC (corriente continua) usando un R3 de UNO y un transistor. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-punto breadboard x L293D IC (1) x Aspa de ventilador y motor de3-6v x M- M cables (cables de puente de macho a macho) x M\u00f3dulo de alimentaci\u00f3n x 9V1A adaptador corriente Fuente de alimentaci\u00f3n de la placa El peque\u00f1o motor de corriente continua es probable que use m\u00e1s energ\u00eda que la que Arduino puede suministrar. Si tratamos de conectar el motor directamente a un pin, podr\u00edamos da\u00f1arlo. Para ello usar un m\u00f3dulo de alimentaci\u00f3n que proporciona alimentaci\u00f3n Especificaciones del producto: Bloqueo Encendido interruptor LED Power indicador Entrada voltaje: 6.5-9v (CC) trav\u00e9s 5.5mm x 2,1 mm enchufe Salida voltaje: 3.3V / 5v M\u00e1ximo salida actual: 700 mA Independiente control riel salida. 0v, 3.3v, 5v a protoboard Salida pins principal para usos externos Tama\u00f1o: 2.1 en x 1.4 en USB dispositivo conector a bordo a power externos dispositivo Configuraci\u00f3n de voltaje de salida: La izquierda y derecha de la tensi\u00f3n de salida puede configurarse independientemente. Para seleccionar la tensi\u00f3n de salida, mover el puente a los pines correspondientes. Nota: indicador de energ\u00eda LED y los carriles de la energ\u00eda de protoboard no se enciende si ambos puentes est\u00e1n en la posici\u00f3n \"OFF\". Nota IMPORTANTE: Aseg\u00farese de alinear el m\u00f3dulo correctamente en la placa de pruebas. El pin negativo (-) en el m\u00f3dulo se alinea con la l\u00ednea azul (-) de la placa- El pin positivo (+) se alinea con la l\u00ednea roja (+). L293D Este es un chip muy \u00fatil, pues puede controlar dos motores independientemente . Estamos usando s\u00f3lo la mitad del chip en esta lecci\u00f3n, la mayor\u00eda de los pines en el lado derecho del chip son para el control de un segundo motor. Especificaciones del producto: Tensi\u00f3n de alimentaci\u00f3n 4,5 V a 36 V Salida de corriente 1 A por canal (600 mA para el L293D) M\u00e1xima salida de corriente 2 A por canal (1.2 A para L293D) Diagrama de pines Descripci\u00f3n El L293 y L293D son cu\u00e1druples controladores de alta corriente. El L293 est\u00e1 dise\u00f1ado para proporcionar corrientes de transmisi\u00f3n bidireccional de hasta 1 A con tensiones de 4,5 V a 36 V. El L293D est\u00e1 dise\u00f1ado para proporcionar bidireccional corrientes de impulsi\u00f3n de hasta 600 mA en tensiones de 4,5 V a 36 V. Ambos dispositivos est\u00e1n dise\u00f1ados para manejar cargas inductivas como rel\u00e9s, solenoides, dc y motores paso a paso bipolares, as\u00ed como otras cargas de alta corriente de alta tensi\u00f3n en aplicaciones de suministro de positivo. Todas las entradas son TTL compatible. Cada salida es un circuito de coche completa totem-pole, con un fregadero de transistor Darlington y una fuente de pseudo-Darlington. Conductores est\u00e1n habilitados en pares, con conductores de 1 y 2 de 1, 2EN y drivers 3 y 4 de 3, 4EN. Cuando una entrada enable est\u00e1 en valor alto, est\u00e1n habilitados los controladores asociados, y sus salidas son activas y en fase con sus aportaciones. Cuando la entrada enable est\u00e1 en valor bajo, se deshabilitan los controladores y sus salidas quedan en estado de alta impedancia. Con las entradas de datos adecuadas, cada par de conductores forma una unidad reversible completo-H (o puente) adecuada para aplicaciones de solenoide o motor. Diagrama de bloques VCC1 1 1 16 1 2 15 1 M 0 0 1 3 14 4 13 M 5 12 6 11 2 3 1 1 7 10 0 0 9 8 1 M 0 VCC2 Me hart\u00e9 de diagramas de pinout indescifrables dentro de las hojas de datos, por lo que han dise\u00f1ado mi propio que creo que da m\u00e1s informaci\u00f3n pertinente. Hay 3 cables conectados al Arduino, 2 cables conectados al motor y 1 alambre conectado a una bater\u00eda. Para utilizar este pin: Ocupa el lado izquierdo con el primer motor, el lado derecho trata con un segundo motor. S\u00ed, usted puede funcionar con solamente un motor conectado. Control de la velocidad M1 PWM lo conectaremos a un pin PWM de Arduino. Est\u00e1 marcados en la ONU, el pin 5 es un ejemplo. Cualquier n\u00famero entero entre 0 y 255, donde: 0 es apagado1 128 es la mitad de velocidad 255 es la velocidad m\u00e1xima de salida. Seg\u00fan el valor se generar\u00e1 una se\u00f1al PWM diferente. Cambiar la direcci\u00f3n de giro. Entradas de direcci\u00f3n de M1 0/1 y M1 1/0 Conectar estos pines de Arduino digitales dos a dos. Un pin de salida tan alto y el otro pin como baja y el motor girar\u00e1 en un sentido. Revertir las salidas a baja y alta, y el motor girar\u00e1 en sentido contrario. Conexi\u00f3n Esquema Diagrama de cableado El c\u00f3digo siguiente no utiliza una fuente de alimentaci\u00f3n separada (es decir, una bater\u00eda), sino que utiliza en su lugar la alimentaci\u00f3n de 5v del Arduino. Tenga en cuenta que esto ser\u00eda arriesgado sin que el L293D lo controlara. Nunca deber\u00eda conectar un motor directamente al Arduino, porque al desconectar un motor obtendr\u00e1 una retroalimentaci\u00f3n el\u00e9ctrica. Con un motor peque\u00f1o, esto da\u00f1ar\u00e1 su Arduino, y con un motor grande, usted puede mirar un efecto interesante de la llama y de las chispas. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 29 motores y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. Ligeramente, el motor girar\u00e1 en sentido horario y antihorario por 5 veces. Luego, seguir\u00e1 dram\u00e1ticamente gire hacia la derecha. Tras una breve pausa, lo dram\u00e1ticamente girar\u00e1 hacia la izquierda. A continuaci\u00f3n, la tarjeta controladora enviar\u00e1 la se\u00f1al PWM para el motor, el motor lentamente reducir su m\u00e1xima RPM al m\u00ednimo y aumentar al m\u00e1ximo otra vez. Por \u00faltimo, se trata de una parada para 10s hasta que comience el siguiente ciclo. C\u00f3digo #define ENABLE 5 #define DIRA 3 #define DIRB 4 int i; void setup() { //---set pin direction pinMode(ENABLE,OUTPUT); pinMode(DIRA,OUTPUT); pinMode(DIRB,OUTPUT); Serial.begin(9600); } void loop() { //---back and forth example Serial.println(\"One way, then reverse\"); digitalWrite(ENABLE,HIGH); // enable on for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(500); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(500); } digitalWrite(ENABLE,LOW); // disable delay(2000); Serial.println(\"fast Slow example\"); //---fast/slow stop example digitalWrite(ENABLE,HIGH); //enable on digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(3000); digitalWrite(ENABLE,LOW); //slow stop delay(1000); digitalWrite(ENABLE,HIGH); //enable on digitalWrite(DIRA,LOW); //one way digitalWrite(DIRB,HIGH); delay(3000); digitalWrite(DIRA,LOW); //fast stop delay(2000); Serial.println(\"PWM full then slow\"); //---PWM example, full speed then slow analogWrite(ENABLE,255); //enable on digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(2000); analogWrite(ENABLE,180); //half speed delay(2000); analogWrite(ENABLE,128); //half speed delay(2000); analogWrite(ENABLE,50); //half speed delay(2000); analogWrite(ENABLE,128); //half speed delay(2000); analogWrite(ENABLE,180); //half speed delay(2000); analogWrite(ENABLE,255); //half speed delay(2000); digitalWrite(ENABLE,LOW); //all done delay(10000); }","title":"21.MotorCC"},{"location":"arduino/21.MotorCC/#leccion-21-motor-de-corriente-continua","text":"","title":"Lecci\u00f3n 21 Motor de corriente continua"},{"location":"arduino/21.MotorCC/#resumen","text":"En esta lecci\u00f3n, aprender\u00e1 a controlar un peque\u00f1o motor DC (corriente continua) usando un R3 de UNO y un transistor.","title":"Resumen"},{"location":"arduino/21.MotorCC/#componentes-necesarios","text":"(1) x Elegoo Uno R3 x 830 tie-punto breadboard x L293D IC (1) x Aspa de ventilador y motor de3-6v x M- M cables (cables de puente de macho a macho) x M\u00f3dulo de alimentaci\u00f3n x 9V1A adaptador corriente","title":"Componentes necesarios"},{"location":"arduino/21.MotorCC/#fuente-de-alimentacion-de-la-placa","text":"El peque\u00f1o motor de corriente continua es probable que use m\u00e1s energ\u00eda que la que Arduino puede suministrar. Si tratamos de conectar el motor directamente a un pin, podr\u00edamos da\u00f1arlo. Para ello usar un m\u00f3dulo de alimentaci\u00f3n que proporciona alimentaci\u00f3n Especificaciones del producto: Bloqueo Encendido interruptor LED Power indicador Entrada voltaje: 6.5-9v (CC) trav\u00e9s 5.5mm x 2,1 mm enchufe Salida voltaje: 3.3V / 5v M\u00e1ximo salida actual: 700 mA Independiente control riel salida. 0v, 3.3v, 5v a protoboard Salida pins principal para usos externos Tama\u00f1o: 2.1 en x 1.4 en USB dispositivo conector a bordo a power externos dispositivo Configuraci\u00f3n de voltaje de salida: La izquierda y derecha de la tensi\u00f3n de salida puede configurarse independientemente. Para seleccionar la tensi\u00f3n de salida, mover el puente a los pines correspondientes. Nota: indicador de energ\u00eda LED y los carriles de la energ\u00eda de protoboard no se enciende si ambos puentes est\u00e1n en la posici\u00f3n \"OFF\". Nota IMPORTANTE: Aseg\u00farese de alinear el m\u00f3dulo correctamente en la placa de pruebas. El pin negativo (-) en el m\u00f3dulo se alinea con la l\u00ednea azul (-) de la placa- El pin positivo (+) se alinea con la l\u00ednea roja (+).","title":"Fuente de alimentaci\u00f3n de la placa"},{"location":"arduino/21.MotorCC/#l293d","text":"Este es un chip muy \u00fatil, pues puede controlar dos motores independientemente . Estamos usando s\u00f3lo la mitad del chip en esta lecci\u00f3n, la mayor\u00eda de los pines en el lado derecho del chip son para el control de un segundo motor. Especificaciones del producto: Tensi\u00f3n de alimentaci\u00f3n 4,5 V a 36 V Salida de corriente 1 A por canal (600 mA para el L293D) M\u00e1xima salida de corriente 2 A por canal (1.2 A para L293D)","title":"L293D"},{"location":"arduino/21.MotorCC/#diagrama-de-pines","text":"","title":"Diagrama de pines"},{"location":"arduino/21.MotorCC/#descripcion","text":"El L293 y L293D son cu\u00e1druples controladores de alta corriente. El L293 est\u00e1 dise\u00f1ado para proporcionar corrientes de transmisi\u00f3n bidireccional de hasta 1 A con tensiones de 4,5 V a 36 V. El L293D est\u00e1 dise\u00f1ado para proporcionar bidireccional corrientes de impulsi\u00f3n de hasta 600 mA en tensiones de 4,5 V a 36 V. Ambos dispositivos est\u00e1n dise\u00f1ados para manejar cargas inductivas como rel\u00e9s, solenoides, dc y motores paso a paso bipolares, as\u00ed como otras cargas de alta corriente de alta tensi\u00f3n en aplicaciones de suministro de positivo. Todas las entradas son TTL compatible. Cada salida es un circuito de coche completa totem-pole, con un fregadero de transistor Darlington y una fuente de pseudo-Darlington. Conductores est\u00e1n habilitados en pares, con conductores de 1 y 2 de 1, 2EN y drivers 3 y 4 de 3, 4EN. Cuando una entrada enable est\u00e1 en valor alto, est\u00e1n habilitados los controladores asociados, y sus salidas son activas y en fase con sus aportaciones. Cuando la entrada enable est\u00e1 en valor bajo, se deshabilitan los controladores y sus salidas quedan en estado de alta impedancia. Con las entradas de datos adecuadas, cada par de conductores forma una unidad reversible completo-H (o puente) adecuada para aplicaciones de solenoide o motor.","title":"Descripci\u00f3n"},{"location":"arduino/21.MotorCC/#diagrama-de-bloques","text":"VCC1 1 1 16 1 2 15 1 M 0 0 1 3 14 4 13 M 5 12 6 11 2 3 1 1 7 10 0 0 9 8 1 M 0 VCC2 Me hart\u00e9 de diagramas de pinout indescifrables dentro de las hojas de datos, por lo que han dise\u00f1ado mi propio que creo que da m\u00e1s informaci\u00f3n pertinente. Hay 3 cables conectados al Arduino, 2 cables conectados al motor y 1 alambre conectado a una bater\u00eda. Para utilizar este pin: Ocupa el lado izquierdo con el primer motor, el lado derecho trata con un segundo motor. S\u00ed, usted puede funcionar con solamente un motor conectado.","title":"Diagrama de bloques"},{"location":"arduino/21.MotorCC/#control-de-la-velocidad","text":"M1 PWM lo conectaremos a un pin PWM de Arduino. Est\u00e1 marcados en la ONU, el pin 5 es un ejemplo. Cualquier n\u00famero entero entre 0 y 255, donde: 0 es apagado1 128 es la mitad de velocidad 255 es la velocidad m\u00e1xima de salida. Seg\u00fan el valor se generar\u00e1 una se\u00f1al PWM diferente.","title":"Control de la velocidad"},{"location":"arduino/21.MotorCC/#cambiar-la-direccion-de-giro","text":"Entradas de direcci\u00f3n de M1 0/1 y M1 1/0 Conectar estos pines de Arduino digitales dos a dos. Un pin de salida tan alto y el otro pin como baja y el motor girar\u00e1 en un sentido. Revertir las salidas a baja y alta, y el motor girar\u00e1 en sentido contrario.","title":"Cambiar la direcci\u00f3n de giro."},{"location":"arduino/21.MotorCC/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/21.MotorCC/#esquema","text":"","title":"Esquema"},{"location":"arduino/21.MotorCC/#diagrama-de-cableado","text":"El c\u00f3digo siguiente no utiliza una fuente de alimentaci\u00f3n separada (es decir, una bater\u00eda), sino que utiliza en su lugar la alimentaci\u00f3n de 5v del Arduino. Tenga en cuenta que esto ser\u00eda arriesgado sin que el L293D lo controlara. Nunca deber\u00eda conectar un motor directamente al Arduino, porque al desconectar un motor obtendr\u00e1 una retroalimentaci\u00f3n el\u00e9ctrica. Con un motor peque\u00f1o, esto da\u00f1ar\u00e1 su Arduino, y con un motor grande, usted puede mirar un efecto interesante de la llama y de las chispas.","title":"Diagrama de cableado"},{"location":"arduino/21.MotorCC/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 29 motores y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. Ligeramente, el motor girar\u00e1 en sentido horario y antihorario por 5 veces. Luego, seguir\u00e1 dram\u00e1ticamente gire hacia la derecha. Tras una breve pausa, lo dram\u00e1ticamente girar\u00e1 hacia la izquierda. A continuaci\u00f3n, la tarjeta controladora enviar\u00e1 la se\u00f1al PWM para el motor, el motor lentamente reducir su m\u00e1xima RPM al m\u00ednimo y aumentar al m\u00e1ximo otra vez. Por \u00faltimo, se trata de una parada para 10s hasta que comience el siguiente ciclo.","title":"C\u00f3digo"},{"location":"arduino/21.MotorCC/#codigo_1","text":"#define ENABLE 5 #define DIRA 3 #define DIRB 4 int i; void setup() { //---set pin direction pinMode(ENABLE,OUTPUT); pinMode(DIRA,OUTPUT); pinMode(DIRB,OUTPUT); Serial.begin(9600); } void loop() { //---back and forth example Serial.println(\"One way, then reverse\"); digitalWrite(ENABLE,HIGH); // enable on for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(500); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(500); } digitalWrite(ENABLE,LOW); // disable delay(2000); Serial.println(\"fast Slow example\"); //---fast/slow stop example digitalWrite(ENABLE,HIGH); //enable on digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(3000); digitalWrite(ENABLE,LOW); //slow stop delay(1000); digitalWrite(ENABLE,HIGH); //enable on digitalWrite(DIRA,LOW); //one way digitalWrite(DIRB,HIGH); delay(3000); digitalWrite(DIRA,LOW); //fast stop delay(2000); Serial.println(\"PWM full then slow\"); //---PWM example, full speed then slow analogWrite(ENABLE,255); //enable on digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(2000); analogWrite(ENABLE,180); //half speed delay(2000); analogWrite(ENABLE,128); //half speed delay(2000); analogWrite(ENABLE,50); //half speed delay(2000); analogWrite(ENABLE,128); //half speed delay(2000); analogWrite(ENABLE,180); //half speed delay(2000); analogWrite(ENABLE,255); //half speed delay(2000); digitalWrite(ENABLE,LOW); //all done delay(10000); }","title":"C\u00f3digo"},{"location":"arduino/22.Rele/","text":"22. Rel\u00e9 Resumen En esta lecci\u00f3n, aprender\u00e1 a utilizar un rel\u00e9 Componentes necesarios (1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x Ventilador de aspa y 3-6v dc motor x L293D IC x 5v Rel\u00e9 x M\u00f3dulo de alimentaci\u00f3n x 9V1A Adaptador x M-M cables (cables de puente de macho a macho Rel\u00e9 Un rel\u00e9 es un interruptor operado el\u00e9ctricamente. Muchos rel\u00e9s utilizan un electroim\u00e1n para operar mec\u00e1nicamente un interruptor, pero otros principios de funcionamiento tambi\u00e9n se utilizan como rel\u00e9s de estado s\u00f3lidos. Usos Los rel\u00e9s se utilizan donde es necesario un circuito de control por una se\u00f1al de baja potencia (con aislamiento el\u00e9ctrico total entre el control y los circuitos controlados), o donde varios circuitos deben ser controlados por una se\u00f1al. Un tipo de rel\u00e9 que pueda manejar la alta potencia necesaria para controlar directamente un motor el\u00e9ctrico u otras cargas se llama un contactor. Rel\u00e9s de estado s\u00f3lidos controlan de circuitos de potencia sin partes m\u00f3viles, en cambio usando un dispositivo de semiconductor para realizar la conmutaci\u00f3n. Relevadores con caracter\u00edsticas de funcionamiento calibradas y a veces m\u00faltiples bobinas de funcionamiento se utilizan para proteger circuitos el\u00e9ctricos contra sobrecarga o fallos. En los sistemas modernos de energ\u00eda el\u00e9ctrica, estas funciones son realizadas por instrumentos digitales llamados \"rel\u00e9s de protecci\u00f3n\". Rel\u00e9 con motor de coche en Arduino A continuaci\u00f3n es el esquema de c\u00f3mo rel\u00e9 de coche con Arduino. Puede ser complicado insertar el rel\u00e9 en la protoboard. Tienes que doblar una de las patillas del rel\u00e9 un poco para poder insertarlo Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Montaje real Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. El rel\u00e9 a recoger con un sonido de timbre. Entonces, el motor girar\u00e1. Despu\u00e9s de un per\u00edodo de tiempo, se liberar\u00e1 el rel\u00e9 y el motor se detiene. C\u00f3digo fuente #define ENABLE 5 #define DIRA 3 #define DIRB 4 int i; void setup() { //---set pin direction pinMode(ENABLE,OUTPUT); pinMode(DIRA,OUTPUT); pinMode(DIRB,OUTPUT); Serial.begin(9600); } void loop() { //---back and forth example Serial.println(\"One way, then reverse\"); digitalWrite(ENABLE,HIGH); // enable on for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(750); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(750); } digitalWrite(ENABLE,LOW); // disable delay(3000); for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(750); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(750); } digitalWrite(ENABLE,LOW); // disable delay(3000); }","title":"22. Rel\u00e9"},{"location":"arduino/22.Rele/#22-rele","text":"","title":"22. Rel\u00e9"},{"location":"arduino/22.Rele/#resumen","text":"En esta lecci\u00f3n, aprender\u00e1 a utilizar un rel\u00e9","title":"Resumen"},{"location":"arduino/22.Rele/#componentes-necesarios","text":"(1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x Ventilador de aspa y 3-6v dc motor x L293D IC x 5v Rel\u00e9 x M\u00f3dulo de alimentaci\u00f3n x 9V1A Adaptador x M-M cables (cables de puente de macho a macho","title":"Componentes necesarios"},{"location":"arduino/22.Rele/#rele","text":"Un rel\u00e9 es un interruptor operado el\u00e9ctricamente. Muchos rel\u00e9s utilizan un electroim\u00e1n para operar mec\u00e1nicamente un interruptor, pero otros principios de funcionamiento tambi\u00e9n se utilizan como rel\u00e9s de estado s\u00f3lidos.","title":"Rel\u00e9"},{"location":"arduino/22.Rele/#usos","text":"Los rel\u00e9s se utilizan donde es necesario un circuito de control por una se\u00f1al de baja potencia (con aislamiento el\u00e9ctrico total entre el control y los circuitos controlados), o donde varios circuitos deben ser controlados por una se\u00f1al. Un tipo de rel\u00e9 que pueda manejar la alta potencia necesaria para controlar directamente un motor el\u00e9ctrico u otras cargas se llama un contactor. Rel\u00e9s de estado s\u00f3lidos controlan de circuitos de potencia sin partes m\u00f3viles, en cambio usando un dispositivo de semiconductor para realizar la conmutaci\u00f3n. Relevadores con caracter\u00edsticas de funcionamiento calibradas y a veces m\u00faltiples bobinas de funcionamiento se utilizan para proteger circuitos el\u00e9ctricos contra sobrecarga o fallos. En los sistemas modernos de energ\u00eda el\u00e9ctrica, estas funciones son realizadas por instrumentos digitales llamados \"rel\u00e9s de protecci\u00f3n\".","title":"Usos"},{"location":"arduino/22.Rele/#rele-con-motor-de-coche-en-arduino","text":"A continuaci\u00f3n es el esquema de c\u00f3mo rel\u00e9 de coche con Arduino. Puede ser complicado insertar el rel\u00e9 en la protoboard. Tienes que doblar una de las patillas del rel\u00e9 un poco para poder insertarlo","title":"Rel\u00e9 con motor de coche en Arduino"},{"location":"arduino/22.Rele/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/22.Rele/#esquema","text":"","title":"Esquema"},{"location":"arduino/22.Rele/#diagrama-de-cableado","text":"","title":"Diagrama de cableado"},{"location":"arduino/22.Rele/#codigo","text":"","title":"C\u00f3digo"},{"location":"arduino/22.Rele/#montaje-real","text":"Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. El rel\u00e9 a recoger con un sonido de timbre. Entonces, el motor girar\u00e1. Despu\u00e9s de un per\u00edodo de tiempo, se liberar\u00e1 el rel\u00e9 y el motor se detiene.","title":"Montaje real"},{"location":"arduino/22.Rele/#codigo-fuente","text":"#define ENABLE 5 #define DIRA 3 #define DIRB 4 int i; void setup() { //---set pin direction pinMode(ENABLE,OUTPUT); pinMode(DIRA,OUTPUT); pinMode(DIRB,OUTPUT); Serial.begin(9600); } void loop() { //---back and forth example Serial.println(\"One way, then reverse\"); digitalWrite(ENABLE,HIGH); // enable on for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(750); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(750); } digitalWrite(ENABLE,LOW); // disable delay(3000); for (i=0;i<5;i++) { digitalWrite(DIRA,HIGH); //one way digitalWrite(DIRB,LOW); delay(750); digitalWrite(DIRA,LOW); //reverse digitalWrite(DIRB,HIGH); delay(750); } digitalWrite(ENABLE,LOW); // disable delay(3000); }","title":"C\u00f3digo fuente"},{"location":"arduino/23.Motorpasoapaso/","text":"Lecci\u00f3n 23 Motor paso a paso Resumen En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para manejar un motor paso a paso. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO Componentes necesarios (1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x m\u00f3dulo de controlador de motor paso a paso de x ULN2003 x Motor paso a paso x 9V1A Adaptador x Power supply module x F-M cables (cables de hembra a macho DuPont) M-M wire (hilo puente de macho a macho) Motor paso a paso Un motor paso a paso es un dispositivo electromec\u00e1nico que convierte pulsos el\u00e9ctricos en movimientos mec\u00e1nicos discretos. El eje o eje de un motor paso a paso gira en incrementos discretos cuando impulsos de mando el\u00e9ctrico se aplican a \u00e9l en la secuencia correcta. La rotaci\u00f3n de los motores tiene varias relaciones directas a estos pulsos de entrada aplicadas. La secuencia de los pulsos aplicados se relaciona directamente con la direcci\u00f3n de rotaci\u00f3n de ejes motor. La velocidad de la rotaci\u00f3n de los ejes motor est\u00e1 directamente relacionada con la frecuencia de los pulsos de entrada y la duraci\u00f3n de la rotaci\u00f3n est\u00e1 directamente relacionada con el n\u00famero de pulsos de entrada aplicada. Una de las ventajas m\u00e1s importantes de un motor paso a paso es su capacidad para ser controlado con precisi\u00f3n en un sistema de lazo abierto. Control de lazo abierto significa que ninguna informaci\u00f3n de retroalimentaci\u00f3n de posici\u00f3n es necesario. Este tipo de control elimina la necesidad de costosos dispositivos de detecci\u00f3n y regeneraci\u00f3n como codificadores \u00f3pticos. Su posici\u00f3n es conocida simplemente por hacer el seguimiento de los pulsos de entrada de paso 28BYJ-48 los par\u00e1metros del motor paso a paso Modelo: 28BYJ-48 Tensi\u00f3n nominal: 5 VDC N\u00famero de fase: 4 Cociente de la variaci\u00f3n de velocidad: 1/64 \u00c1ngulo de paso: 5,625 \u00b0 64 Frecuencia: 100Hz Resistencia de la C.C.: 50\u03a9\u00b17 %(25 \u00b0 C) Inactivo en tracci\u00f3n frecuencia: > 600Hz Frecuencia ociosa de hacia fuera-tracci\u00f3n: > 1000Hz En tracci\u00f3n par > 34.3mN.m(120Hz) Posicionamiento autom\u00e1tico par > 34.3mN.m Par de fricci\u00f3n: 600-1200 gf.cm Tire un par: 300 gf.cm Resistencia de aislamiento > 10M\u03a9(500V) Aislantes de electricidad : 600VAC/1mA/1s Grado de aislamiento : A Subida de temperatura < 40K(120Hz) Ruido < 35dB (120Hz, No carga, 10cm Esquema de circuitos El motor de pasos bipolar tiene generalmente cuatro cables que salen de \u00e9l. A diferencia de los motores PAP unipolares, steppers bipolares no tienen ninguna conexi\u00f3n com\u00fan de centro. Tienen dos juegos independientes de bobinas en lugar de otro. Se pueden distinguir de steppers unipolares midiendo la resistencia entre los cables. Debe encontrar dos pares de cables de igual resistencia. Si tienes las puntas de su medidor conectado a dos cables que no est\u00e1n conectados (es decir, no conectada a la bobina del mismo), deber\u00eda ver resistencia infinita (o sin continuidad). ULN2003 Placa conductora Descripci\u00f3n del producto Tama\u00f1o: 42mmx30mm Chip de controlador de uso ULN2003, 500mA A. B. C. D LED que indica las cuatro fases las condiciones de trabajo motor paso a paso. Blanco jack es el conector est\u00e1ndar motor cuatro fase paso a paso. Pines de alimentaci\u00f3n son separados Mantuvimos las clavijas del resto de la viruta del ULN2003 para sus prototipos m\u00e1s. La forma m\u00e1s sencilla de conexi\u00f3n un paso a paso unipolar a Arduino es utilizar un desglose para chip de ULN2003A transistor array. El ULN2003A contiene siete controladores de transistor Darlington y es algo as\u00edcomo tener siete transistores TIP120 todo en un paquete. El ULN2003A puede pasar hasta 500 mA por canal y tiene una ca\u00edda de tensi\u00f3n interna de 1V cuando en. Tambi\u00e9n contiene diodos de abrazadera interna para disipar las puntas de tensi\u00f3n al manejar cargas inductivas. Para controlar el paso a paso, aplicamos tensi\u00f3n a cada una de las bobinas en una secuencia espec\u00edfica. La secuencia ir\u00eda as\u00ed: Estos son esquemas que muestran c\u00f3mo un paso a paso unipolar de interfaz motor a cuatro pines controlador utilizando un ULN2003A y mostrando c\u00f3mo la interfaz usando cuatro com Conexi\u00f3n Esquema Diagrama de cableado Estamos utilizando 4 pines para controlar el paso a paso. Pin 8-11 controlan el motor paso a paso. Conectamos la tierra de a UNO para el motor paso a paso. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 31 Motor de pasos y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1.","title":"23.Motorpasoapaso"},{"location":"arduino/23.Motorpasoapaso/#leccion-23-motor-paso-a-paso","text":"","title":"Lecci\u00f3n 23 Motor paso a paso"},{"location":"arduino/23.Motorpasoapaso/#resumen","text":"En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para manejar un motor paso a paso. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO","title":"Resumen"},{"location":"arduino/23.Motorpasoapaso/#componentes-necesarios","text":"(1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x m\u00f3dulo de controlador de motor paso a paso de x ULN2003 x Motor paso a paso x 9V1A Adaptador x Power supply module x F-M cables (cables de hembra a macho DuPont) M-M wire (hilo puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/23.Motorpasoapaso/#motor-paso-a-paso","text":"Un motor paso a paso es un dispositivo electromec\u00e1nico que convierte pulsos el\u00e9ctricos en movimientos mec\u00e1nicos discretos. El eje o eje de un motor paso a paso gira en incrementos discretos cuando impulsos de mando el\u00e9ctrico se aplican a \u00e9l en la secuencia correcta. La rotaci\u00f3n de los motores tiene varias relaciones directas a estos pulsos de entrada aplicadas. La secuencia de los pulsos aplicados se relaciona directamente con la direcci\u00f3n de rotaci\u00f3n de ejes motor. La velocidad de la rotaci\u00f3n de los ejes motor est\u00e1 directamente relacionada con la frecuencia de los pulsos de entrada y la duraci\u00f3n de la rotaci\u00f3n est\u00e1 directamente relacionada con el n\u00famero de pulsos de entrada aplicada. Una de las ventajas m\u00e1s importantes de un motor paso a paso es su capacidad para ser controlado con precisi\u00f3n en un sistema de lazo abierto. Control de lazo abierto significa que ninguna informaci\u00f3n de retroalimentaci\u00f3n de posici\u00f3n es necesario. Este tipo de control elimina la necesidad de costosos dispositivos de detecci\u00f3n y regeneraci\u00f3n como codificadores \u00f3pticos. Su posici\u00f3n es conocida simplemente por hacer el seguimiento de los pulsos de entrada de paso 28BYJ-48 los par\u00e1metros del motor paso a paso Modelo: 28BYJ-48 Tensi\u00f3n nominal: 5 VDC N\u00famero de fase: 4 Cociente de la variaci\u00f3n de velocidad: 1/64 \u00c1ngulo de paso: 5,625 \u00b0 64 Frecuencia: 100Hz Resistencia de la C.C.: 50\u03a9\u00b17 %(25 \u00b0 C) Inactivo en tracci\u00f3n frecuencia: > 600Hz Frecuencia ociosa de hacia fuera-tracci\u00f3n: > 1000Hz En tracci\u00f3n par > 34.3mN.m(120Hz) Posicionamiento autom\u00e1tico par > 34.3mN.m Par de fricci\u00f3n: 600-1200 gf.cm Tire un par: 300 gf.cm Resistencia de aislamiento > 10M\u03a9(500V) Aislantes de electricidad : 600VAC/1mA/1s Grado de aislamiento : A Subida de temperatura < 40K(120Hz) Ruido < 35dB (120Hz, No carga, 10cm","title":"Motor paso a paso"},{"location":"arduino/23.Motorpasoapaso/#esquema-de-circuitos","text":"El motor de pasos bipolar tiene generalmente cuatro cables que salen de \u00e9l. A diferencia de los motores PAP unipolares, steppers bipolares no tienen ninguna conexi\u00f3n com\u00fan de centro. Tienen dos juegos independientes de bobinas en lugar de otro. Se pueden distinguir de steppers unipolares midiendo la resistencia entre los cables. Debe encontrar dos pares de cables de igual resistencia. Si tienes las puntas de su medidor conectado a dos cables que no est\u00e1n conectados (es decir, no conectada a la bobina del mismo), deber\u00eda ver resistencia infinita (o sin continuidad).","title":"Esquema de circuitos"},{"location":"arduino/23.Motorpasoapaso/#uln2003-placa-conductora","text":"Descripci\u00f3n del producto Tama\u00f1o: 42mmx30mm Chip de controlador de uso ULN2003, 500mA A. B. C. D LED que indica las cuatro fases las condiciones de trabajo motor paso a paso. Blanco jack es el conector est\u00e1ndar motor cuatro fase paso a paso. Pines de alimentaci\u00f3n son separados Mantuvimos las clavijas del resto de la viruta del ULN2003 para sus prototipos m\u00e1s. La forma m\u00e1s sencilla de conexi\u00f3n un paso a paso unipolar a Arduino es utilizar un desglose para chip de ULN2003A transistor array. El ULN2003A contiene siete controladores de transistor Darlington y es algo as\u00edcomo tener siete transistores TIP120 todo en un paquete. El ULN2003A puede pasar hasta 500 mA por canal y tiene una ca\u00edda de tensi\u00f3n interna de 1V cuando en. Tambi\u00e9n contiene diodos de abrazadera interna para disipar las puntas de tensi\u00f3n al manejar cargas inductivas. Para controlar el paso a paso, aplicamos tensi\u00f3n a cada una de las bobinas en una secuencia espec\u00edfica. La secuencia ir\u00eda as\u00ed: Estos son esquemas que muestran c\u00f3mo un paso a paso unipolar de interfaz motor a cuatro pines controlador utilizando un ULN2003A y mostrando c\u00f3mo la interfaz usando cuatro com","title":"ULN2003 Placa conductora"},{"location":"arduino/23.Motorpasoapaso/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/23.Motorpasoapaso/#esquema","text":"","title":"Esquema"},{"location":"arduino/23.Motorpasoapaso/#diagrama-de-cableado","text":"Estamos utilizando 4 pines para controlar el paso a paso. Pin 8-11 controlan el motor paso a paso. Conectamos la tierra de a UNO para el motor paso a paso.","title":"Diagrama de cableado"},{"location":"arduino/23.Motorpasoapaso/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 31 Motor de pasos y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1.","title":"C\u00f3digo"},{"location":"arduino/24.Pasoapasoconmando/","text":"24. Motor paso a paso con mando a distancia Resumen e tutorial explicar\u00e1 c\u00f3mo funciona el motor de pasos de 4 fases ULN2003 28BYJ-48 y el controlador de motor de 5V. El motor El motor de pasos de 4 fases ULN2003 28BYJ-48 es un motor de pasos peque\u00f1o y econ\u00f3mico que se puede controlar con un microcontrolador. El motor tiene 4 fases, cada una con 2 polos. Cada fase requiere energ\u00eda para que el im\u00e1n se atraiga o se repulse. Los 4 imanes del motor de pasos est\u00e1n dispuestos de forma que se atraigan y se repulsen en secuencia, lo que hace que el eje del motor gire. El controlador Para controlar el motor de pasos de 4 fases, se necesita un controlador de motor. El controlador de motor de 5V es un circuito integrado que se usa para controlar el motor de pasos. El controlador de motor tiene 8 salidas, cada una conectada a una fase del motor. Para hacer que el motor gire, se activan las salidas en secuencia. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-points breadboard x IR receiver module x IR remote x ULN2003 stepper motor driver module x Stepper motor x Power supply module x 9V1A Adaptador x F-M cables (cables de hembra a macho DuPont) x M-M cable (hilo puente de macho a macho) Conexi\u00f3n Esquema Diagrama de cableado Estamos utilizando 4 pines para controlar el paso a paso y el 1 pin del sensor IR. Pernos 8-11 controlan el motor paso a paso y pin 12 recibe la informaci\u00f3n de IR. Conectamos los 5V y la tierra de la ONU en el sensor. Como medida de precauci\u00f3n, usar un protoboard alimentaci\u00f3n potencia el motor paso a paso ya que puede utilizar m\u00e1s energ\u00eda y no queremos da\u00f1ar la fuente de alimentaci\u00f3n de la UNO. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor abrir programa en el c\u00f3digo de carpeta - lecci\u00f3n 32 control paso a paso Motor con control remoto y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca de < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El c\u00f3digo reconoce s\u00f3lo 2 valores desde el control remoto IR: VOL + y VOL-. - Presionando VOL + del control remoto el motor har\u00e1 un giro completo hacia la derecha. - VOL- para hacer una rotaci\u00f3n completa en sentido antihorario. Ejemplo 1 Este c\u00f3digo hace que el motor gire en sentido horario y antihorario. void setup() { pinMode(8, OUTPUT); pinMode(9, OUTPUT); pinMode(10, OUTPUT); pinMode(11, OUTPUT); } void loop() { //Gira el motor en sentido horario digitalWrite(8, HIGH); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, HIGH); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, HIGH); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, HIGH); delay(1000); //Gira el motor en sentido antihorario digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, HIGH); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, HIGH); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, HIGH); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, HIGH); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); }","title":"24. Motor paso a paso con mando a distancia"},{"location":"arduino/24.Pasoapasoconmando/#24-motor-paso-a-paso-con-mando-a-distancia","text":"","title":"24. Motor paso a paso con mando a distancia"},{"location":"arduino/24.Pasoapasoconmando/#resumen","text":"e tutorial explicar\u00e1 c\u00f3mo funciona el motor de pasos de 4 fases ULN2003 28BYJ-48 y el controlador de motor de 5V.","title":"Resumen"},{"location":"arduino/24.Pasoapasoconmando/#el-motor","text":"El motor de pasos de 4 fases ULN2003 28BYJ-48 es un motor de pasos peque\u00f1o y econ\u00f3mico que se puede controlar con un microcontrolador. El motor tiene 4 fases, cada una con 2 polos. Cada fase requiere energ\u00eda para que el im\u00e1n se atraiga o se repulse. Los 4 imanes del motor de pasos est\u00e1n dispuestos de forma que se atraigan y se repulsen en secuencia, lo que hace que el eje del motor gire.","title":"El motor"},{"location":"arduino/24.Pasoapasoconmando/#el-controlador","text":"Para controlar el motor de pasos de 4 fases, se necesita un controlador de motor. El controlador de motor de 5V es un circuito integrado que se usa para controlar el motor de pasos. El controlador de motor tiene 8 salidas, cada una conectada a una fase del motor. Para hacer que el motor gire, se activan las salidas en secuencia.","title":"El controlador"},{"location":"arduino/24.Pasoapasoconmando/#componentes-necesarios","text":"(1) x Elegoo Uno R3 x 830 tie-points breadboard x IR receiver module x IR remote x ULN2003 stepper motor driver module x Stepper motor x Power supply module x 9V1A Adaptador x F-M cables (cables de hembra a macho DuPont) x M-M cable (hilo puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/24.Pasoapasoconmando/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/24.Pasoapasoconmando/#esquema","text":"","title":"Esquema"},{"location":"arduino/24.Pasoapasoconmando/#diagrama-de-cableado","text":"Estamos utilizando 4 pines para controlar el paso a paso y el 1 pin del sensor IR. Pernos 8-11 controlan el motor paso a paso y pin 12 recibe la informaci\u00f3n de IR. Conectamos los 5V y la tierra de la ONU en el sensor. Como medida de precauci\u00f3n, usar un protoboard alimentaci\u00f3n potencia el motor paso a paso ya que puede utilizar m\u00e1s energ\u00eda y no queremos da\u00f1ar la fuente de alimentaci\u00f3n de la UNO.","title":"Diagrama de cableado"},{"location":"arduino/24.Pasoapasoconmando/#codigo","text":"Despu\u00e9s de efectuar el cableado, por favor abrir programa en el c\u00f3digo de carpeta - lecci\u00f3n 32 control paso a paso Motor con control remoto y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca de < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El c\u00f3digo reconoce s\u00f3lo 2 valores desde el control remoto IR: VOL + y VOL-. - Presionando VOL + del control remoto el motor har\u00e1 un giro completo hacia la derecha. - VOL- para hacer una rotaci\u00f3n completa en sentido antihorario.","title":"C\u00f3digo"},{"location":"arduino/24.Pasoapasoconmando/#ejemplo-1","text":"Este c\u00f3digo hace que el motor gire en sentido horario y antihorario. void setup() { pinMode(8, OUTPUT); pinMode(9, OUTPUT); pinMode(10, OUTPUT); pinMode(11, OUTPUT); } void loop() { //Gira el motor en sentido horario digitalWrite(8, HIGH); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, HIGH); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, HIGH); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, HIGH); delay(1000); //Gira el motor en sentido antihorario digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, HIGH); delay(1000); digitalWrite(8, LOW); digitalWrite(9, LOW); digitalWrite(10, HIGH); digitalWrite(11, LOW); delay(1000); digitalWrite(8, LOW); digitalWrite(9, HIGH); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); digitalWrite(8, HIGH); digitalWrite(9, LOW); digitalWrite(10, LOW); digitalWrite(11, LOW); delay(1000); }","title":"Ejemplo 1"},{"location":"arduino/elegoo/","text":"PR\u00c1CTICAS ARDUINO Lecci\u00f3n 0 Instalaci\u00f3n IDE Introducci\u00f3n Instalaci\u00f3n de Arduino (Mac OS X) Instalaci\u00f3n de Arduino (Linux) Lecci\u00f3n 1 A\u00f1adir librer\u00edas y Monitor serie abierta Instalaci\u00f3n de librer\u00edas adicionales de Arduino \u00bfQu\u00e9 son las librer\u00edas? C\u00f3mo instalar una librer\u00eda Importar una librer\u00eda de .zip Manual de instalaci\u00f3n Arduino serie Monitor (Windows, Mac, Linux) Configuraci\u00f3n Pros Contras Lecci\u00f3n 2 Blink Resumen Placa Arduino UNO R3 Comentarios Cambiar la frecuencia de parpadeo Lecci\u00f3n 3 LED Resumen Protoboard LED Resistencias Conexi\u00f3n Esquema Diagrama de Cableado Lecci\u00f3n 4 RGB LED Resumen RGB Color Teor\u00eda (PWM) Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 5 Entradas Digitales Resumen Pulsadores Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 6 Activar zumbador Resumen Zumbador Conexi\u00f3n Esquema Diagrama de conexiones C\u00f3digo Lecci\u00f3n 7 Zumbador Pasivo Resumen Componentes necesarios Zumbador pasivo Conexi\u00f3n Esquema Diagrama de conexiones C\u00f3digo Lecci\u00f3n 8 Interruptor de bola de inclinaci\u00f3n Resumen Sensor de inclinaci\u00f3n Conexi\u00f3n Esquema Diagrama de conexiones C\u00f3digo Lecci\u00f3n 9 Servo Resumen Servomotor SG90 Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 10 M\u00f3dulo Sensor ultras\u00f3nico Resumen Componentes necesarios Sensor de ultrasonidos Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 11 Sensor de humedad y temperatura DHT11 Resumen Sensor de temperatura y humedad Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 12 M\u00f3dulo Joystick anal\u00f3gico Resumen Palanca de mando Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 13 M\u00f3dulo de receptor IR Resumen Componentes necesarios Sensor receptor de infrarrojos Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 14 Pantalla LCD Resumen Componentes necesarios LCD1602 Conexi\u00f3n Esquema Diagrama de cableado Codigo Lecci\u00f3n 15: Term\u00f3metro Resumen Componentes necesarios Termistor Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 16 Ocho LED con 74HC595 Resumen 74HC595 Registro de desplazamiento Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 17 El monitor Serial Resumen C\u00f3digo Lecci\u00f3n 18 Fotoc\u00e9lula Resumen Componentes necesarios: Fotoc\u00e9lula Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 19 74HC595 y display Segmentado Resumen Componentes necesarios Display de siete segmentos Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 20 Display de 7 segmentos de cuatro d\u00edgitos Resumen Componentes necesarios Muestra de 4 d\u00edgitos de 7 segmentos Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 21 Motor de corriente continua Resumen Componentes necesarios Fuente de alimentaci\u00f3n de la placa L293D Diagrama de bloques Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 22 Rel\u00e9 Resumen Componentes necesarios Rel\u00e9 Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 23 Motor paso a paso Resumen Componentes necesarios Motor paso a paso Esquema de circuitos ULN2003 Placa conductora Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Lecci\u00f3n 24 Control Motor paso a paso con mando a distancia Resumen Componentes necesarios Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo PR\u00c1CTICAS ARDUINO Lecci\u00f3n 0 Instalaci\u00f3n IDE Introducci\u00f3n El Entorno de desarrollo integrado (IDE) de Arduino es el software de la plataforma Arduino. En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo configurar tu ordenador para usar Arduino y c\u00f3mo establecer sobre las lecciones que siguen. El programari Arduino que s\u2019utilitzar\u00e0 per programar el vostre Arduino est\u00e0 disponible per a Windows, Mac i Linux.El proc\u00e9s d\u2019instal\u00b7laci\u00f3 \u00e9s diferent per a les tres plataformes i, per desgr\u00e0cia, hi ha una certa quantitat de treballs manuals per instal\u00b7lar el programari. Paso 1: Ir a https://www.arduino.cc/en/Main/Software y a continuaci\u00f3n de la p\u00e1gina. La versi\u00f3n disponible en este sitio web es generalmente la \u00faltima versi\u00f3n y la versi\u00f3n actual puede ser m\u00e1s reciente que la versi\u00f3n en el cuadro. Paso 2 : Descargar el desarrollo software que es compatible con el sistema operativo del ordenador. Windows tomar como un ejemplo aqu\u00ed Haga click en Windows Installer. Haga click en DESCARGAR (JUST DOWNLOAD). Tambi\u00e9n est\u00e1 disponible en el material que nos proporciona la versi\u00f3n 1.8.0, y las versiones de nuestros materiales son las \u00faltimas versiones cuando se hizo este manual. Instalaci\u00f3n de Arduino (Windows) Instalar Arduino con el exe. Paquete de instalaci\u00f3n. Haga click en I Agree to see de esta ventana Click Next Puede pulsar examinar... elegir una ruta de instalaci\u00f3n o directamente en el directorio que desee. Haga Click en Install para comenzar la instalaci\u00f3n Por \u00faltimo, aparece la siguiente ventana, haga clic en Install para finalizar la instalaci\u00f3n. A continuaci\u00f3n, aparece el siguiente icono en el escritorio 13 / 165 Haga doble clic para entrar en el entorno de desarrollo deseado Directamente puede elegir el paquete de instalaci\u00f3n para la instalaci\u00f3n y omitir los contenidos abajo y saltar a la siguiente secci\u00f3n. Pero si quieres aprender algunos m\u00e9todos que no sea el paquete de instalaci\u00f3n, por favor lea la secci\u00f3n. Descomprime el archivo zip descargado, haga doble clic para abrir el programa y entrar en el entorno de desarrollo deseado Sin embargo, este m\u00e9todo de instalaci\u00f3n necesita instalaci\u00f3n de driver.. La carpeta de Arduino incluye el propio programa de Arduino y los controladores que permiten que el Arduino se conecte al ordenador mediante un cable USB. Antes de que inicie el software de Arduino, vas a instalar a los controladores USB. Conecte su cable USB en el Arduino y el en el USB en tu ordenador. La luz en el LED se enciende y usted puede obtener un mensaje de 'Found New Hardware' de Windows. Ignore este mensaje y cancele cualquier intento que Windows hace para tratar de instalar los controladores autom\u00e1ticamente. El major m\u00e9todo de instalaci\u00f3n de los controladores USB debe hacerse desde el administrador de dispositivos. Esto es accesible de diferentes maneras dependiendo de la versi\u00f3n de Windows. En Windows 7, primero tienes que abrir el Panel de Control, luego seleccione la opci\u00f3n de ver los iconos, y usted debe encontrar el administrador de dispositivos en la lista. En 'Otros dispositivos', deber\u00eda ver un icono de 'dispositivo desconocido' con un triangulo amarillo de advertencia junto a \u00e9l. Se trata de tu Arduino. Haga clic derecho sobre el dispositivo y seleccione la opci\u00f3n del men\u00fa superior (Update Driver Software...). Pedir\u00e1 a 'Buscar autom\u00e1ticamente software de controlador actualizado' o \"Examinar mi PC para el software de controlador\". Seleccione la opci\u00f3n Buscar en este ordenador en la ruta del CD , por ejemplo en D:\\arduino1.8.0\\drivers. Haga clic en 'Siguiente' y puede obtener una advertencia de seguridad, si es as\u00ed, permitir que el software a instalar. Una vez instalado el software, usted recibir\u00e1 un mensaje de confirmaci\u00f3n. Los usuarios de Windows pueden omitir las instrucciones de instalaci\u00f3n, para sistemas Mac y Linux y saltar a la lecci\u00f3n 1. Usuarios de Mac y Linux pueden seguir leyendo esta secci\u00f3n Instalaci\u00f3n de Arduino (Mac OS X) Descargar y descomprimir el archivo zip, haga doble clic en Arduino.app para entrar en el IDE de Arduino; el sistema le pedir\u00e1 que instale la librer\u00eda de tiempo de ejecuci\u00f3n de Java si no lo tienes en tu ordenador. Una vez finalizada la instalaci\u00f3n se puede ejecutar el IDE de Arduino. Instalaci\u00f3n de Arduino (Linux) Usted tendr\u00e1 que utilizar el comando de instalaci\u00f3n. Si est\u00e1 utilizando el sistema de Ubuntu, se recomienda instalar el IDE de Arduino desde el centro de software de Ubuntu. Consejos: Si tienes problemas en la instalaci\u00f3n de los controladores, consulte el UNO R3, MEGA, NANO controlador preguntas m\u00e1s frecuentes. Lecci\u00f3n 1 A\u00f1adir librer\u00edas y Monitor serie abierta Instalaci\u00f3n de librer\u00edas adicionales de Arduino Una vez que est\u00e9 instalado con el software de Arduino y utilizando las funciones integradas, puede que desee ampliar la capacidad de tu Arduino con librer\u00eda s adicionales. \u00bfQu\u00e9 son las librer\u00edas? Las librer\u00edas son una colecci\u00f3n de funciones que hacen que sea nos facilitan conectar con un sensor, pantalla, m\u00f3dulo, etc\u00e9tera. Por ejemplo, la librer\u00eda LiquidCrystal incorporada facilita hablar con pantallas LCD de caracteres. Hay cientos de librer\u00edas adicionales disponibles en Internet. Para utilizar las librer\u00edas adicionales, es necesario instalarlas primero. C\u00f3mo instalar una librer\u00eda Mediante el administrador de la librer\u00eda Para instalar una nueva librer\u00eda en el IDE de Arduino se puede utilizar el administrador de librer\u00eda * (disponible desde IDE versi\u00f3n 1.8.0). Abra el IDE y haga clic en el men\u00fa \"Dibujo\" y luego la *librer\u00eda incluyen > Gesti\u00f3n de librer\u00eda s. Encontraremos una lista de librer\u00edas que ya est\u00e1n instaladas o disponibles para su instalaci\u00f3n. En este ejemplo vamos a instalar la librer\u00eda de puente. Desplazarse por la lista para encontrarla, a continuaci\u00f3n, seleccione la versi\u00f3n de la librer\u00eda que desea instalar. A veces s\u00f3lo est\u00e1 disponible una versi\u00f3n de la librer\u00eda . Si no aparece el men\u00fa de selecci\u00f3n de versi\u00f3n, no te preocupes: es normal. Hay veces que tienes que esperar, tal como se muestra en la figura. Por favor actualice y esperar Finalmente haga click en instalar y esperar a que el IDE instale la nueva librer\u00eda . La descarga puede tardar un tiempo dependiendo tu velocidad de conexi\u00f3n. Una vez haya terminado, debe aparecer una etiqueta instalada junto a la librer\u00eda de puente. Una vez instalada puede cerrar el administrador de la librer\u00eda . Ahora ya puede encontrar la nueva librer\u00eda disponible en el men\u00fa de librer\u00eda . Si quieres a\u00f1adir tu propia librer\u00eda vaya a abrir un nuevo tema en Github. Importar una librer\u00eda de .zip Las librer\u00eda s se distribuyen a menudo como un archivo ZIP o una carpeta. El nombre de la carpeta es el nombre de la librer\u00eda . Dentro de la carpeta ser\u00e1 un archivo .cpp, un archivo .h y a menudo un fichero llamado keywords.txt , carpeta de ejemplos y otros archivos requeridos por la librer\u00eda . A partir de la versi\u00f3n 1.0.5, puede instalar librer\u00eda s de partido 3 \u00ba en el IDE. Descomprime la librer\u00eda descargada y dejarlo como est\u00e1. En el IDE de Arduino, despl\u00e1cese a Sketch > Biblioteca incluyen. En la parte superior de la lista desplegable, seleccione la opci\u00f3n \"agregar. Biblioteca ZIP''. Se le pedir\u00e1 para seleccionar la librer\u00eda que desea a\u00f1adir. Despl\u00e1cese hasta la ubicaci\u00f3n del archivo .zip y luego pincha en abrir. Volver al dibujo > men\u00fa de librer\u00eda de importaci\u00f3n. Ahora debe ver la librer\u00eda en la parte inferior del men\u00fa desplegable. Est\u00e1 listo para ser utilizado en su lista. El archivo zip se ha incorporado en la carpeta de librer\u00eda s en el directorio de plantillas de Arduino. Nota: la librer\u00eda estar\u00e1 disponible para utilizar en los dibujos, pero los ejemplos de la librer\u00eda no ser\u00e1n expuestos en el archivo > ejemplos hasta despu\u00e9s del IDE se ha reiniciado. Los dos son los enfoques m\u00e1s comunes. Asimismo, pueden manejarse sistemas MAC y Linux. El manual de instalaci\u00f3n que se introducir\u00e1 por debajo como alternativa puede usarse rara vez y los usuarios que no lo necesiten pueden saltarlo Manual de instalaci\u00f3n Para instalar la librer\u00eda , primero salga de la aplicaci\u00f3n de Arduino. Luego descomprima el archivo ZIP que contiene la librer\u00eda . Por ejemplo, para instalar una librer\u00eda llamada \"ArduinoParty\", descomprime ArduinoParty.zip. Deber\u00eda contener una carpeta llamada ArduinoParty , con archivos como ArduinoParty.cpp y ArduinoParty.h dentro. (Si los archivos .cpp y .h no en una carpeta, debe crear uno. En este caso, usted ser\u00eda hacer una carpeta llamada \"ArduinoParty\" y copiar todos los archivos que estaban en el archivo ZIP, como ArduinoParty.cpp y ArduinoParty.h.) Arrastre la carpeta de ArduinoParty en esta carpeta (la carpeta de librer\u00edas ). Bajo Windows, lo probable es que se llamar\u00e1 \"My Documents\\Arduino\\libraries\". Para usuarios de Mac, lo probable es que se llamar\u00e1 \"Bibliotecas de Arduino de documentos\". En Linux, ser\u00e1 la carpeta \"libraries\" en su programabook. La carpeta de la librer\u00eda Arduino debe ahora este aspecto (en Windows): Mi Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty.cpp Mi Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty.h Mi Documents\\Arduino\\libraries\\ArduinoParty\\examples o como esta (en Mac y Linux): Documents/Arduino/libraries/ArduinoParty/ArduinoParty.cpp Documents/Arduino/libraries/ArduinoParty/ArduinoParty.h Documentos/Arduino/**librer\u00eda**s/ArduinoParty/ejemplos Puede haber m\u00e1s archivos que solo los .cpp y .h, s\u00f3lo aseg\u00farese de que est\u00e1n todos all\u00ed. (La librer\u00eda no funcionar\u00e1 si pones los archivos .cpp y .h en la carpeta de librer\u00eda s o si est\u00e1 anidados en una carpeta extra. Visualizador: Documents\\Arduino\\libraries\\ArduinoParty.cpp y Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty\\ArduinoParty.cpp no funcionar\u00e1n.) Reiniciar la aplicaci\u00f3n Arduino. Aseg\u00farese de que la nueva librer\u00eda aparece en el directorio -> elemento de men\u00fa de librer\u00eda de importaci\u00f3n del software. \u00a1Eso es todo! \u00a1Ha instalado una librer\u00eda ! Arduino serie Monitor (Windows, Mac, Linux) Entorno de desarrollo integrado (IDE) de Arduino es el software de la plataforma Arduino. Y, porque utilizando un terminal es una gran parte del trabajo con Arduinos y otros microcontroladores, decidieron incluir un terminal de serie con el software. En el entorno de Arduino, esto se llama al Monitor serie. Realizar la conexi\u00f3n Monitor de serie viene con cualquier versi\u00f3n del IDE Arduino. Para abrirlo, simplemente haga clic en el icono Serial Monitor. Seleccionar cu\u00e1l de los puertos a abrir en el Monitor Serial es lo mismo que seleccionar un puerto para cargar c\u00f3digo de Arduino. Vaya a herramientas -> Serial Port y seleccione el puerto correcto. Consejos: Elegir el mismo puerto COM que tienes en el administrador de dispositivos. Una vez abierto, deber\u00eda ver algo como esto: Configuraci\u00f3n El Monitor Serial ha limitado opciones, pero lo suficiente para manejar la mayor\u00eda de sus necesidades de comunicaci\u00f3n serial. El primer ajuste que se puede modificar es la velocidad en baudios. Haga clic en la velocidad en baudios tasa lista desplegable para seleccionar la velocidad correcta. (9600 baudios) Por \u00faltimo, puede establecer el terminal desplazamiento autom\u00e1tico o no marcando la casilla en la esquina inferior izquierda Pros El Monitor Serial es una gran manera r\u00e1pida y f\u00e1cil para establecer una conexi\u00f3n en serie con el Arduino. Si ya trabaja en el IDE de Arduino, no hay realmente ninguna necesidad de abrir un terminal separado para Mostrar datos Contras La falta de valores deja mucho que desear en el Monitor Serial, y, para comunicaciones serie avanzadas, no puede hacer el truco. Lecci\u00f3n 2 Blink Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo programar el tablero de regulador UNO R3 a parpadear el LED integrado de Arduino y c\u00f3mo descargar programas pasos b\u00e1sicos Componente necesario: [x] (1) x Arduino Uno R3 Placa Arduino UNO R3 La placa de UNO R3 tiene unas filas de conectores a ambos lados que se utilizan para conectar varios dispositivos electr\u00f3nicos y plug-in shields que ampl\u00edan su capacidad. Tambi\u00e9n tiene un LED luminoso podemos controlar. Este LED est\u00e1 construido sobre el UNO R3 y se refiere a menudo como la 'L' LED. Este LED parpadea cuando se conecta a un enchufe del USB. Esto es porque las placas se env\u00edan generalmente con el programa de 'Blink' pre-instalado. En esta lecci\u00f3n, vamos a reprogramar el tablero UNO R3 con nuestro propio directorio de Blink y luego cambiar la tasa a la que parpadea. En la lecci\u00f3n 0, configurar el IDE de Arduino y asegur\u00f3 que podr\u00eda encontrar el puerto serie correcto para conectarse a la placa UNO R3. Ahora ha llegado el momento para poner el programa de prueba y la placa de UNO R3. El IDE de Arduino incluye una gran colecci\u00f3n de dibujos de ejemplo, se puede cargar y usar. Esto incluye un directorio de ejemplo para hacer el parpadeo del LED de 'L'. Cargar el programa de 'Blink' que encontrar\u00e1s en el sistema de men\u00fas del IDE bajo archivo > ejemplos > 01 conceptos b\u00e1sicos Cuando se abre la ventana de dibujo, agrandarla para que puedan ver el dibujo completo en la ventana. Los dibujos de ejemplo incluidos con el IDE de Arduino son de 's\u00f3lo lectura'. Es decir, puedes subir a una Junta de UNO R3, pero si cambia, no se puede guardar como el archivo mismo. Puesto que vamos a cambiar este programa, lo primero que tienes que hacer es guardar su propia copia. En el men\u00fa archivo en el IDE de Arduino, seleccione Guardar como. y guarde el dibujo con el nombre 'MyBlink' Ha guardado su copia de 'Blink' en su programabook. Esto significa que si alguna vez quiere encontrar otra vez, puede simplemente abrir usando el archivo > opci\u00f3n de men\u00fa de Sketchbook. Conecte la placa de Arduino al ordenador con el cable USB y compruebe que la Board Type y Puerto serie est\u00e1n ajustados correctamente. Nota: El tipo de tarjeta y puerto Serial aqu\u00ed no son necesariamente la misma que se muestra en la imagen. Si usas 2560, entonces usted tendr\u00e1 que elegir Mega 2560 como el tipo de Junta, otras opciones se pueden hacer de la misma manera. El puerto serie (COM) puede ser diferente, del tipo COM3 o COM4 en su ordenador. Un puerto COM correcto se supone que es COMX (arduino XXX), que es por los criterios de certificaci\u00f3n. El IDE de Arduino mostrar\u00e1 la configuraci\u00f3n actual en la parte inferior de la ventana. Haga clic en el bot\u00f3n subir . El segundo bot\u00f3n de la izquierda en la barra de herramientas. Si usted mira el \u00e1rea de estado del IDE, ver\u00e1 una barra de progreso y una serie de mensajes. Al principio, que dice 'Bosquejo compilar...'. Esto convierte el dibujo en un formato adecuado para subir a la Junta. A continuaci\u00f3n, el estado cambiar\u00e1 a subir . En este punto, los LEDs de la Arduino deben comenzar a parpadear como se transfiere el dibujo. Por \u00faltimo, el estado cambiar\u00e1 a 'Done'. El otro mensaje nos dice que el programa est\u00e1 utilizando 928 bytes de 32.256 bytes disponibles. Despu\u00e9s de la etapa de compilaci\u00f3n Sketch... podr\u00eda obtener el siguiente mensaje de error: Puede significar que su Junta no est\u00e1 conectado a todos, o no se ha instalado los drivers (si es necesario) o que se ha seleccionado el puerto serial incorrecto. Si encuentras esto, volver a la lecci\u00f3n 0 y verifique su instalaci\u00f3n. Una vez completada la carga, la Junta debe reiniciar y empiezan a parpadear. El c\u00f3digo abierto Tenga en cuenta que una gran parte de este esquema se compone de comentarios. Estas no son instrucciones de programa real; por el contrario, s\u00f3lo explican c\u00f3mo funciona el programa. Est\u00e1n all\u00ed para su beneficio. Comentarios Todo entre / y / en la parte superior del programa es un Comentario de bloque; explica lo que el programa es para. Los comentarios de una sola l\u00ednea comienzan con // y hasta el final de esa l\u00ednea se considera un comentario. La primera l\u00ednea de c\u00f3digo es: int led = 13; Creamos una variable con un nombre y guardamos el n\u00famero de pin al que el LED est\u00e1 conectado a. A continuaci\u00f3n, tenemos la funci\u00f3n de 'configuraci\u00f3n'. Otra vez, como dice el comentario, este se ejecuta cuando se presiona el bot\u00f3n de reset. Tambi\u00e9n se ejecuta cada vez que la Junta se reinicia por alguna raz\u00f3n, como poder primero se aplica a \u00e9l, o despu\u00e9s de un programa se ha subido void setup() { // Inicializa el pin digital como salida. pinMode(led, OUTPUT); } Cada programa Arduino debe tener una funci\u00f3n de setup (configuraci\u00f3n), y las instrucciones que contendr\u00e1 se insertan entre las llaves { y }. En este caso, es un comando, que, como dice el comentario dice la placa Arduino que vamos a utilizar el pin LED como salida. Tambi\u00e9n es obligatorio para un boceto tener una funci\u00f3n de loop . A diferencia de la funci\u00f3n de setup que se ejecuta s\u00f3lo una vez, despu\u00e9s de un reset, la funci\u00f3n loop , despu\u00e9s que haya terminado de ejecutar sus comandos, empezar inmediatamente otra vez. void loop() { digitalWrite(led, HIGH); // Encienda el LED (alto es el nivel de voltaje) delay(1000); // Espere un segundo digitalWrite(led, LOW); // Apagar el LED por lo que la tensi\u00f3n baja delay(1000); // Espere un segundo } Dentro de la funci\u00f3n loop , los comandos en primer lugar activar el pin del LED (alto), girar a 'retraso' de 1000 milisegundos (1 segundo), entonces el pin LED apagado y pausa para otro segundo. Cambiar la frecuencia de parpadeo Ahora vas a que el LED parpadee m\u00e1s r\u00e1pido. Como puede haber adivinado, la clave de esto radica en cambiar el par\u00e1metro () para el comando 'retardo'. Este per\u00edodo de retardo en milisegundos, as\u00ed que si desea que el LED parpadee dos veces tan r\u00e1pidamente, cambiar el valor de 1000 a 500. Esto entonces pausa durante medio segundo cada retraso en lugar de un segundo entero. Sube otra vez el programa y ver\u00e1s que el LED comienza a parpadear m\u00e1s r\u00e1pidamente. Lecci\u00f3n 3 LED Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo cambiar el brillo de un LED usando diferentes valores de resistencia. Componente necesario: - [x] (1) x Placa Arduino UNO - [x] 1 LED rojo de 5 mm - [x] (1) x resistencia de 220 ohmios - [x] (1) x resistencia de 1 k ohm - [x] (1) x resistencia de ohmio 10 k - [x] (2) x M M cables (cables de puente de macho a macho) Protoboard Un protoboard permite crear prototipos de circuitos de forma r\u00e1pida, sin necesidad de soldar las conexiones. A continuaci\u00f3n un ejemplo. Breadboards vienen en varios tama\u00f1os y configuraciones. La clase m\u00e1s simple es s\u00f3lo una rejilla de agujeros en un bloque de pl\u00e1stico. En el interior son tiras de metal que proporcionan una conexi\u00f3n el\u00e9ctrica entre los agujeros en las filas m\u00e1s cortas. Empujando las patillas de dos componentes diferentes de la misma fila se une a ellos juntos el\u00e9ctricamente. Un canal profundo, corriendo por el centro indica que hay una rotura en las conexiones, lo que significa, puede insertar un chip con las patillas a ambos lados del canal sin conectarlos juntos. Algunos breadboards tienen dos tiras de agujeros que corre a lo largo de los bordes laterales del tablero que son separados de la red principal. \u00c9stos tienen tiras corriendo por la longitud de la tabla dentro y proporcionan una manera para conectar una tensi\u00f3n com\u00fan. Son generalmente en pares para + 5 voltios y tierra. Estas tiras se denominan carriles y le permiten alimentar a muchos componentes o puntos en el tablero. Si bien son breadboards para prototipos, tienen algunas limitaciones. Porque las conexiones son temporales y de acople, no son tan fiables como conexiones soldadas. Si tienes problemas intermitentes con un circuito, puede ser debido a una mala conexi\u00f3n en una protoboard. LED LED es un gran indicador. Utilizan muy poca electricidad durar\u00e1 para siempre. En esta lecci\u00f3n, usar\u00e1s tal vez el m\u00e1s com\u00fan de todos los LEDs: un LED de 5mm de color rojo. 5mm se refiere al di\u00e1metro del LED. Otros tama\u00f1os comunes son 3mm y 10mm. Directamente no se puede conectar un LED a una bater\u00eda o fuente de tensi\u00f3n porque: 1) El LED tiene un positivo y un negativo llevar y no se encender\u00e1 si se coloca mal y debe utilizarse 2) Un LED con una resistencia para limitar o 'ahogar' la cantidad de corriente que fluye a trav\u00e9s de \u00e9l; \u00a1de lo contrario, quemar\u00e1 Si no utilizas un resistencia con un LED, entonces se puede quemar casi de inmediato, como demasiada corriente fluir\u00e1 a trav\u00e9s, calienta y destruye al 'cruce' donde se produce la luz. Hay dos maneras de saber cual es el positivo del LED y que la negativa. En primer lugar, el positivo es m\u00e1s largo. En segundo lugar, donde la pata del negativo entra en el cuerpo del LED, hay un borde plano para el caso del LED. Si le sucede que tiene un LED que tiene un lado plano al lado del cable m\u00e1s largo, usted debe saber que la pata es el positivo. Resistencias Como su nombre lo indica, resistencias de resisten el flujo de electricidad. Cuanto mayor sea el valor de la resistencia, resiste m\u00e1s y la menos corriente fluir\u00e1 a trav\u00e9s de \u00e9l. Vamos a usar esto para controlar Cu\u00e1nta electricidad fluye a trav\u00e9s del LED y por lo tanto, como claramente brilla. Pero primero, m\u00e1s sobre resistencias... La unidad de resistencia se denomina Ohm, que se abrevia generalmente a \u03a9 la letra griega Omega. Porque un Ohm es un valor bajo de resistencia (no resiste mucho a todos), incluye los valores de resistencias en k\u03a9 (1.000 \u03a9) y M\u03a9 (1.000.000 \u03a9). \u00c9stos se llaman kiloohmios y megaohmios. En esta lecci\u00f3n, vamos a utilizar tres valores diferentes de resistencia: [x] 220 \u03a9 [x] 1 k\u03a9 [x] 10 k\u03a9 Estas resistencias todas se ven iguales, excepto que tienen rayas de colores diferentes en ellos. Estas rayas decirte el valor de la resistencia. El c\u00f3digo de color resistor tiene tres franjas de colores y luego una banda de oro en un extremo. A diferencia de los LEDs, resistencias no tienen un cable positivo y negativo. Se puede conectar de cualquier manera alrededor. Si encuentra este m\u00e9todo de enfoque demasiado complicada, puedes leer la bandera de anillo de color en nuestras resistencias directamente para determinar su valor de resistencia. O puede usar un mult\u00edmetro digital en lugar de otro. Conexi\u00f3n Esquema Diagrama de Cableado La placa de desarrollo Arduino UNO es una conveniente fuente de 5 voltios, que vamos a utilizar para alimentar el LED y la resistencia. No necesita hacer nada con su UNO, salvo que lo conecte un cable USB. Con la resistencia de 220 \u03a9 en su lugar, el LED debe ser bastante brillante. Si cambia la resistencia 220 \u03a9 para la resistencia de 1 k\u03a9 , el LED aparecer\u00e1 regulador un poco. Por \u00faltimo, con el resistor de 10 k\u03a9 en su lugar, el LED estar\u00e1 casi visible. Por el momento, tienes 5V va a una pata de la resistencia, la otra pata de la resistencia va al lado positivo del LED y el otro lado del LED va a GND. Sin embargo, si nos mudamos la resistencia por lo que vino despu\u00e9s el LED, como se muestra abajo, el LED seguir\u00e1 la luz. Probablemente desee volver a colocar el resistor 220\u03a9. No importa qu\u00e9 lado del LED que ponemos la resistencia, siempre y cuando est\u00e1 all\u00ed en alg\u00fan lugar Lecci\u00f3n 4 RGB LED Resumen Los LED RGB son una forma divertida y f\u00e1cil para agregar color a sus proyectos. Puesto que es como regular 3 LED en uno, el uso y conenxi\u00f3n no es muy diferente. Existen 2 versiones: \u00c1nodo com\u00fan C\u00e1todo com\u00fan. \u00c1nodo com\u00fan utiliza 5V en el pin com\u00fan, mientras que el c\u00e1todo com\u00fan se conecta a tierra. Como con cualquier LED, tenemos que conectar algunas resistencias en l\u00ednea (3 total) as\u00ed que podemos limitar la corriente absorbida. En nuestro programa , se comienzan con el LED en el estado de color rojo, entonces se descolora a verde, luego se descolora azul y finalmente hacia el color rojo. Haciendo esto que nos pasar\u00e1 por la mayor parte del color que se puede lograr. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x M M de x (4) cables (cables de puente de macho a macho) (1) x RGB LED (3) resistencias de 220 ohmios x RGB A primera vista, LEDs RGB (rojo, verde y azul) s\u00f3lo parecen regular LED. Sin embargo, dentro del paquete del LED generalmente, hay realmente tres LEDs, uno rojo, uno verde y s\u00ed, uno azul. Controlando el brillo de cada uno de los LEDs individuales, usted puede mezclar pr\u00e1cticamente cualquier color que desee. Mezclamos colores del mismo modo que ser\u00eda mezclar pintura en una paleta - ajustando el brillo de cada uno de los tres LEDs. La manera dura para hacer esto ser\u00eda usar valor diferentes resistencias (o resistencias variables) como hicimos con el en la lecci\u00f3n 2, pero eso es un mucho trabajo! Afortunadamente para nosotros, Kit UNO R3 tiene una funci\u00f3n analogWrite que puede utilizar con pines marcados con un ~ a la salida de una cantidad variable de energ\u00eda los LEDs apropiados. El LED RGB tiene cuatro conductores. Hay un cable a la conexi\u00f3n positiva de cada uno de los LEDs individuales dentro del paquete y un patilla \u00fanica que est\u00e1 conectado a los tres lados negativos de los LEDs. En las fotograf\u00edas le mostramos 4 electrodo LED. Cada perno separado de color verde o azul o de rojo se llama \u00e1nodo. Siempre conectar\u00e1 \u00ab+\u00bb a \u00e9l. C\u00e1todo va a \"-\" (tierra). Si se conecta otra forma diferente el LED no se encender\u00e1. La com\u00fan conexi\u00f3n negativa del paquete LED es el segundo pasador de la parte plana. Tambi\u00e9n es el m\u00e1s largo de las cuatro patas y se conectar\u00e1n a la tierra. Cada LED dentro del paquete requiere su propio resistor de 220\u03a9 para prevenir demasiada corriente que fluye a trav\u00e9s de \u00e9l. Los tres conductores del positivo de los LEDs (uno rojo, uno verde y uno azul) est\u00e1n conectados a los pines de salida UNO con estas resistencias. Color La raz\u00f3n por la que usted puede mezclar cualquier color usted tiene gusto variando las cantidades de rojo, verde y azul de la luz es que el ojo tiene tres tipos de receptor de luz (rojo, verde y azul). Su ojo y el cerebro procesan las cantidades de rojo, verde y azul y conviertan en un color del espectro. En cierto modo, mediante el uso de los tres LEDs, estamos jugando un truco en el ojo. Esta misma idea se utiliza en televisores, donde la pantalla LCD tiene puntos de color rojo, verde y azul junto a unos a otros que componen cada p\u00edxel. Si establece el brillo de todos los tres LEDs al ser el mismo, el color general de la luz ser\u00e1 blanco. Si apagamos el LED azul, para que s\u00f3lo los LEDs rojo y verdes son el mismo brillo, la luz aparecer\u00e1 amarillo. Podemos controlar el brillo de cada una de las partes de rojas, verdes y azules del LED por separado, lo que es posible mezclar cualquier color que nos gusta. El color Negro no es tanto un color como una ausencia de luz. Por lo tanto, lo m\u00e1s cercano que podemos llegar a negro con el LED es apagar los tres colores. Teor\u00eda (PWM) Modulaci\u00f3n de ancho de pulso (PWM) es una t\u00e9cnica para el control de potencia. Tambi\u00e9n utilizamos aqu\u00ed para controlar el brillo de cada uno de los LEDs. El siguiente diagrama muestra que la se\u00f1al de uno de lo PWM pines en la UNO. Aproximadamente cada 1/500 de segundo, la salida PWM producir\u00e1 un pulso. La duraci\u00f3n de este pulso es controlada por la funci\u00f3n 'analogWrite'. As\u00ed: 'analogWrite(0)' no producir\u00e1 ning\u00fan pulso 'analogWrite(255)' producir\u00e1 un pulso que dura todo el camino hasta el pulso siguiente vencimiento, para que la salida es en realidad todo el tiempo. Si especificamos un valor en el analogWrite que est\u00e1 en alg\u00fan lugar entre 0 y 255, se producir un pulso. Si el pulso de salida es alto para el 5% del tiempo, entonces lo que nosotros estamos manejando s\u00f3lo recibir\u00e1 el 5% de potencia. Si la salida es 5V para el 90% del tiempo, la carga recibir\u00e1 el 90% de la potencia entregada a \u00e9l. Los LED se encender\u00e1n y apagar\u00e1n en esos periodos, pero nosotros percibiremos que el brillo del LED cambia. Conexi\u00f3n Esquema Diagrama de cableado 53 / 165 C\u00f3digo // Define pines #define BLUE 3 #define GREEN 5 #define RED 6 void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE, OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } // define variables int redValue; int greenValue; int blueValue; // main loop void loop() { #define delayTime 10 // fading time between colors redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; // this is unnecessary as we've either turned on RED in SETUP // or in the previous loop ... regardless, this turns RED off // analogWrite(RED, 0); // delay(1000); for(int i = 0; i < 255; i += 1) // fades out red bring green full when i=255 { redValue -= 1; greenValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(RED, 255 - redValue); // analogWrite(GREEN, 255 - greenValue); analogWrite(RED, redValue); analogWrite(GREEN, greenValue); delay(delayTime); } redValue = 0; greenValue = 255; blueValue = 0; for(int i = 0; i < 255; i += 1) // fades out green bring blue full when i=255 { greenValue -= 1; blueValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(GREEN, 255 - greenValue); // analogWrite(BLUE, 255 - blueValue); analogWrite(GREEN, greenValue); analogWrite(BLUE, blueValue); delay(delayTime); } redValue = 0; greenValue = 0; blueValue = 255; for(int i = 0; i < 255; i += 1) // fades out blue bring red full when i=255 { // The following code has been rearranged to match the other two similar sections blueValue -= 1; redValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(BLUE, 255 - blueValue); // analogWrite(RED, 255 - redValue);1 analogWrite(BLUE, blueValue); analogWrite(RED, redValue); delay(delayTime); } } After wiring, please open the Sketch in folder path: Tutorial > English > code > Lesson 4 RGB LED > RGB_LED, and click UPLOAD to upload the program. See Lesson 2 for details about program uploading if there are any errors. The programa starts by specifying which pins are going to be used for each of the colors: // Define Pins #define BLUE 3 #define GREEN 5 #define RED 6 The next step is to write the 'setup' function. As we have learnt in earlier lessons, the setup function runs just once after the Arduino has reset. In this case, all it has to do is define the three pins we are using as beingoutputs. void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE,OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } Antes de echar un vistazo a la funci\u00f3n loop , veamos la \u00faltima funci\u00f3n en el proyecto. Las variables de definici\u00f3n: redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; Esta funci\u00f3n tiene tres argumentos, uno para el brillo de los LEDs rojos, verdes y azules. En cada caso de que el n\u00famero ser\u00e1 en el rango 0 a 255, donde 0 significa apagado y 255 significa brillo m\u00e1ximo. La funci\u00f3n entonces llama 'analogWrite' para ajustar el brillo de cada LED. Si nos fijamos en la funci\u00f3n loop se puede ver que ajuste la cantidad de luz roja, verde y azul que queremos mostrar y luego una pausa por un segundo antes de pasar al siguiente color. #define delayTime 10 // fading time between colors Delay(delayTime); Trate de a\u00f1adir algunos colores de los tuyos el dibujo y ver el efecto en tu LED. Lecci\u00f3n 11 Sensor de humedad y temperatura DHT11 Resumen En este tutorial vamos a aprender c\u00f3mo usar un Sensor de humedad y temperatura DHT11. Es lo suficientemente exacta para la mayor\u00eda de los proyectos que necesitan hacer un seguimiento de las lecturas de humedad y temperatura. Otra vez vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores que har\u00e1n que nuestro c\u00f3digo corto y f\u00e1cil de escribir. Componente necesario: (1) x Elegoo Uno R3 (1) x m\u00f3dulo de humedad y temperatura DHT11 (3) x F M cables (cables de hembra a macho DuPont) Sensor de temperatura y humedad Sensor digital de temperatura y humedad DHT11 es un Sensor compuesto que contiene la salida de la se\u00f1al digital calibrado de la temperatura y la humedad. La tecnolog\u00eda de colecci\u00f3n de m\u00f3dulos digitales dedicado y la temperatura y humedad sensor de tecnolog\u00eda se aplican para garantizar que el producto tiene alta confiabilidad y excelente estabilidad a largo plazo. El sensor incluye un sentido resistente de componentes mojados y un dispositivos de medici\u00f3n de temperatura NTC y conecta con un microcontrolador de 8 bits de alto rendimiento. Aplicaciones: HVAC, deshumidificador, ensayos e inspecci\u00f3n de equipos, bienes de consumo, control autom\u00e1tico, autom\u00f3vil, registradores de datos, estaciones meteorol\u00f3gicas, electrodom\u00e9sticos, regulador de humedad, humedad m\u00e9dicos y otros medici\u00f3n y control. Par\u00e1metros del producto Humedad relativa: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b11% H.R. Precisi\u00f3n: 25 \u00b0 C \u00b15% hr Intercambiabilidad: intercambiables Tiempo de respuesta: 1 / e (63%) de 25\u00ba c 6s 1m / s de aire 6s Hist\u00e9resis: < \u00b1 0.3% RH Estabilidad a largo plazo: < \u00b1 0.5% hr / a\u00f1o en Temperatura: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b10. 2 \u00b0 C Rango: 25 \u00b0 C \u00b12\u00b0 c Tiempo de respuesta: 1 / e (63%) 10S Caracter\u00edsticas el\u00e9ctricas Fuente de alimentaci\u00f3n: DC 3.5 ~ 5.5V Corriente: medici\u00f3n 0.3mA espera 60\u03bcA Periodo de muestreo: m\u00e1s de 2 segundos PIN Descripci\u00f3n: VDD alimentaci\u00f3n 3,5~5.5V DC serie de datos, un solo bus NC, pin vac\u00edo GND tierra, la energ\u00eda negative Conexi\u00f3n Esquema Diagrama de cableado Como se puede ver que s\u00f3lo necesitamos 3 conexiones al sensor, ya que uno de lo pin no se utiliza. Las conexiones son: voltaje, tierra y se\u00f1al de que puede conectarse a cualquier Pin en nuestro UNO. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Sensor de humedad y temperatura DHT11 12 de lecci\u00f3n y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < SimpleDHT > Biblioteca o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funciona. Para obtener m\u00e1s informaci\u00f3n sobre el tutorial de la carga del archivo de la librer\u00eda , consulte la lecci\u00f3n 1 A continuaci\u00f3n hay que subir el programa, abra el monitor, donde podemos ver los datos como abajo: (muestra la temperatura del medio ambiente, podemos ver es de 22 grados) Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Lecci\u00f3n 12 M\u00f3dulo Joystick anal\u00f3gico Resumen Los Joysticks anal\u00f3gicos son una gran manera de a\u00f1adir un poco de control en sus proyectos. En este tutorial aprenderemos a usar el m\u00f3dulo de joystick anal\u00f3gico Componente necesario: (1) x Elegoo Uno R3 (1) x m\u00f3dulo de Joystick (5) x F M cables (cables de hembra a macho DuPont) Palanca de mando El m\u00f3dulo tiene 5 pines: VCC, tierra, X, Y, clave. Tenga en cuenta que las etiquetas en el suyo pueden ser ligeramente diferentes, dependiendo de d\u00f3nde obtuvo el m\u00f3dulo. El palillo del pulgar es anal\u00f3gico y debe proporcionar lecturas m\u00e1s exactas que las palancas de mando \"direccionales\" simples utilizan algunas formas de botones, o interruptores mec\u00e1nicos. Adem\u00e1s, puede presionar el joystick hacia abajo (bastante dif\u00edcil en la m\u00eda) para activar un pulsador de \"pulsar para seleccionar\". Tenemos que usar pines Arduino anal\u00f3gicos para leer los datos de los pines X / Y, y un pin digital para leer el bot\u00f3n. El pin de la Llave est\u00e1 conectado a tierra, cuando el joystick est\u00e1 presionado hacia abajo, y est\u00e1 flotando de otra manera. Para obtener lecturas estables del pin Key / Select, debe conectarse a VCC a trav\u00e9s de una resistencia pull-up. Las resistencias incorporadas en los pines digitales de Arduino se pueden utilizar. Para obtener un tutorial sobre c\u00f3mo activar las resistencias pull-up para pines Arduino, configuradas como entradas Conexi\u00f3n Esquema Diagrama de cableado Necesitamos 5 las conexiones de la palanca de mando. Las conexiones son: clave, Y, X, voltaje y tierra. \u00abY y X\u00bb son anal\u00f3gicas y Digital es \"Clave\". Si usted no necesita el interruptor puede utilizar solamente 4 pines. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Lecci\u00f3n 13 m\u00f3dulo de Joystick anal\u00f3gico y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Palancas de mando an\u00e1logas son b\u00e1sicamente los potenci\u00f3metros para que regresan valores anal\u00f3gicos. Cuando el joystick se encuentra en la posici\u00f3n de reposo o medio, debe devolver un valor de aproximadamente 512. El rango de valores va de 0 a 1024. Abrir al monitor y puede ver los datos como soplo: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Lecci\u00f3n 13 M\u00f3dulo de receptor IR Resumen Usando un control remoto es una gran manera de tener el control inal\u00e1mbrico de su proyecto. Los mandos a distancia infrarrojos son simples y f\u00e1ciles de usar. En este tutorial nos conectando el receptor IR para el UNO y luego use una librer\u00eda que fue dise\u00f1ada para este sensor en particular. En nuestro dibujo tenemos todos los c\u00f3digos de IR Hexadecimal que est\u00e1n disponibles en este control remoto, tambi\u00e9n detectar\u00e1 si el c\u00f3digo fue reconocido y tambi\u00e9n si estamos manteniendo pulsada una tecla Componentes necesarios (1) x Elegoo Uno R3 x IR modulo receptor x IR control remoto x F-M cables (cables de hembra a macho DuPont)\u00e7 Sensor receptor de infrarrojos Los detectores infrarrojos son peque\u00f1os microchips con una c\u00e9lula fotoel\u00e9ctrica que est\u00e1n configurados para recibir a la luz infrarroja. Casi siempre se utilizan para la detecci\u00f3n de control remoto - cada TV y reproductor de DVD tiene uno de estos en la parte delantera para escuchar la se\u00f1al de IR desde el clicker. Dentro del control remoto es un juego IR LED, que emite pulsos IR para comunicar al televisor para encender, apagar o cambiar de canal. Luz infrarroja no es visible para el ojo humano, lo que significa que tarda un poquito m\u00e1s de trabajo para probar una configuraci\u00f3n. Hay algunas diferencias entre ellos y decir unas fotoc\u00e9lulas CdS: Detectores infrarrojos son especialmente filtrados para IR ligero, no son buenos para detectar luz visible. Por otro lado, las fotoc\u00e9lulas son buenas para detectar luz visible de amarillo/verde y no son buenas para luz IR. Detectores infrarrojos tienen un demodulador en ese aspecto para IR modulada a 38 KHz. S\u00f3lo brilla un LED IR no detectada, tiene que ser PWM intermitente en 38 KHz. fotoc\u00e9lulas no tienen ning\u00fan tipo de demodulador y puede detectar cualquier frecuencia (incluyendo CC) dentro de la velocidad de respuesta de la fotoc\u00e9lula (que es aproximadamente 1KHz) Detectores infrarrojos son salida digital - tampoco detectan se\u00f1al 38KHz IR y salida bajo (0V) o no detecta ninguno y salida alto (5V). Fotoc\u00e9lulas act\u00faan como resistencias, los cambios de resistencia dependiendo de cu\u00e1nto se exponen a la luz Lo que se puede medir Como se puede ver en estos gr\u00e1ficos de hoja de datos, la detecci\u00f3n de frecuencia de peak es a 38 KHz y el pico color del LED es de 940 nm. Se puede usar desde unos 35 KHz kHz 41 pero la sensibilidad se desprender\u00e1 para que no detecte as\u00eddesde lejos. Asimismo, puede utilizar LEDs de 850 a 1100 nm pero no funcionan tan bien como 900 a 1000nm as\u00edque aseg\u00farese de obtener coincidencia de LEDs! Compruebe la ficha t\u00e9cnica para su IR LED verificar la longitud de onda. \u00a1Trate de conseguir un 940nm - Recuerde que 940nm no es luz visible! Conexi\u00f3n Esquema Diagrama de cableado Hay 3 conexiones para el receptor de infrarrojos. Las conexiones son: se\u00f1al, voltaje y tierra. El \"-\" es la tierra\"S\" es se\u00f1al y medio es voltaje de 5V. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Lecci\u00f3n 14 m\u00f3dulo de receptor de IR y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funciona. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. A continuaci\u00f3n nos trasladaremos el < RobotIRremote > fuera de la carpeta de librer\u00eda , para ello ya que entra en conflicto con la librer\u00eda va a utilizar. S\u00f3lo puede arrastrarlo dentro de la carpeta de la librer\u00eda una vez que haya terminado de programar el microcontrolador. Una vez que ha instalado la librer\u00eda , s\u00f3lo seguir adelante y reiniciar su Software IDE. Abrir al monitor y puede ver los datos: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1 Lecci\u00f3n 14 Pantalla LCD Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo conectar y usar una pantalla LCD alfanum\u00e9rico. La pantalla tiene una retroiluminaci\u00f3n de LED y puede mostrar dos filas con hasta 16 caracteres en cada fila. Puede ver los rect\u00e1ngulos para cada car\u00e1cter en la pantalla y los p\u00edxeles que componen cada car\u00e1cter. La pantalla es blanca en azul y est\u00e1 dise\u00f1ada para mostrar texto. En esta lecci\u00f3n, se ejecutar\u00e1 el programa de ejemplo de Arduino para la librer\u00eda de la LCD, pero en la siguiente lecci\u00f3n, nos pondremos nuestra pantalla para mostrar la temperatura mediante sensores. Componentes necesarios Elegoo Uno R3 LCD1602 m\u00f3dulo Potenci\u00f3metro (10k) 830 tie-puntos Breadboard M-M cables (cables de puente de macho a macho) LCD1602 Introduccion a las patillas del LCD1602: VSS: Un pin que se conecta a tierra VDD: Un pin que se conecta a un + 5V fuente de alimentaci\u00f3n VO: Un pasador que ajusta el contraste de LCD1602 RS: Un registro seleccione pin que controla donde en memoria de la pantalla LCD datos de escritura. Usted puede seleccionar el registro de datos, que es lo que pasa en la pantalla, o un registro de instrucci\u00f3n, que es donde busca controlador de LCD para obtener instrucciones sobre qu\u00e9 hacer. R/W: Pin A lectura y escritura que selecciona el modo de lectura o escritura a modo de E:, Permitiendo a un perno con energ\u00eda de bajo nivel, m\u00f3dulo causas la LDC para ejecutar instrucciones. D0-D7: Pernos que leer y escribir datos A y K: Que el control de la retroiluminaci\u00f3n LED de los pernos Conexi\u00f3n Esquema Diagrama de cableado La pantalla LCD necesita seis pines de Arduino, todo listo para ser salidas digitales. Tambi\u00e9n necesita 5V y GND conexiones. Hay un n\u00famero de conexiones a realizar. Alineaci\u00f3n de la pantalla con la parte superior de la placa ayuda a identificar sus pines sin demasiada cuenta, especialmente si la placa tiene sus filas numeradas con la fila 1 como la fila superior de la Junta. No lo olvides, el cable largo amarillo que conecta el regulador de la olla a la clavija 3 de la pantalla. La 'olla' se utiliza para controlar el contraste de la pantalla. Usted puede encontrar que su pantalla se suministra sin cabecera pins conectados a \u00e9l. Si es as\u00ed, siga las instrucciones en la secci\u00f3n siguiente. Codigo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 22 LCD pantalla y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. Subir el c\u00f3digo a la placa Arduino y usted deber\u00eda ver el mensaje 'Hola, mundo' aparece, seguido de un n\u00famero que cuenta de cero. Lo primero que nota en el dibujo es la l\u00ednea: #include < LiquidCrystal.h > Esto dice Arduino que queremos utilizar la librer\u00eda de cristal l\u00edquido. A continuaci\u00f3n tenemos la l\u00ednea que ten\u00edamos que modificar. Esto define qu\u00e9 pines de Arduino son para conectarse a que pines de la pantalla. LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Despu\u00e9s de subir este c\u00f3digo, aseg\u00farese de que se enciende la retroiluminaci\u00f3n y ajustar el potenci\u00f3metro de toda la manera alrededor hasta que aparezca el mensaje de texto En la funci\u00f3n de setup , tenemos dos comandos: LCD.Begin (16, 2); LCD.Print (\"Hola, mundo!\"); La primera cuenta la librer\u00eda de cristal l\u00edquido cu\u00e1ntas columnas y filas tiene la pantalla. La segunda l\u00ednea muestra el mensaje que vemos en la primera l\u00ednea de la pantalla. En la funci\u00f3n de 'loop', aso tienen dos comandos: lcd.setCursor (0, 1); LCD.Print(Millis()/1000); El primero establece la posici\u00f3n del cursor (donde aparecer\u00e1 el siguiente texto) columna 0 y fila 1. Los n\u00fameros de columna y fila comienzan en 0 en lugar de 1. La segunda l\u00ednea muestra el n\u00famero de milisegundos desde que se restableci\u00f3 el Arduino. Lecci\u00f3n 15: Term\u00f3metro Resumen En esta lecci\u00f3n, utilizar\u00e1 una pantalla LCD para mostrar la temperatura. Componentes necesarios Elegoo Uno R3 LCD1602 M\u00f3dulo x resistencia de ohmio 10 k x termistor x potenci\u00f3metro> * x 830 tie puntos Breadboard x M M cables (cables de puente de macho a macho) Termistor Un termistor es un resistor t\u00e9rmico - un resistor que cambia su resistencia con la temperatura. T\u00e9cnicamente, los resistores son termistores - sus cambios de resistencia con temperatura - pero el cambio es generalmente muy peque\u00f1o y dif\u00edcil de medir. Los termistores est\u00e1n hechos para que la resistencia cambia dr\u00e1sticamente con la temperatura para que pueda ser 100 ohmios o m\u00e1s del cambio por grado! Hay dos clases de termistores: NTC (coeficiente de temperatura negativo) PTC (coeficiente positivo de temperatura). En general, usted ver\u00e1 sensores NTC para medir la temperatura. PTC es de uso frecuente como fusibles Reseteables - un aumento de temperatura aumenta la resistencia que significa que conforme pasa m\u00e1s corriente a trav\u00e9s de ellos, se calientan y 'estrangular detr\u00e1s' la corriente, muy \u00fatil para la protecci\u00f3n de circuitos. Conexi\u00f3n Esquema Diagrama de cableado El dise\u00f1o de la placa se basa en el dise\u00f1o de la lecci\u00f3n 22 , as\u00edque simplificar\u00e1 las cosas si hay esto en la protoboard. Hay unos cables de puente cerca de la olla que se han movido ligeramente en este dise\u00f1o. Los 10 k\u03a9 resistencia y termistores son todas nuevas incorporaciones a la Junta C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 23 term\u00f3metro y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El cableado de esto est\u00e1 basado en la lecci\u00f3n 22. Cargar para arriba en su Arduino y encontrar\u00e1 que calienta el sensor de temperatura al poner el dedo en \u00e9l aumentar\u00e1 la temperatura. Es \u00fatil poner una l\u00ednea de comentario sobre el comando 'lcd'. BSED4D5D6D7 LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Esto facilita las cosas si decides cambiar que utilizas los pernos. En la funci\u00f3n loop ahora hay dos cosas interesantes sucediendo. En primer lugar tenemos que convertir la anal\u00f3gica del sensor de temperatura una temperatura real, y en segundo lugar tenemos que encontrar la manera a los mismos. En primer lugar, echemos un vistazo a c\u00e1lculo de la temperatura. int tempReading = analogRead(tempPin); doble tempK = log (10000.0 * ((1024.0/tempReading - 1))); tempK = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempK * tempK)) * tempK); float tempC = tempK - 273.15; floatfloat tempF = (tempC * 9.0) / 5.0 + 32.0; Cambio lecturas se muestra en una pantalla LCD puede ser complicado. El principal problema es que la lectura puede no ser siempre el mismo n\u00famero de d\u00edgitos. Por lo tanto, si la temperatura cambia de 101,50 a 99.00 entonces el d\u00edgito adicional de la lectura antigua es en peligro de quedar en la pantalla. Para evitar esto, escriba la l\u00ednea de la pantalla LCD cada vez el bucle. lcd.setCursor (0, 0); LCD.Print (\"Temp C\"); lcd.setCursor (6, 0); LCD.Print(tempF); El comentario bastante extra\u00f1o sirve para recordarles de las 16 columnas de la pantalla. Luego puede imprimir una cadena de esa longitud con espacios donde ir\u00e1 la lectura real. Para rellenar los espacios en blanco, establecer la posici\u00f3n del cursor por donde la lectura debe aparecer y luego imprimirlo. Lecci\u00f3n 16 Ocho LED con 74HC595 Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar ocho LEDs rojo grandes con un UNO sin necesidad de renunciar a 8 patas de salida Aunque usted podr\u00eda conectar ocho LEDs con una resistencia a un pin UNO r\u00e1pidamente empezar\u00eda a quedarse sin patas en su UNO. Si no tienes un mont\u00f3n de cosas conectadas a la ONU. Est\u00e1 bien hacerlo - pero a menudo tiempos queremos botones, sensores, servos, etc. y antes de saberlo que no tienes pernos de izquierda. As\u00ed, en lugar de hacer eso, vas a usar un chip llamado el 74HC595 Serial a paralelo convertidor. Este chip tiene ocho salidas (perfectos) y tres entradas que utilizas para alimentar datos en \u00e9l un poco a la vez. Este chip hace un poco m\u00e1s lento para los LEDs (s\u00f3lo se puede cambiar el LED unos 500.000 veces por segundo en lugar de 8.000.000 por segundo) pero todav\u00eda es muy r\u00e1pido, forma m\u00e1s r\u00e1pido que los seres humanos puede detectar, as\u00edque vale! Componente necesario: (1) x Elegoo Uno R3 830 puntos tie breadboard leds resistencias de 220 ohmios IC x 74hc595 M M cables (cables de puente de macho a macho) 74HC595 Registro de desplazamiento El registro de desplazamiento es un tipo de chip que tiene lo que puede considerarse como posiciones de memoria ocho, cada uno de ellos puede ser un 1 o un 0. Para definir cada uno de estos valores encendido o apagado, alimentamos en los datos mediante los pines del chip 'Datos' y 'El reloj'. El pin de reloj debe recibir ocho pulsos. En cada pulso, si el pin de datos es alto, entonces un 1 obtiene empujado en el registro de desplazamiento; de lo contrario, un 0. Cuando se han recibido los ocho impulsos, permitiendo el pin 'Pestillo' copia esos ocho valores en el registro de cierre. Esto es necesario; de lo contrario, parpadean mal los LEDs como se carga los datos en el registro de desplazamiento. El chip tambi\u00e9n tiene un pin de salida activado (OE), que se utiliza para activar o desactivar las salidas a la vez. Podr\u00eda conectar esto a un pin PWM capaz UNO y usar 'analogWrite' para controlar el brillo de los LEDs. Este pin es baja activa, por lo que nos ate a la tierra GND. Conexi\u00f3n Esquema Diagrama de cableado Ya que tenemos ocho LEDs y ocho resistencias para conectar, hay realmente muy pocas conexiones a realizar. Es probablemente m\u00e1s f\u00e1cil poner el chip 74HC595 en primer lugar, como casi todo lo dem\u00e1s se conecta a \u00e9l. Ponerlo de modo que la muesca en forma de U poco hacia la parte superior de la placa. Pin 1 del chip es a la izquierda de esta muesca. Digital 12 del UNO va al pin #14 del registro de desplazamiento Digital 11 del UNO va al pin #12 del registro de desplazamiento 9 digital a partir de la UNO va al pin #11 del registro de desplazamiento Todos sino una de las salidas de la IC est\u00e1 en el lado izquierdo del chip. Por lo tanto, para facilitar la conexi\u00f3n, es donde est\u00e1n los LEDs, tambi\u00e9n. Despu\u00e9s de la viruta, poner las resistencias en su lugar. Usted necesita tener cuidado de que ninguno de los cables de las resistencias tocan. Usted debe comprobar esto otra vez antes de conectar la energ\u00eda a la ONU. Si le resulta dif\u00edcil organizar las resistencias sin sus conductores tocando, entonces ayuda a acortar los cables que est\u00e1n mintiendo m\u00e1s cercanos a la superficie de la placa. A continuaci\u00f3n, coloque los LEDs en la protoboard. Cuanto m\u00e1s positivo lleva LED debe ser hacia el chip, de cualquier lado de la placa est\u00e1n en. Conecte los conductores del puente como se muestra arriba. No olvide que va desde el pin 8 del IC a la columna GND de la placa. Carga el bosquejo aparece un poco m\u00e1s adelante y probar. Cada LED debe encenderse alternadamente hasta que todos los LEDs est\u00e1n encendidos y luego se apagara y el ciclo se repite. C\u00f3digo Despu\u00e9s de cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 24 8 LED con 74HC595 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Lo primero que hacemos es definir los tres pernos que vamos a utilizar. Estos son los UNO salidas digitales que se conectar\u00e1n a los pines de datos, reloj y cierre de los 74HC595. int latchPin = 11; clockPin int = 9; int dataPin = 12; A continuaci\u00f3n, se define una variable llamada 'leds'. Esto se utiliza para sostener el patr\u00f3n de que LED actualmente es activado o desactivados. Datos de tipo 'byte' representan n\u00fameros de ocho bits. Cada bit puede estar encendido o apagado, esto es perfecto para realizar un seguimiento de cu\u00e1les de nuestros ocho LEDs son on u off. leds de byte = 0; La funci\u00f3n de setup s\u00f3lo establece los tres pernos que estamos utilizando para ser de salidas digitales. void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); } La funci\u00f3n loop inicialmente apaga todos los LEDs, al darle a los variable 'leds' el valor 0. A continuaci\u00f3n, llama 'updateShiftRegister' que enviar\u00e1 el patr\u00f3n de 'leds' para el registro de desplazamiento para que el LED se apague. Se tratar\u00e1 con 'updateShiftRegister' funcionamiento m\u00e1s adelante. La funci\u00f3n loop hace una pausa de medio segundo y entonces empieza a contar de 0 a 7 usando el bucle 'for' y la variable 'i'. Cada vez utiliza la funci\u00f3n de Arduino 'verdadera' para establecer el bit que controla ese LED en la variable 'leds'. A continuaci\u00f3n tambi\u00e9n llama 'updateShiftRegister' para que los leds actualizar para reflejar lo que est\u00e1 en la variable 'leds'. Hay entonces medio segundo de retraso antes de 'i' se incrementa y se ilumina el LED pr\u00f3ximo. void loop() { LED = 0; updateShiftRegister(); Delay(500); for (int i = 0; i < 8; i ++) { bitSet(leds, i); updateShiftRegister(); Delay(500); } } La funci\u00f3n 'updateShiftRegister', en primer lugar se establece la latchPin baja, entonces llama al UNO funci\u00f3n 'shiftOut' antes de poner el 'latchPin' alta otra vez. Esto toma cuatro par\u00e1metros, los dos primeros son los pines para datos y el reloj respectivamente. El tercer par\u00e1metro especifica que final de los datos que desea iniciar en el. Vamos a empezar con la derecha m\u00e1s poco, que se conoce como el 'Bit menos significativo' (LSB). El \u00faltimo par\u00e1metro es los datos reales para ser cambiado de puesto en el registro de desplazamiento, que en este caso es 'leds'. void updateShiftRegister() { digitalWrite (latchPin, bajo); shiftOut (dataPin, clockPin, LSBFIRST, leds); digitalWrite (latchPin, HIGH); } Si usted dese\u00f3 dar vuelta a uno de los LED apagado en lugar, llamar\u00eda una funci\u00f3n similar de Arduino (bitClear) con la variable de 'leds'. Esto ajustar\u00e1 ese poco de 'leds' para ser 0 y entonces s\u00f3lo necesitar\u00e1 seguir con una llamada a 'updateShiftRegister' para actualizar la actual LED. Lecci\u00f3n 17 El monitor Serial Resumen En esta lecci\u00f3n, se basar\u00e1 en la lecci\u00f3n 16, a\u00f1adiendo la facilidad de controlar los LEDs desde el ordenador con el Monitor serie del Arduino. El monitor serial es el 'cable' entre el ordenador y tu UNO. Le permite enviar y recibir mensajes de texto, \u00fatiles para la depuraci\u00f3n y tambi\u00e9n control de la ONU de un teclado! Por ejemplo, usted ser\u00e1 capaz de enviar comandos desde el ordenador para encender LEDs. En esta lecci\u00f3n, utilizar\u00e1 exactamente las mismas piezas y una disposici\u00f3n similar del protoboard como lecci\u00f3n 16. Por lo tanto, si a\u00fan no lo ha hecho, siga lecci\u00f3n 16 ahora. Medidas adoptadas Despu\u00e9s de que han subido este cableado sobre el UNO, haga clic en el bot\u00f3n derecho en la barra de herramientas en el IDE de Arduino. Es en un c\u00edrculo el bot\u00f3n a continuaci\u00f3n. Se abrir\u00e1 la siguiente ventana. Haga clic en el bot\u00f3n Serial Monitor para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Esta ventana se llama al Monitor Serial y es parte del software del IDE de Arduino. Su trabajo es la que permite a ambos enviar mensajes desde tu ordenador a una placa UNO (por USB) y tambi\u00e9n recibir mensajes de la placa UNO. El mensaje \"Enter LED n\u00famero 0 a 7or 'x' para borrar\" ha sido enviado por el Arduino. Nos est\u00e1 diciendo qu\u00e9 comandos podemos enviamos a Arduino: o enviar la 'x' (para apagar todos los LEDs) o el n\u00famero de LED que desea activar (donde 0 es el LED de la parte inferior, 1 es la siguiente, hasta 7 para el LED superior). Trate de escribir los siguientes comandos en la parte superior del Monitor Serial que es el nivel con el bot\u00f3n 'Enviar'. Presione 'Enviar', despu\u00e9s de escribir cada uno de estos caracteres: x 0 3 5 Escribir x voluntad no tienen ning\u00fan efecto si los LEDs ya est\u00e1n todos fuera, pero al entrar en cada n\u00famero, el correspondiente LED deber\u00e1 encenderse y usted recibir\u00e1 un mensaje de confirmaci\u00f3n de la placa UNO. El Monitor Serial aparecer\u00e1 como se muestra a continuaci\u00f3n. Escriba x otra vez y pulse 'Enviar' para apagar todos los LEDs C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor abra el Serial Monitor del programa en la carpeta de c\u00f3digo-lecci\u00f3n 25 y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Como era de esperar, el cableado se basa en el cableado utilizado en la lecci\u00f3n 24. Por lo tanto, s\u00f3lo cubrimos los nuevos bits aqu\u00ed. Le resultar\u00e1 \u00fatil para referirse al dibujo completo en el IDE de Arduino. En la funci\u00f3n de setup , hay tres nuevas l\u00edneas al final: void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); updateShiftRegister(); Serial.Begin(9600); ```mientras (!. Serie); Espere hasta que es listo - Leonardo Serial.println (\"Enter LED n\u00famero de 0 a 7 o 'x' para borrar\"); } En primer lugar, tenemos el comando 'Serial.begin(9600)'. Esto inicia la comunicaci\u00f3n serial, para que la UNO puede enviar comandos a trav\u00e9s de la conexi\u00f3n USB. El valor 9600 es la configuraci\u00f3n velocidad de la conexi\u00f3n. Esto es la rapidez con la que los datos debe ser enviado. Esto puede cambiar a un valor m\u00e1s alto, pero tambi\u00e9n tendr\u00e1s que cambiar al monitor de Arduino Serial el mismo valor. Hablaremos de esto m\u00e1s adelante; por ahora, dejar en 9600. El comienzo de la l\u00ednea con 'mientras' asegura que hay algo en el otro extremo de la conexi\u00f3n USB para Arduino hablar antes de que comience el env\u00edo de mensajes. De lo contrario, el mensaje puede ser enviado, pero no aparece. Esta l\u00ednea es realmente s\u00f3lo es necesaria si est\u00e1 utilizando a un Arduino Leonardo porque el Arduino UNO se restablece autom\u00e1ticamente la placa Arduino al abrir el Monitor de la serie, mientras que esto no sucede con el Leonardo. La \u00faltima de las nuevas l\u00edneas en **setup** env\u00eda el mensaje que vemos en la parte superior del Monitor serie. La funci\u00f3n de 'bucle' es donde sucede toda la acci\u00f3n ```arduino void loop() { if (Serial.available()) { char ch = Serial.read(); if (ch >= '0' && ch <= '7') { int led = ch - '0'; bitSet(leds, led); updateShiftRegister(); Serial.print(\"Turned on LED \"); Serial.println(led); } if (ch == 'x') { leds = 0; 129 / 165 updateShiftRegister(); Serial.println(\"Cleared\"); } } } Todo lo que ocurre dentro del bucle est\u00e1 contenido dentro de una instrucci\u00f3n 'if'. As\u00ed que a menos que la llamada a la funci\u00f3n incorporada de Arduino 'Serial.available()' es 'true' entonces nada suceder\u00e1. Serial.Available() devuelve 'true' si los datos ha sido enviado a la ONU y all\u00edest\u00e1 listos para ser procesado. Los mensajes entrantes se llevan a cabo en lo que se llama un b\u00fafer y Serial.available() devuelve true si ese buffer es no vac\u00eda. Si un mensaje ha sido recibido, es a la siguiente l\u00ednea de c\u00f3digo: char ch = Serial.read(); Esto lee el siguiente car\u00e1cter del b\u00fafer y elimina del buffer. Tambi\u00e9n asigna a la variable 'ch'. La variable 'ch' es de tipo 'char' que significa 'car\u00e1cter' y como su nombre indica, tiene un car\u00e1cter \u00fanico. Si usted ha seguido las instrucciones en el prompt en la parte superior del Monitor Serial, luego este personaje ser\u00e1n o bien un n\u00famero d\u00edgito entre 0 y 7 o la letra 'x'. La instrucci\u00f3n 'if' en la l\u00ednea siguiente comprueba para ver si es un solo d\u00edgito por ver si 'ch' es mayor o igual que el car\u00e1cter ' 0 'y menor o igual que el personaje 7'. Parece un poco extra\u00f1o comparar caracteres de esta manera, pero es perfectamente aceptable. Cada car\u00e1cter est\u00e1 representado por un n\u00famero \u00fanico, conocido su valor ASCII. Esto significa que cuando se comparan caracteres usando < = y > = es realmente los valores ASCII que se estaban comparando. Si pasa la prueba, llegamos a la siguiente l\u00ednea: int led = ch-'0'; \u00a1Ahora estamos actuando aritm\u00e9tica en los personajes! Estamos restando el d\u00edgito '0' de cualquier d\u00edgitos fue introducido. Por lo tanto, si escribi\u00f3 '0' y luego '0' a '0' ser\u00e1 igual a 0. Si escribi\u00f3 '7' y '7'-'0' ser\u00e1 igual al n\u00famero 7 ya que es realmente los valores ASCII que se utilizan en la sustracci\u00f3n. Desde sabemos que el n\u00famero del LED que queremos encender, nos basta establecer este bit en la variable 'leds' y actualizar el registro de desplazamiento. bitSet (leds, led); 121 / 165 updateShiftRegister(); Las dos l\u00edneas escriben de nuevo un mensaje de confirmaci\u00f3n en el Monitor serie. Serial.Print (\"encendido LED\"); Serial.println(LED); La primera l\u00ednea utiliza Serial.print en lugar de Serial.println. La diferencia entre los dos es que Serial.print no se inicia una nueva l\u00ednea despu\u00e9s de imprimir lo que est\u00e1 en su par\u00e1metro. Usamos esto en la primera l\u00ednea, porque estamos impresi\u00f3n el mensaje en dos partes. En primer lugar el general bits: 'Enciende LED' y luego el n\u00famero del LED. El n\u00famero del LED se realiza en un 'int' variable en lugar de ser una cadena de texto. Serial.Print puede tomar ya sea una cadena de texto dentro de comillas dobles, o un 'int' o para el caso casi cualquier tipo de variable. Despu\u00e9s de la instrucci\u00f3n 'if' que maneja el caso, cuando un d\u00edgito se ha manejado, hay una segunda instrucci\u00f3n 'if' que comprueba si la 'ch' es la letra 'x'. Si (ch == 'x') { LE D=0; updateShiftRegister(); Serial.println(\"cleared\"); } Si es as\u00ed, entonces se borran todos los LEDs y env\u00eda un mensaje de confirmaci\u00f3n. Lecci\u00f3n 18 Fotoc\u00e9lula Resumen En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo medir la intensidad de la luz utilizando una entrada anal\u00f3gica. Se construir\u00e1 en la lecci\u00f3n 26 y utilice el nivel de luz para controlar el n\u00famero de LEDs que se encender\u00e1n. La fotoc\u00e9lula es en la parte inferior de la placa, donde estaba el bote por encima. Componentes necesarios: [x] Elegoo Uno R3 [x]830 tie puntos breadboard [x]leds [x]resistencias de 220 ohmios [x]resistencia de 1 k ohm [x] (1) x IC74hc595 [x] (1) x fotoresistor (fotoc\u00e9lula) [x] (16) x M M cables (cables de puente de macho a macho) Fotoc\u00e9lula La fotoc\u00e9lula utilizada es de un tipo llamado un resistor dependiente de luz, a veces llamado un LDR. Como su nombre indica, estos componentes act\u00faan como una resistencia, excepto que la resistencia cambia en respuesta a cuanta luz est\u00e1 cayendo sobre ellos. Esta tiene una resistencia de cerca de 50 k\u03a9 en cerca de oscuridad y \u03a9 500 en luz brillante. Para convertir este valor variable de la resistencia en algo que podemos medir en la entrada anal\u00f3gica de la Junta de un R3 de UNO, debe ser convertida en un voltaje. La forma m\u00e1s sencilla de hacerlo es combinar con una resistencia fija. La resistencia y fotoc\u00e9lula junto se comportan como una sola. Cuando la luz es muy brillante, entonces la resistencia de la fotoc\u00e9lula es muy baja en comparaci\u00f3n con la resistencia de valor fijo, y as\u00edes como si el bote se dio vuelta a m\u00e1ximo. Cuando la fotoc\u00e9lula est\u00e1 en una luz apagada, la resistencia es mayor que la resistencia fija de 1 k\u03a9 y es como si el recipiente estuviera girando hacia GND. Cargue el croquis dado en la siguiente secci\u00f3n y trate de cubrir la fotoc\u00e9lula con el dedo y, a continuaci\u00f3n, sost\u00e9ngalo cerca de una fuente de luz. Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 26 fotoc\u00e9lula y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Lo primero que note es que hemos cambiado el nombre del pin anal\u00f3gico a ser 'apagado' en lugar de 'potPin' ya que no tenemos una olla conectada. El s\u00f3lo cambio substancial al dibujo es la l\u00ednea que calcula cu\u00e1ntos de los LEDs de luz: int numLEDSLit = reading / 57;// all LEDs lit at 1k Este tiempo, dividimos la lectura cruda 57 en lugar de 114. En otras palabras, nos dividirlo por la mitad, tanto como lo hicimos con el bote para dividirlo en nueve zonas, de ning\u00fan LED encendido a ocho todas iluminada. Este factor adicional es para tener en cuenta la resistencia fija de k\u03a9 1. Esto significa que cuando la fotoc\u00e9lula tiene una resistencia de 1 k\u03a9 (igual a la resistencia fija), la lectura cruda ser\u00e1 1023 / 2 = 511. Esto se proporcionan a todos los LED se enciende y luego un poco (numLEDSLit) ser\u00e1 8. Lecci\u00f3n 19 74HC595 y display Segmentado Resumen Despu\u00e9s de aprender la lecci\u00f3n 24, 25 y 26, vamos a utilizar el registro de desplazamiento 74HC595 para controlar la visualizaci\u00f3n del segmento. La pantalla mostrar\u00e1 el n\u00famero de 9-0. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-puntos breadboard x 74HC595 IC x 1 Pantalla de 7 d\u00edgitos segmentada x 220 ohm resistencias x M-M cables (cables de puente de macho a macho) Display de siete segmentos Abajo est\u00e1 el diagrama de pines de siete segmentos 0-9 diez d\u00edgitos se corresponden con cada segmento es los siguientes (en la tabla siguiente se aplica com\u00fan c\u00e1todo dispositivo de exhibici\u00f3n de segmento siete, si se utiliza un \u00e1nodo com\u00fan, de la mesa debe ser reemplazado cada 1 0 0 si todos sustituidos por 1): Display digital dp a b c d e f g 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 0 2 0 1 1 0 1 1 0 1 3 0 1 1 1 1 0 0 1 4 0 0 1 1 0 0 1 1 5 0 1 0 1 1 0 1 1 6 0 1 0 1 1 1 1 1 7 0 1 1 1 0 0 0 0 8 0 1 1 1 1 1 1 1 9 0 1 1 1 1 0 1 1 129 / 165 Conexi\u00f3n Esquema 130 / 165 Diagrama de cableado 131 / 165 La siguiente tabla muestra la tabla de correspondencias pantalla de siete segmentos 74HC595 pin 74HC595 pin Seven shows remarkable control pin (stroke) Q0 7 (A) Q1 6 (B) Q2 4 (C) Q3 2 (D) Q4 1 (E) Q5 9 (F) Q6 10 (G) Q7 5 (DP) Paso uno: conexi\u00f3n 74HC595 En primer lugar, el cableado est\u00e1 conectado a la alimentaci\u00f3n y tierra: VCC (pin 16) y Se\u00f1or (pin 10) conectado a 5V GND (pin 8) y OE (pin 13) a tierra Pin conexi\u00f3n DS, ST_CP y SH_CP: DS (pin 14) conectado al pin de tablero UNO R3 2 (la cifra por debajo de la l\u00ednea amarilla) ST_CP (pin 12, perno de pestillo) conectado al pin de tablero UNO R3 3 (l\u00ednea azul de la figura abajo) SH_CP (pin 11, pin de reloj) conectado al pin de tablero UNO R3 4 (figura debajo de la l\u00ednea blanca) Paso 2: conectar el display de siete segmentos El display de siete segmentos 3, 8 pin a UNO R3 Junta GND (este ejemplo utiliza el c\u00e1todo com\u00fan, si se utiliza el \u00e1nodo com\u00fan, por favor conecte el 3, 8 pines para tablero UNO R3 + 5V) Seg\u00fan la tabla anterior, conecte el 74HC595 Q0 ~ Q7 a siete segmentos pantalla pin correspondiente (A ~ G y DP) y luego cada pie en una resistencia de 220 ohmios en serie. C\u00f3digo Despu\u00e9s de efectuar el cableado, abrir el programa en el c\u00f3digo carpeta - lecci\u00f3n 27 74HC595 y exhibici\u00f3n de segmento y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Lecci\u00f3n 20 Display de 7 segmentos de cuatro d\u00edgitos Resumen En esta lecci\u00f3n, aprender\u00e1 a utilizar una pantalla de 7 segmentos de 4 d\u00edgitos. Cuando se utiliza 1 d\u00edgitos de 7 segmentos, tenga en cuenta que si es \u00e1nodo com\u00fan, el pin com\u00fan del \u00e1nodo se conecta a la fuente de energ\u00eda; Si es de c\u00e1todo com\u00fan, el pin com\u00fan del c\u00e1todo se conecta a la tierra. Cuando se utilizan 4 d\u00edgitos de 7 segmentos, el \u00e1nodo com\u00fan o pin de c\u00e1todo com\u00fan se utiliza para controlar qu\u00e9 d\u00edgito aparece. A pesar de que hay s\u00f3lo un d\u00edgito de trabajo, el principio de persistencia de la visi\u00f3n le permite ver todos los n\u00fameros de muestra ya que cada uno es tan r\u00e1pida que apenas notar\u00e1 los intervalos de la velocidad de exploraci\u00f3n. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-punto breadboard x 74HC595 IC x display de 4 d\u00edgitos de 7 segmentos x 220 ohm resistencias x M-M cables (cables de puente de macho a macho) Muestra de 4 d\u00edgitos de 7 segmentos 135 / 165 ### Conexi\u00f3n Esquema 136 / 165 Diagrama de cableado 137 / 165 C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta - lecci\u00f3n 28 cuatro siete segmentos pantalla Digital y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. 138 / 165 Lecci\u00f3n 21 Motor de corriente continua Resumen En esta lecci\u00f3n, aprender\u00e1 a controlar un peque\u00f1o motor DC (corriente continua) usando un R3 de UNO y un transistor. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-punto breadboard x L293D IC (1) x Aspa de ventilador y motor de3-6v x M- M cables (cables de puente de macho a macho) x M\u00f3dulo de alimentaci\u00f3n x 9V1A adaptador corriente Fuente de alimentaci\u00f3n de la placa El peque\u00f1o motor de corriente continua es probable que use m\u00e1s energ\u00eda que una Junta de UNO R3 salida digital puede manejar directamente. Si tratamos de conectar el motor directamente a un pin de tablero UNO R3, hay una buena probabilidad de que se podr\u00eda da\u00f1ar la Junta UNO R3. Para ello usar un m\u00f3dulo de alimentaci\u00f3n que proporciona alimentaci\u00f3n Especificaciones del producto: Bloqueo Encendido interruptor LED Power indicador Entrada voltaje: 6.5-9v (CC) trav\u00e9s 5.5mm x 2,1 mm enchufe Salida voltaje: 3.3V / 5v M\u00e1ximo salida actual: 700 mA Independiente control riel salida. 0v, 3.3v, 5v a protoboard Salida pins principal para usos externos Tama\u00f1o: 2.1 en x 1.4 en USB dispositivo conector a bordo a power externos dispositivo Configuraci\u00f3n de voltaje de salida: La izquierda y derecha de la tensi\u00f3n de salida puede configurarse independientemente. Para seleccionar la tensi\u00f3n de salida, mover el puente a los pines correspondientes. Nota: indicador de energ\u00eda LED y los carriles de la energ\u00eda de protoboard no se enciende si ambos puentes est\u00e1n en la posici\u00f3n \"OFF\". Nota IMPORTANTE: Aseg\u00farese de alinear el m\u00f3dulo correctamente en la placa de pruebas. El pin negativo (-) en el m\u00f3dulo se alinea con la l\u00ednea azul (-) en la placa de pan y el pin positivo (+) se alinea con la l\u00ednea roja (+). De no hacerlo podr\u00eda resultar en que usted accidentalmente invirtiendo la energ\u00eda a su Proyecto L293D Este es un chip muy \u00fatil. En realidad puede controlar dos motores independientemente. Estamos usando s\u00f3lo la mitad del chip en esta lecci\u00f3n, la mayor\u00eda de los pines en el lado derecho del chip son para el control de un segundo motor. Especificaciones del producto: Cuenta con Unitrode L293 L293D productos y ahora de Texas Instruments Amplio rango de tensi\u00f3n de alimentaci\u00f3n: 4,5 V a 36 V Alimentaci\u00f3n de entrada l\u00f3gica separada Protecci\u00f3n interna ESD Apagado t\u00e9rmico Alta inmunidad de ruido entradas Funcionalmente Similar al L293 SGS y SGS L293D Salida de corriente 1 A por canal (600 mA para el L293D) M\u00e1xima salida de corriente 2 A por canal (1.2 A para L293D) Salida diodos pinza inductiva T ransient supresi\u00f3n (L293D) Descripci\u00f3n y pedidos de informaci\u00f3n El L293 y L293D son cu\u00e1druples controladores de media H de alta corriente. El L293 est\u00e1 dise\u00f1ado para proporcionar corrientes de transmisi\u00f3n bidireccional de hasta 1 A con tensiones de 4,5 V a 36 V. El L293D est\u00e1 dise\u00f1ado para proporcionar bidireccional corrientes de impulsi\u00f3n de hasta 600 mA en tensiones de 4,5 V a 36 V. Ambos dispositivos est\u00e1n dise\u00f1ados para manejar cargas inductivas como rel\u00e9s, solenoides, dc y motores paso a paso bipolares, as\u00edcomo otras cargas de alta corriente de alta tensi\u00f3n en aplicaciones de suministro de positivo. Todas las entradas son TTL compatible. Cada salida es un circuito de coche completa totem-pole, con un fregadero de transistor Darlington y una fuente de pseudo-Darlington. Conductores est\u00e1n habilitados en pares, con conductores de 1 y 2 de 1, 2EN y drivers 3 y 4 de 3, 4EN. Cuando una entrada de enable es alta, est\u00e1n habilitados los controladores asociados, y sus salidas son activas y en fase con sus aportaciones. Cuando la entrada enable es baja, se deshabilitan los controladores y sus salidas son y en el estado de alta impedancia. Con las entradas de datos adecuada, cada par de conductores forma una unidad reversible completo-H (o puente) adecuada para aplicaciones de solenoide o motor. Diagrama de bloques VCC1 1 1 16 1 2 15 1 M 0 0 1 3 14 4 13 M 5 12 6 11 2 3 1 1 7 10 0 0 9 8 1 M 0 VCC2 Me hart\u00e9 de diagramas de pinout indescifrables dentro de las hojas de datos, por lo que han dise\u00f1ado mi propio que creo que da m\u00e1s informaci\u00f3n pertinente. Hay 3 cables conectados al Arduino, 2 cables conectados al motor y 1 alambre conectado a una bater\u00eda. Para utilizar este pin: Ocupa el lado izquierdo con el primer motor, el lado derecho trata con un segundo motor. S\u00ed, usted puede funcionar con solamente un motor conectado. 143 / 165 Conexiones de Arduino M1 PWM - con\u00e9ctelo a un pin PWM de Arduino. Est\u00e1 marcados en la ONU, el pin 5 es un ejemplo. Cualquier n\u00famero entero entre 0 y 255, donde 0 es apagado, 128 es la mitad de velocidad y 255 es la velocidad m\u00e1xima de salida. Direcci\u00f3n de M1 0/1 y M1 1/0 - conectar estos pines de Arduino digitales dos a dos. Un pin de salida tan alto y el otro pin como baja y el motor girar\u00e1 en un sentido. Revertir las salidas a baja y alta, y el motor girar\u00e1 en sentido contrario. Conexi\u00f3n Esquema Diagrama de cableado El c\u00f3digo siguiente no utiliza una fuente de alimentaci\u00f3n separada (es decir, una bater\u00eda), sino que utiliza en su lugar la alimentaci\u00f3n de 5v del Arduino. Tenga en cuenta que esto ser\u00eda arriesgado sin que el L293D lo controlara. Nunca deber\u00eda conectar un motor directamente al Arduino, porque al desconectar un motor obtendr\u00e1 una retroalimentaci\u00f3n el\u00e9ctrica. Con un motor peque\u00f1o, esto da\u00f1ar\u00e1 su Arduino, y con un motor grande, usted puede mirar un efecto interesante de la llama y de las chispas. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 29 motores y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. Ligeramente, el motor girar\u00e1 en sentido horario y antihorario por 5 veces. Luego, seguir\u00e1 dram\u00e1ticamente gire hacia la derecha. Tras una breve pausa, lo dram\u00e1ticamente girar\u00e1 hacia la izquierda. A continuaci\u00f3n, la tarjeta controladora enviar\u00e1 la se\u00f1al PWM para el motor, el motor lentamente reducir su m\u00e1xima RPM al m\u00ednimo y aumentar al m\u00e1ximo otra vez. Por \u00faltimo, se trata de una parada para 10s hasta que comience el siguiente ciclo. Lecci\u00f3n 22 Rel\u00e9 Resumen En esta lecci\u00f3n, aprender\u00e1 a utilizar un rel\u00e9 Componentes necesarios (1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x Ventilador de aspa y 3-6v dc motor x L293D IC x 5v Rel\u00e9 x M\u00f3dulo de alimentaci\u00f3n x 9V1A Adaptador x M-M cables (cables de puente de macho a macho Rel\u00e9 Un rel\u00e9 es un interruptor operado el\u00e9ctricamente. Muchos rel\u00e9s utilizan un electroim\u00e1n para operar mec\u00e1nicamente un interruptor, pero otros principios de funcionamiento tambi\u00e9n se utilizan como rel\u00e9s de estado s\u00f3lidos. Rel\u00e9s se utilizan donde es necesario un circuito de control por una se\u00f1al de baja potencia (con aislamiento el\u00e9ctrico total entre el control y los circuitos controlados), o donde varios circuitos deben ser controlados por una se\u00f1al. Los primeros Relais fueron utilizados en circuitos de larga distancia tel\u00e9grafo como amplificadores. Repite la se\u00f1al proveniente un circuito y hab\u00eda retransmitido en otro circuito. Relais fueron utilizados extensivamente en centrales telef\u00f3nicas y computadoras tempranas para realizar operaciones l\u00f3gicas. Un tipo de rel\u00e9 que pueda manejar la alta potencia necesaria para controlar directamente un motor el\u00e9ctrico u otras cargas se llama un contactor. Rel\u00e9s de estado s\u00f3lidos controlan de circuitos de potencia sin partes m\u00f3viles, en cambio usando un dispositivo de semiconductor para realizar la conmutaci\u00f3n. Relevadores con caracter\u00edsticas de funcionamiento calibradas y a veces m\u00faltiples bobinas de funcionamiento se utilizan para proteger circuitos el\u00e9ctricos contra sobrecarga o fallos. En los sistemas modernos de energ\u00eda el\u00e9ctrica, estas funciones son realizadas por instrumentos digitales llamados \"rel\u00e9s de protecci\u00f3n\". A continuaci\u00f3n es el esquema de c\u00f3mo rel\u00e9 de coche con Arduino. Puede ser confundido acerca de c\u00f3mo insertar el rel\u00e9 en el tablero de pan. Como el cuadro siguiente muestra, tienes que doblar una de las patillas del rel\u00e9 un poco luego se puede insertar en el tablero de pan. Conexi\u00f3n Esquema Diagrama de cableado C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 30 rel\u00e9 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. El rel\u00e9 a recoger con un sonido de timbre. Entonces, el motor girar\u00e1. Despu\u00e9s de un per\u00edodo de tiempo, se liberar\u00e1 el rel\u00e9 y el motor se detiene. Lecci\u00f3n 23 Motor paso a paso Resumen En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para manejar un motor paso a paso. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO Componentes necesarios (1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x m\u00f3dulo de controlador de motor paso a paso de x ULN2003 x Motor paso a paso x 9V1A Adaptador x Power supply module x F-M cables (cables de hembra a macho DuPont) M-M wire (hilo puente de macho a macho) Motor paso a paso Un motor paso a paso es un dispositivo electromec\u00e1nico que convierte pulsos el\u00e9ctricos en movimientos mec\u00e1nicos discretos. El eje o eje de un motor paso a paso gira en incrementos discretos cuando impulsos de mando el\u00e9ctrico se aplican a \u00e9l en la secuencia correcta. La rotaci\u00f3n de los motores tiene varias relaciones directas a estos pulsos de entrada aplicadas. La secuencia de los pulsos aplicados se relaciona directamente con la direcci\u00f3n de rotaci\u00f3n de ejes motor. La velocidad de la rotaci\u00f3n de los ejes motor est\u00e1 directamente relacionada con la frecuencia de los pulsos de entrada y la duraci\u00f3n de la rotaci\u00f3n est\u00e1 directamente relacionada con el n\u00famero de pulsos de entrada aplicada. Una de las ventajas m\u00e1s importantes de un motor paso a paso es su capacidad para ser controlado con precisi\u00f3n en un sistema de lazo abierto. Control de lazo abierto significa que ninguna informaci\u00f3n de retroalimentaci\u00f3n de posici\u00f3n es necesario. Este tipo de control elimina la necesidad de costosos dispositivos de detecci\u00f3n y regeneraci\u00f3n como codificadores \u00f3pticos. Su posici\u00f3n es conocida simplemente por hacer el seguimiento de los pulsos de entrada de paso 28BYJ-48 los par\u00e1metros del motor paso a paso Modelo: 28BYJ-48 Tensi\u00f3n nominal: 5 VDC N\u00famero de fase: 4 Cociente de la variaci\u00f3n de velocidad: 1/64 \u00c1ngulo de paso: 5,625 \u00b0 64 Frecuencia: 100Hz Resistencia de la C.C.: 50\u03a9\u00b17 %(25 \u00b0 C) Inactivo en tracci\u00f3n frecuencia: > 600Hz Frecuencia ociosa de hacia fuera-tracci\u00f3n: > 1000Hz En tracci\u00f3n par > 34.3mN.m(120Hz) Posicionamiento autom\u00e1tico par > 34.3mN.m Par de fricci\u00f3n: 600-1200 gf.cm Tire un par: 300 gf.cm Resistencia de aislamiento > 10M\u03a9(500V) Aislantes de electricidad : 600VAC/1mA/1s Grado de aislamiento : A Subida de temperatura < 40K(120Hz) Ruido < 35dB (120Hz, No carga, 10cm Esquema de circuitos El motor de pasos bipolar tiene generalmente cuatro cables que salen de \u00e9l. A diferencia de los motores PAP unipolares, steppers bipolares no tienen ninguna conexi\u00f3n com\u00fan de centro. Tienen dos juegos independientes de bobinas en lugar de otro. Se pueden distinguir de steppers unipolares midiendo la resistencia entre los cables. Debe encontrar dos pares de cables de igual resistencia. Si tienes las puntas de su medidor conectado a dos cables que no est\u00e1n conectados (es decir, no conectada a la bobina del mismo), deber\u00eda ver resistencia infinita (o sin continuidad). ULN2003 Placa conductora Descripci\u00f3n del producto Tama\u00f1o: 42mmx30mm Chip de controlador de uso ULN2003, 500mA A. B. C. D LED que indica las cuatro fases las condiciones de trabajo motor paso a paso. Blanco jack es el conector est\u00e1ndar motor cuatro fase paso a paso. Pines de alimentaci\u00f3n son separados Mantuvimos las clavijas del resto de la viruta del ULN2003 para sus prototipos m\u00e1s. La forma m\u00e1s sencilla de conexi\u00f3n un paso a paso unipolar a Arduino es utilizar un desglose para chip de ULN2003A transistor array. El ULN2003A contiene siete controladores de transistor Darlington y es algo as\u00edcomo tener siete transistores TIP120 todo en un paquete. El ULN2003A puede pasar hasta 500 mA por canal y tiene una ca\u00edda de tensi\u00f3n interna de 1V cuando en. Tambi\u00e9n contiene diodos de abrazadera interna para disipar las puntas de tensi\u00f3n al manejar cargas inductivas. Para controlar el paso a paso, aplicamos tensi\u00f3n a cada una de las bobinas en una secuencia espec\u00edfica. La secuencia ir\u00eda as\u00ed: Estos son esquemas que muestran c\u00f3mo un paso a paso unipolar de interfaz motor a cuatro pines controlador utilizando un ULN2003A y mostrando c\u00f3mo la interfaz usando cuatro com Conexi\u00f3n Esquema Diagrama de cableado Estamos utilizando 4 pines para controlar el paso a paso. Pin 8-11 controlan el motor paso a paso. Conectamos la tierra de a UNO para el motor paso a paso. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 31 Motor de pasos y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. Lecci\u00f3n 24 Control Motor paso a paso con mando a distancia Resumen En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para controlar un motor paso a paso a distancia mediante un mando a distancia IR. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO. Ya que no queremos que el motor de accionamiento de la ONU, vamos a usar una barata fuente de alimentaci\u00f3n peque\u00f1a protoboard que enchufes a la derecha en nuestro protoboard y alimentaci\u00f3n con una fuente de alimentaci\u00f3n 9V 1Amp. El sensor de infrarrojos est\u00e1 conectado a la ONU directamente ya que no utiliza casi ninguna energ\u00eda. Componentes necesarios (1) x Elegoo Uno R3 x 830 tie-points breadboard x IR receiver module x IR remote x ULN2003 stepper motor driver module x Stepper motor x Power supply module x 9V1A Adaptador x F-M cables (cables de hembra a macho DuPont) x M-M cable (hilo puente de macho a macho) Conexi\u00f3n Esquema Diagrama de cableado Estamos utilizando 4 pines para controlar el paso a paso y el 1 pin del sensor IR. Pernos 8-11 controlan el motor paso a paso y pin 12 recibe la informaci\u00f3n de IR. Conectamos los 5V y la tierra de la ONU en el sensor. Como medida de precauci\u00f3n, usar un protoboard alimentaci\u00f3n potencia el motor paso a paso ya que puede utilizar m\u00e1s energ\u00eda y no queremos da\u00f1ar la fuente de alimentaci\u00f3n de la UNO. C\u00f3digo Despu\u00e9s de efectuar el cableado, por favor abrir programa en el c\u00f3digo de carpeta - lecci\u00f3n 32 control paso a paso Motor con control remoto y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca de < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El c\u00f3digo reconoce s\u00f3lo 2 valores desde el control remoto IR: VOL + y VOL-. - Presionando VOL + del control remoto el motor har\u00e1 un giro completo hacia la derecha. - VOL- para hacer una rotaci\u00f3n completa en sentido antihorario.","title":"Elegoo"},{"location":"arduino/elegoo/#practicas-arduino","text":"","title":"PR\u00c1CTICAS ARDUINO"},{"location":"arduino/elegoo/#leccion-0-instalacion-ide","text":"","title":"Lecci\u00f3n 0 Instalaci\u00f3n IDE"},{"location":"arduino/elegoo/#introduccion","text":"El Entorno de desarrollo integrado (IDE) de Arduino es el software de la plataforma Arduino. En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo configurar tu ordenador para usar Arduino y c\u00f3mo establecer sobre las lecciones que siguen. El programari Arduino que s\u2019utilitzar\u00e0 per programar el vostre Arduino est\u00e0 disponible per a Windows, Mac i Linux.El proc\u00e9s d\u2019instal\u00b7laci\u00f3 \u00e9s diferent per a les tres plataformes i, per desgr\u00e0cia, hi ha una certa quantitat de treballs manuals per instal\u00b7lar el programari. Paso 1: Ir a https://www.arduino.cc/en/Main/Software y a continuaci\u00f3n de la p\u00e1gina. La versi\u00f3n disponible en este sitio web es generalmente la \u00faltima versi\u00f3n y la versi\u00f3n actual puede ser m\u00e1s reciente que la versi\u00f3n en el cuadro. Paso 2 : Descargar el desarrollo software que es compatible con el sistema operativo del ordenador. Windows tomar como un ejemplo aqu\u00ed Haga click en Windows Installer. Haga click en DESCARGAR (JUST DOWNLOAD). Tambi\u00e9n est\u00e1 disponible en el material que nos proporciona la versi\u00f3n 1.8.0, y las versiones de nuestros materiales son las \u00faltimas versiones cuando se hizo este manual. Instalaci\u00f3n de Arduino (Windows) Instalar Arduino con el exe. Paquete de instalaci\u00f3n. Haga click en I Agree to see de esta ventana Click Next Puede pulsar examinar... elegir una ruta de instalaci\u00f3n o directamente en el directorio que desee. Haga Click en Install para comenzar la instalaci\u00f3n Por \u00faltimo, aparece la siguiente ventana, haga clic en Install para finalizar la instalaci\u00f3n. A continuaci\u00f3n, aparece el siguiente icono en el escritorio 13 / 165 Haga doble clic para entrar en el entorno de desarrollo deseado Directamente puede elegir el paquete de instalaci\u00f3n para la instalaci\u00f3n y omitir los contenidos abajo y saltar a la siguiente secci\u00f3n. Pero si quieres aprender algunos m\u00e9todos que no sea el paquete de instalaci\u00f3n, por favor lea la secci\u00f3n. Descomprime el archivo zip descargado, haga doble clic para abrir el programa y entrar en el entorno de desarrollo deseado Sin embargo, este m\u00e9todo de instalaci\u00f3n necesita instalaci\u00f3n de driver.. La carpeta de Arduino incluye el propio programa de Arduino y los controladores que permiten que el Arduino se conecte al ordenador mediante un cable USB. Antes de que inicie el software de Arduino, vas a instalar a los controladores USB. Conecte su cable USB en el Arduino y el en el USB en tu ordenador. La luz en el LED se enciende y usted puede obtener un mensaje de 'Found New Hardware' de Windows. Ignore este mensaje y cancele cualquier intento que Windows hace para tratar de instalar los controladores autom\u00e1ticamente. El major m\u00e9todo de instalaci\u00f3n de los controladores USB debe hacerse desde el administrador de dispositivos. Esto es accesible de diferentes maneras dependiendo de la versi\u00f3n de Windows. En Windows 7, primero tienes que abrir el Panel de Control, luego seleccione la opci\u00f3n de ver los iconos, y usted debe encontrar el administrador de dispositivos en la lista. En 'Otros dispositivos', deber\u00eda ver un icono de 'dispositivo desconocido' con un triangulo amarillo de advertencia junto a \u00e9l. Se trata de tu Arduino. Haga clic derecho sobre el dispositivo y seleccione la opci\u00f3n del men\u00fa superior (Update Driver Software...). Pedir\u00e1 a 'Buscar autom\u00e1ticamente software de controlador actualizado' o \"Examinar mi PC para el software de controlador\". Seleccione la opci\u00f3n Buscar en este ordenador en la ruta del CD , por ejemplo en D:\\arduino1.8.0\\drivers. Haga clic en 'Siguiente' y puede obtener una advertencia de seguridad, si es as\u00ed, permitir que el software a instalar. Una vez instalado el software, usted recibir\u00e1 un mensaje de confirmaci\u00f3n. Los usuarios de Windows pueden omitir las instrucciones de instalaci\u00f3n, para sistemas Mac y Linux y saltar a la lecci\u00f3n 1. Usuarios de Mac y Linux pueden seguir leyendo esta secci\u00f3n","title":"Introducci\u00f3n"},{"location":"arduino/elegoo/#instalacion-de-arduino-mac-os-x","text":"Descargar y descomprimir el archivo zip, haga doble clic en Arduino.app para entrar en el IDE de Arduino; el sistema le pedir\u00e1 que instale la librer\u00eda de tiempo de ejecuci\u00f3n de Java si no lo tienes en tu ordenador. Una vez finalizada la instalaci\u00f3n se puede ejecutar el IDE de Arduino.","title":"Instalaci\u00f3n de Arduino (Mac OS X)"},{"location":"arduino/elegoo/#instalacion-de-arduino-linux","text":"Usted tendr\u00e1 que utilizar el comando de instalaci\u00f3n. Si est\u00e1 utilizando el sistema de Ubuntu, se recomienda instalar el IDE de Arduino desde el centro de software de Ubuntu. Consejos: Si tienes problemas en la instalaci\u00f3n de los controladores, consulte el UNO R3, MEGA, NANO controlador preguntas m\u00e1s frecuentes.","title":"Instalaci\u00f3n de Arduino (Linux)"},{"location":"arduino/elegoo/#leccion-1-anadir-librerias-y-monitor-serie-abierta","text":"","title":"Lecci\u00f3n 1 A\u00f1adir librer\u00edas y Monitor serie abierta"},{"location":"arduino/elegoo/#instalacion-de-librerias-adicionales-de-arduino","text":"Una vez que est\u00e9 instalado con el software de Arduino y utilizando las funciones integradas, puede que desee ampliar la capacidad de tu Arduino con librer\u00eda s adicionales.","title":"Instalaci\u00f3n de librer\u00edas adicionales de Arduino"},{"location":"arduino/elegoo/#que-son-las-librerias","text":"Las librer\u00edas son una colecci\u00f3n de funciones que hacen que sea nos facilitan conectar con un sensor, pantalla, m\u00f3dulo, etc\u00e9tera. Por ejemplo, la librer\u00eda LiquidCrystal incorporada facilita hablar con pantallas LCD de caracteres. Hay cientos de librer\u00edas adicionales disponibles en Internet. Para utilizar las librer\u00edas adicionales, es necesario instalarlas primero.","title":"\u00bfQu\u00e9 son las librer\u00edas?"},{"location":"arduino/elegoo/#como-instalar-una-libreria","text":"Mediante el administrador de la librer\u00eda Para instalar una nueva librer\u00eda en el IDE de Arduino se puede utilizar el administrador de librer\u00eda * (disponible desde IDE versi\u00f3n 1.8.0). Abra el IDE y haga clic en el men\u00fa \"Dibujo\" y luego la *librer\u00eda incluyen > Gesti\u00f3n de librer\u00eda s. Encontraremos una lista de librer\u00edas que ya est\u00e1n instaladas o disponibles para su instalaci\u00f3n. En este ejemplo vamos a instalar la librer\u00eda de puente. Desplazarse por la lista para encontrarla, a continuaci\u00f3n, seleccione la versi\u00f3n de la librer\u00eda que desea instalar. A veces s\u00f3lo est\u00e1 disponible una versi\u00f3n de la librer\u00eda . Si no aparece el men\u00fa de selecci\u00f3n de versi\u00f3n, no te preocupes: es normal. Hay veces que tienes que esperar, tal como se muestra en la figura. Por favor actualice y esperar Finalmente haga click en instalar y esperar a que el IDE instale la nueva librer\u00eda . La descarga puede tardar un tiempo dependiendo tu velocidad de conexi\u00f3n. Una vez haya terminado, debe aparecer una etiqueta instalada junto a la librer\u00eda de puente. Una vez instalada puede cerrar el administrador de la librer\u00eda . Ahora ya puede encontrar la nueva librer\u00eda disponible en el men\u00fa de librer\u00eda . Si quieres a\u00f1adir tu propia librer\u00eda vaya a abrir un nuevo tema en Github.","title":"C\u00f3mo instalar una librer\u00eda"},{"location":"arduino/elegoo/#importar-una-libreria-de-zip","text":"Las librer\u00eda s se distribuyen a menudo como un archivo ZIP o una carpeta. El nombre de la carpeta es el nombre de la librer\u00eda . Dentro de la carpeta ser\u00e1 un archivo .cpp, un archivo .h y a menudo un fichero llamado keywords.txt , carpeta de ejemplos y otros archivos requeridos por la librer\u00eda . A partir de la versi\u00f3n 1.0.5, puede instalar librer\u00eda s de partido 3 \u00ba en el IDE. Descomprime la librer\u00eda descargada y dejarlo como est\u00e1. En el IDE de Arduino, despl\u00e1cese a Sketch > Biblioteca incluyen. En la parte superior de la lista desplegable, seleccione la opci\u00f3n \"agregar. Biblioteca ZIP''. Se le pedir\u00e1 para seleccionar la librer\u00eda que desea a\u00f1adir. Despl\u00e1cese hasta la ubicaci\u00f3n del archivo .zip y luego pincha en abrir. Volver al dibujo > men\u00fa de librer\u00eda de importaci\u00f3n. Ahora debe ver la librer\u00eda en la parte inferior del men\u00fa desplegable. Est\u00e1 listo para ser utilizado en su lista. El archivo zip se ha incorporado en la carpeta de librer\u00eda s en el directorio de plantillas de Arduino. Nota: la librer\u00eda estar\u00e1 disponible para utilizar en los dibujos, pero los ejemplos de la librer\u00eda no ser\u00e1n expuestos en el archivo > ejemplos hasta despu\u00e9s del IDE se ha reiniciado. Los dos son los enfoques m\u00e1s comunes. Asimismo, pueden manejarse sistemas MAC y Linux. El manual de instalaci\u00f3n que se introducir\u00e1 por debajo como alternativa puede usarse rara vez y los usuarios que no lo necesiten pueden saltarlo","title":"Importar una librer\u00eda de .zip"},{"location":"arduino/elegoo/#manual-de-instalacion","text":"Para instalar la librer\u00eda , primero salga de la aplicaci\u00f3n de Arduino. Luego descomprima el archivo ZIP que contiene la librer\u00eda . Por ejemplo, para instalar una librer\u00eda llamada \"ArduinoParty\", descomprime ArduinoParty.zip. Deber\u00eda contener una carpeta llamada ArduinoParty , con archivos como ArduinoParty.cpp y ArduinoParty.h dentro. (Si los archivos .cpp y .h no en una carpeta, debe crear uno. En este caso, usted ser\u00eda hacer una carpeta llamada \"ArduinoParty\" y copiar todos los archivos que estaban en el archivo ZIP, como ArduinoParty.cpp y ArduinoParty.h.) Arrastre la carpeta de ArduinoParty en esta carpeta (la carpeta de librer\u00edas ). Bajo Windows, lo probable es que se llamar\u00e1 \"My Documents\\Arduino\\libraries\". Para usuarios de Mac, lo probable es que se llamar\u00e1 \"Bibliotecas de Arduino de documentos\". En Linux, ser\u00e1 la carpeta \"libraries\" en su programabook. La carpeta de la librer\u00eda Arduino debe ahora este aspecto (en Windows): Mi Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty.cpp Mi Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty.h Mi Documents\\Arduino\\libraries\\ArduinoParty\\examples o como esta (en Mac y Linux): Documents/Arduino/libraries/ArduinoParty/ArduinoParty.cpp Documents/Arduino/libraries/ArduinoParty/ArduinoParty.h Documentos/Arduino/**librer\u00eda**s/ArduinoParty/ejemplos Puede haber m\u00e1s archivos que solo los .cpp y .h, s\u00f3lo aseg\u00farese de que est\u00e1n todos all\u00ed. (La librer\u00eda no funcionar\u00e1 si pones los archivos .cpp y .h en la carpeta de librer\u00eda s o si est\u00e1 anidados en una carpeta extra. Visualizador: Documents\\Arduino\\libraries\\ArduinoParty.cpp y Documents\\Arduino\\libraries\\ArduinoParty\\ArduinoParty\\ArduinoParty.cpp no funcionar\u00e1n.) Reiniciar la aplicaci\u00f3n Arduino. Aseg\u00farese de que la nueva librer\u00eda aparece en el directorio -> elemento de men\u00fa de librer\u00eda de importaci\u00f3n del software. \u00a1Eso es todo! \u00a1Ha instalado una librer\u00eda !","title":"Manual de instalaci\u00f3n"},{"location":"arduino/elegoo/#arduino-serie-monitor-windows-mac-linux","text":"Entorno de desarrollo integrado (IDE) de Arduino es el software de la plataforma Arduino. Y, porque utilizando un terminal es una gran parte del trabajo con Arduinos y otros microcontroladores, decidieron incluir un terminal de serie con el software. En el entorno de Arduino, esto se llama al Monitor serie. Realizar la conexi\u00f3n Monitor de serie viene con cualquier versi\u00f3n del IDE Arduino. Para abrirlo, simplemente haga clic en el icono Serial Monitor. Seleccionar cu\u00e1l de los puertos a abrir en el Monitor Serial es lo mismo que seleccionar un puerto para cargar c\u00f3digo de Arduino. Vaya a herramientas -> Serial Port y seleccione el puerto correcto. Consejos: Elegir el mismo puerto COM que tienes en el administrador de dispositivos. Una vez abierto, deber\u00eda ver algo como esto:","title":"Arduino serie Monitor (Windows, Mac, Linux)"},{"location":"arduino/elegoo/#configuracion","text":"El Monitor Serial ha limitado opciones, pero lo suficiente para manejar la mayor\u00eda de sus necesidades de comunicaci\u00f3n serial. El primer ajuste que se puede modificar es la velocidad en baudios. Haga clic en la velocidad en baudios tasa lista desplegable para seleccionar la velocidad correcta. (9600 baudios) Por \u00faltimo, puede establecer el terminal desplazamiento autom\u00e1tico o no marcando la casilla en la esquina inferior izquierda","title":"Configuraci\u00f3n"},{"location":"arduino/elegoo/#pros","text":"El Monitor Serial es una gran manera r\u00e1pida y f\u00e1cil para establecer una conexi\u00f3n en serie con el Arduino. Si ya trabaja en el IDE de Arduino, no hay realmente ninguna necesidad de abrir un terminal separado para Mostrar datos","title":"Pros"},{"location":"arduino/elegoo/#contras","text":"La falta de valores deja mucho que desear en el Monitor Serial, y, para comunicaciones serie avanzadas, no puede hacer el truco.","title":"Contras"},{"location":"arduino/elegoo/#leccion-2-blink","text":"","title":"Lecci\u00f3n 2 Blink"},{"location":"arduino/elegoo/#resumen","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo programar el tablero de regulador UNO R3 a parpadear el LED integrado de Arduino y c\u00f3mo descargar programas pasos b\u00e1sicos Componente necesario: [x] (1) x Arduino Uno R3","title":"Resumen"},{"location":"arduino/elegoo/#placa-arduino-uno-r3","text":"La placa de UNO R3 tiene unas filas de conectores a ambos lados que se utilizan para conectar varios dispositivos electr\u00f3nicos y plug-in shields que ampl\u00edan su capacidad. Tambi\u00e9n tiene un LED luminoso podemos controlar. Este LED est\u00e1 construido sobre el UNO R3 y se refiere a menudo como la 'L' LED. Este LED parpadea cuando se conecta a un enchufe del USB. Esto es porque las placas se env\u00edan generalmente con el programa de 'Blink' pre-instalado. En esta lecci\u00f3n, vamos a reprogramar el tablero UNO R3 con nuestro propio directorio de Blink y luego cambiar la tasa a la que parpadea. En la lecci\u00f3n 0, configurar el IDE de Arduino y asegur\u00f3 que podr\u00eda encontrar el puerto serie correcto para conectarse a la placa UNO R3. Ahora ha llegado el momento para poner el programa de prueba y la placa de UNO R3. El IDE de Arduino incluye una gran colecci\u00f3n de dibujos de ejemplo, se puede cargar y usar. Esto incluye un directorio de ejemplo para hacer el parpadeo del LED de 'L'. Cargar el programa de 'Blink' que encontrar\u00e1s en el sistema de men\u00fas del IDE bajo archivo > ejemplos > 01 conceptos b\u00e1sicos Cuando se abre la ventana de dibujo, agrandarla para que puedan ver el dibujo completo en la ventana. Los dibujos de ejemplo incluidos con el IDE de Arduino son de 's\u00f3lo lectura'. Es decir, puedes subir a una Junta de UNO R3, pero si cambia, no se puede guardar como el archivo mismo. Puesto que vamos a cambiar este programa, lo primero que tienes que hacer es guardar su propia copia. En el men\u00fa archivo en el IDE de Arduino, seleccione Guardar como. y guarde el dibujo con el nombre 'MyBlink' Ha guardado su copia de 'Blink' en su programabook. Esto significa que si alguna vez quiere encontrar otra vez, puede simplemente abrir usando el archivo > opci\u00f3n de men\u00fa de Sketchbook. Conecte la placa de Arduino al ordenador con el cable USB y compruebe que la Board Type y Puerto serie est\u00e1n ajustados correctamente. Nota: El tipo de tarjeta y puerto Serial aqu\u00ed no son necesariamente la misma que se muestra en la imagen. Si usas 2560, entonces usted tendr\u00e1 que elegir Mega 2560 como el tipo de Junta, otras opciones se pueden hacer de la misma manera. El puerto serie (COM) puede ser diferente, del tipo COM3 o COM4 en su ordenador. Un puerto COM correcto se supone que es COMX (arduino XXX), que es por los criterios de certificaci\u00f3n. El IDE de Arduino mostrar\u00e1 la configuraci\u00f3n actual en la parte inferior de la ventana. Haga clic en el bot\u00f3n subir . El segundo bot\u00f3n de la izquierda en la barra de herramientas. Si usted mira el \u00e1rea de estado del IDE, ver\u00e1 una barra de progreso y una serie de mensajes. Al principio, que dice 'Bosquejo compilar...'. Esto convierte el dibujo en un formato adecuado para subir a la Junta. A continuaci\u00f3n, el estado cambiar\u00e1 a subir . En este punto, los LEDs de la Arduino deben comenzar a parpadear como se transfiere el dibujo. Por \u00faltimo, el estado cambiar\u00e1 a 'Done'. El otro mensaje nos dice que el programa est\u00e1 utilizando 928 bytes de 32.256 bytes disponibles. Despu\u00e9s de la etapa de compilaci\u00f3n Sketch... podr\u00eda obtener el siguiente mensaje de error: Puede significar que su Junta no est\u00e1 conectado a todos, o no se ha instalado los drivers (si es necesario) o que se ha seleccionado el puerto serial incorrecto. Si encuentras esto, volver a la lecci\u00f3n 0 y verifique su instalaci\u00f3n. Una vez completada la carga, la Junta debe reiniciar y empiezan a parpadear. El c\u00f3digo abierto Tenga en cuenta que una gran parte de este esquema se compone de comentarios. Estas no son instrucciones de programa real; por el contrario, s\u00f3lo explican c\u00f3mo funciona el programa. Est\u00e1n all\u00ed para su beneficio.","title":"Placa Arduino UNO R3"},{"location":"arduino/elegoo/#comentarios","text":"Todo entre / y / en la parte superior del programa es un Comentario de bloque; explica lo que el programa es para. Los comentarios de una sola l\u00ednea comienzan con // y hasta el final de esa l\u00ednea se considera un comentario. La primera l\u00ednea de c\u00f3digo es: int led = 13; Creamos una variable con un nombre y guardamos el n\u00famero de pin al que el LED est\u00e1 conectado a. A continuaci\u00f3n, tenemos la funci\u00f3n de 'configuraci\u00f3n'. Otra vez, como dice el comentario, este se ejecuta cuando se presiona el bot\u00f3n de reset. Tambi\u00e9n se ejecuta cada vez que la Junta se reinicia por alguna raz\u00f3n, como poder primero se aplica a \u00e9l, o despu\u00e9s de un programa se ha subido void setup() { // Inicializa el pin digital como salida. pinMode(led, OUTPUT); } Cada programa Arduino debe tener una funci\u00f3n de setup (configuraci\u00f3n), y las instrucciones que contendr\u00e1 se insertan entre las llaves { y }. En este caso, es un comando, que, como dice el comentario dice la placa Arduino que vamos a utilizar el pin LED como salida. Tambi\u00e9n es obligatorio para un boceto tener una funci\u00f3n de loop . A diferencia de la funci\u00f3n de setup que se ejecuta s\u00f3lo una vez, despu\u00e9s de un reset, la funci\u00f3n loop , despu\u00e9s que haya terminado de ejecutar sus comandos, empezar inmediatamente otra vez. void loop() { digitalWrite(led, HIGH); // Encienda el LED (alto es el nivel de voltaje) delay(1000); // Espere un segundo digitalWrite(led, LOW); // Apagar el LED por lo que la tensi\u00f3n baja delay(1000); // Espere un segundo } Dentro de la funci\u00f3n loop , los comandos en primer lugar activar el pin del LED (alto), girar a 'retraso' de 1000 milisegundos (1 segundo), entonces el pin LED apagado y pausa para otro segundo.","title":"Comentarios"},{"location":"arduino/elegoo/#cambiar-la-frecuencia-de-parpadeo","text":"Ahora vas a que el LED parpadee m\u00e1s r\u00e1pido. Como puede haber adivinado, la clave de esto radica en cambiar el par\u00e1metro () para el comando 'retardo'. Este per\u00edodo de retardo en milisegundos, as\u00ed que si desea que el LED parpadee dos veces tan r\u00e1pidamente, cambiar el valor de 1000 a 500. Esto entonces pausa durante medio segundo cada retraso en lugar de un segundo entero. Sube otra vez el programa y ver\u00e1s que el LED comienza a parpadear m\u00e1s r\u00e1pidamente.","title":"Cambiar la frecuencia de parpadeo"},{"location":"arduino/elegoo/#leccion-3-led","text":"","title":"Lecci\u00f3n 3 LED"},{"location":"arduino/elegoo/#resumen_1","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo cambiar el brillo de un LED usando diferentes valores de resistencia. Componente necesario: - [x] (1) x Placa Arduino UNO - [x] 1 LED rojo de 5 mm - [x] (1) x resistencia de 220 ohmios - [x] (1) x resistencia de 1 k ohm - [x] (1) x resistencia de ohmio 10 k - [x] (2) x M M cables (cables de puente de macho a macho)","title":"Resumen"},{"location":"arduino/elegoo/#protoboard","text":"Un protoboard permite crear prototipos de circuitos de forma r\u00e1pida, sin necesidad de soldar las conexiones. A continuaci\u00f3n un ejemplo. Breadboards vienen en varios tama\u00f1os y configuraciones. La clase m\u00e1s simple es s\u00f3lo una rejilla de agujeros en un bloque de pl\u00e1stico. En el interior son tiras de metal que proporcionan una conexi\u00f3n el\u00e9ctrica entre los agujeros en las filas m\u00e1s cortas. Empujando las patillas de dos componentes diferentes de la misma fila se une a ellos juntos el\u00e9ctricamente. Un canal profundo, corriendo por el centro indica que hay una rotura en las conexiones, lo que significa, puede insertar un chip con las patillas a ambos lados del canal sin conectarlos juntos. Algunos breadboards tienen dos tiras de agujeros que corre a lo largo de los bordes laterales del tablero que son separados de la red principal. \u00c9stos tienen tiras corriendo por la longitud de la tabla dentro y proporcionan una manera para conectar una tensi\u00f3n com\u00fan. Son generalmente en pares para + 5 voltios y tierra. Estas tiras se denominan carriles y le permiten alimentar a muchos componentes o puntos en el tablero. Si bien son breadboards para prototipos, tienen algunas limitaciones. Porque las conexiones son temporales y de acople, no son tan fiables como conexiones soldadas. Si tienes problemas intermitentes con un circuito, puede ser debido a una mala conexi\u00f3n en una protoboard.","title":"Protoboard"},{"location":"arduino/elegoo/#led","text":"LED es un gran indicador. Utilizan muy poca electricidad durar\u00e1 para siempre. En esta lecci\u00f3n, usar\u00e1s tal vez el m\u00e1s com\u00fan de todos los LEDs: un LED de 5mm de color rojo. 5mm se refiere al di\u00e1metro del LED. Otros tama\u00f1os comunes son 3mm y 10mm. Directamente no se puede conectar un LED a una bater\u00eda o fuente de tensi\u00f3n porque: 1) El LED tiene un positivo y un negativo llevar y no se encender\u00e1 si se coloca mal y debe utilizarse 2) Un LED con una resistencia para limitar o 'ahogar' la cantidad de corriente que fluye a trav\u00e9s de \u00e9l; \u00a1de lo contrario, quemar\u00e1 Si no utilizas un resistencia con un LED, entonces se puede quemar casi de inmediato, como demasiada corriente fluir\u00e1 a trav\u00e9s, calienta y destruye al 'cruce' donde se produce la luz. Hay dos maneras de saber cual es el positivo del LED y que la negativa. En primer lugar, el positivo es m\u00e1s largo. En segundo lugar, donde la pata del negativo entra en el cuerpo del LED, hay un borde plano para el caso del LED. Si le sucede que tiene un LED que tiene un lado plano al lado del cable m\u00e1s largo, usted debe saber que la pata es el positivo.","title":"LED"},{"location":"arduino/elegoo/#resistencias","text":"Como su nombre lo indica, resistencias de resisten el flujo de electricidad. Cuanto mayor sea el valor de la resistencia, resiste m\u00e1s y la menos corriente fluir\u00e1 a trav\u00e9s de \u00e9l. Vamos a usar esto para controlar Cu\u00e1nta electricidad fluye a trav\u00e9s del LED y por lo tanto, como claramente brilla. Pero primero, m\u00e1s sobre resistencias... La unidad de resistencia se denomina Ohm, que se abrevia generalmente a \u03a9 la letra griega Omega. Porque un Ohm es un valor bajo de resistencia (no resiste mucho a todos), incluye los valores de resistencias en k\u03a9 (1.000 \u03a9) y M\u03a9 (1.000.000 \u03a9). \u00c9stos se llaman kiloohmios y megaohmios. En esta lecci\u00f3n, vamos a utilizar tres valores diferentes de resistencia: [x] 220 \u03a9 [x] 1 k\u03a9 [x] 10 k\u03a9 Estas resistencias todas se ven iguales, excepto que tienen rayas de colores diferentes en ellos. Estas rayas decirte el valor de la resistencia. El c\u00f3digo de color resistor tiene tres franjas de colores y luego una banda de oro en un extremo. A diferencia de los LEDs, resistencias no tienen un cable positivo y negativo. Se puede conectar de cualquier manera alrededor. Si encuentra este m\u00e9todo de enfoque demasiado complicada, puedes leer la bandera de anillo de color en nuestras resistencias directamente para determinar su valor de resistencia. O puede usar un mult\u00edmetro digital en lugar de otro.","title":"Resistencias"},{"location":"arduino/elegoo/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado","text":"La placa de desarrollo Arduino UNO es una conveniente fuente de 5 voltios, que vamos a utilizar para alimentar el LED y la resistencia. No necesita hacer nada con su UNO, salvo que lo conecte un cable USB. Con la resistencia de 220 \u03a9 en su lugar, el LED debe ser bastante brillante. Si cambia la resistencia 220 \u03a9 para la resistencia de 1 k\u03a9 , el LED aparecer\u00e1 regulador un poco. Por \u00faltimo, con el resistor de 10 k\u03a9 en su lugar, el LED estar\u00e1 casi visible. Por el momento, tienes 5V va a una pata de la resistencia, la otra pata de la resistencia va al lado positivo del LED y el otro lado del LED va a GND. Sin embargo, si nos mudamos la resistencia por lo que vino despu\u00e9s el LED, como se muestra abajo, el LED seguir\u00e1 la luz. Probablemente desee volver a colocar el resistor 220\u03a9. No importa qu\u00e9 lado del LED que ponemos la resistencia, siempre y cuando est\u00e1 all\u00ed en alg\u00fan lugar","title":"Diagrama de Cableado"},{"location":"arduino/elegoo/#leccion-4-rgb-led","text":"","title":"Lecci\u00f3n 4 RGB LED"},{"location":"arduino/elegoo/#resumen_2","text":"Los LED RGB son una forma divertida y f\u00e1cil para agregar color a sus proyectos. Puesto que es como regular 3 LED en uno, el uso y conenxi\u00f3n no es muy diferente. Existen 2 versiones: \u00c1nodo com\u00fan C\u00e1todo com\u00fan. \u00c1nodo com\u00fan utiliza 5V en el pin com\u00fan, mientras que el c\u00e1todo com\u00fan se conecta a tierra. Como con cualquier LED, tenemos que conectar algunas resistencias en l\u00ednea (3 total) as\u00ed que podemos limitar la corriente absorbida. En nuestro programa , se comienzan con el LED en el estado de color rojo, entonces se descolora a verde, luego se descolora azul y finalmente hacia el color rojo. Haciendo esto que nos pasar\u00e1 por la mayor parte del color que se puede lograr. Componente necesario: (1) x Placa Arduino UNO (1) protoboard de 830 puntos de amarre x M M de x (4) cables (cables de puente de macho a macho) (1) x RGB LED (3) resistencias de 220 ohmios x","title":"Resumen"},{"location":"arduino/elegoo/#rgb","text":"A primera vista, LEDs RGB (rojo, verde y azul) s\u00f3lo parecen regular LED. Sin embargo, dentro del paquete del LED generalmente, hay realmente tres LEDs, uno rojo, uno verde y s\u00ed, uno azul. Controlando el brillo de cada uno de los LEDs individuales, usted puede mezclar pr\u00e1cticamente cualquier color que desee. Mezclamos colores del mismo modo que ser\u00eda mezclar pintura en una paleta - ajustando el brillo de cada uno de los tres LEDs. La manera dura para hacer esto ser\u00eda usar valor diferentes resistencias (o resistencias variables) como hicimos con el en la lecci\u00f3n 2, pero eso es un mucho trabajo! Afortunadamente para nosotros, Kit UNO R3 tiene una funci\u00f3n analogWrite que puede utilizar con pines marcados con un ~ a la salida de una cantidad variable de energ\u00eda los LEDs apropiados. El LED RGB tiene cuatro conductores. Hay un cable a la conexi\u00f3n positiva de cada uno de los LEDs individuales dentro del paquete y un patilla \u00fanica que est\u00e1 conectado a los tres lados negativos de los LEDs. En las fotograf\u00edas le mostramos 4 electrodo LED. Cada perno separado de color verde o azul o de rojo se llama \u00e1nodo. Siempre conectar\u00e1 \u00ab+\u00bb a \u00e9l. C\u00e1todo va a \"-\" (tierra). Si se conecta otra forma diferente el LED no se encender\u00e1. La com\u00fan conexi\u00f3n negativa del paquete LED es el segundo pasador de la parte plana. Tambi\u00e9n es el m\u00e1s largo de las cuatro patas y se conectar\u00e1n a la tierra. Cada LED dentro del paquete requiere su propio resistor de 220\u03a9 para prevenir demasiada corriente que fluye a trav\u00e9s de \u00e9l. Los tres conductores del positivo de los LEDs (uno rojo, uno verde y uno azul) est\u00e1n conectados a los pines de salida UNO con estas resistencias.","title":"RGB"},{"location":"arduino/elegoo/#color","text":"La raz\u00f3n por la que usted puede mezclar cualquier color usted tiene gusto variando las cantidades de rojo, verde y azul de la luz es que el ojo tiene tres tipos de receptor de luz (rojo, verde y azul). Su ojo y el cerebro procesan las cantidades de rojo, verde y azul y conviertan en un color del espectro. En cierto modo, mediante el uso de los tres LEDs, estamos jugando un truco en el ojo. Esta misma idea se utiliza en televisores, donde la pantalla LCD tiene puntos de color rojo, verde y azul junto a unos a otros que componen cada p\u00edxel. Si establece el brillo de todos los tres LEDs al ser el mismo, el color general de la luz ser\u00e1 blanco. Si apagamos el LED azul, para que s\u00f3lo los LEDs rojo y verdes son el mismo brillo, la luz aparecer\u00e1 amarillo. Podemos controlar el brillo de cada una de las partes de rojas, verdes y azules del LED por separado, lo que es posible mezclar cualquier color que nos gusta. El color Negro no es tanto un color como una ausencia de luz. Por lo tanto, lo m\u00e1s cercano que podemos llegar a negro con el LED es apagar los tres colores.","title":"Color"},{"location":"arduino/elegoo/#teoria-pwm","text":"Modulaci\u00f3n de ancho de pulso (PWM) es una t\u00e9cnica para el control de potencia. Tambi\u00e9n utilizamos aqu\u00ed para controlar el brillo de cada uno de los LEDs. El siguiente diagrama muestra que la se\u00f1al de uno de lo PWM pines en la UNO. Aproximadamente cada 1/500 de segundo, la salida PWM producir\u00e1 un pulso. La duraci\u00f3n de este pulso es controlada por la funci\u00f3n 'analogWrite'. As\u00ed: 'analogWrite(0)' no producir\u00e1 ning\u00fan pulso 'analogWrite(255)' producir\u00e1 un pulso que dura todo el camino hasta el pulso siguiente vencimiento, para que la salida es en realidad todo el tiempo. Si especificamos un valor en el analogWrite que est\u00e1 en alg\u00fan lugar entre 0 y 255, se producir un pulso. Si el pulso de salida es alto para el 5% del tiempo, entonces lo que nosotros estamos manejando s\u00f3lo recibir\u00e1 el 5% de potencia. Si la salida es 5V para el 90% del tiempo, la carga recibir\u00e1 el 90% de la potencia entregada a \u00e9l. Los LED se encender\u00e1n y apagar\u00e1n en esos periodos, pero nosotros percibiremos que el brillo del LED cambia.","title":"Teor\u00eda (PWM)"},{"location":"arduino/elegoo/#conexion_1","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_1","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_1","text":"53 / 165","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo","text":"// Define pines #define BLUE 3 #define GREEN 5 #define RED 6 void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE, OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } // define variables int redValue; int greenValue; int blueValue; // main loop void loop() { #define delayTime 10 // fading time between colors redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; // this is unnecessary as we've either turned on RED in SETUP // or in the previous loop ... regardless, this turns RED off // analogWrite(RED, 0); // delay(1000); for(int i = 0; i < 255; i += 1) // fades out red bring green full when i=255 { redValue -= 1; greenValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(RED, 255 - redValue); // analogWrite(GREEN, 255 - greenValue); analogWrite(RED, redValue); analogWrite(GREEN, greenValue); delay(delayTime); } redValue = 0; greenValue = 255; blueValue = 0; for(int i = 0; i < 255; i += 1) // fades out green bring blue full when i=255 { greenValue -= 1; blueValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(GREEN, 255 - greenValue); // analogWrite(BLUE, 255 - blueValue); analogWrite(GREEN, greenValue); analogWrite(BLUE, blueValue); delay(delayTime); } redValue = 0; greenValue = 0; blueValue = 255; for(int i = 0; i < 255; i += 1) // fades out blue bring red full when i=255 { // The following code has been rearranged to match the other two similar sections blueValue -= 1; redValue += 1; // The following was reversed, counting in the wrong directions // analogWrite(BLUE, 255 - blueValue); // analogWrite(RED, 255 - redValue);1 analogWrite(BLUE, blueValue); analogWrite(RED, redValue); delay(delayTime); } } After wiring, please open the Sketch in folder path: Tutorial > English > code > Lesson 4 RGB LED > RGB_LED, and click UPLOAD to upload the program. See Lesson 2 for details about program uploading if there are any errors. The programa starts by specifying which pins are going to be used for each of the colors: // Define Pins #define BLUE 3 #define GREEN 5 #define RED 6 The next step is to write the 'setup' function. As we have learnt in earlier lessons, the setup function runs just once after the Arduino has reset. In this case, all it has to do is define the three pins we are using as beingoutputs. void setup() { pinMode(RED, OUTPUT); pinMode(GREEN, OUTPUT); pinMode(BLUE,OUTPUT); digitalWrite(RED, HIGH); digitalWrite(GREEN, LOW); digitalWrite(BLUE, LOW); } Antes de echar un vistazo a la funci\u00f3n loop , veamos la \u00faltima funci\u00f3n en el proyecto. Las variables de definici\u00f3n: redValue = 255; // choose a value between 1 and 255 to change the color. greenValue = 0; blueValue = 0; Esta funci\u00f3n tiene tres argumentos, uno para el brillo de los LEDs rojos, verdes y azules. En cada caso de que el n\u00famero ser\u00e1 en el rango 0 a 255, donde 0 significa apagado y 255 significa brillo m\u00e1ximo. La funci\u00f3n entonces llama 'analogWrite' para ajustar el brillo de cada LED. Si nos fijamos en la funci\u00f3n loop se puede ver que ajuste la cantidad de luz roja, verde y azul que queremos mostrar y luego una pausa por un segundo antes de pasar al siguiente color. #define delayTime 10 // fading time between colors Delay(delayTime); Trate de a\u00f1adir algunos colores de los tuyos el dibujo y ver el efecto en tu LED.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-11-sensor-de-humedad-y-temperatura-dht11","text":"","title":"Lecci\u00f3n 11 Sensor de humedad y temperatura DHT11"},{"location":"arduino/elegoo/#resumen_3","text":"En este tutorial vamos a aprender c\u00f3mo usar un Sensor de humedad y temperatura DHT11. Es lo suficientemente exacta para la mayor\u00eda de los proyectos que necesitan hacer un seguimiento de las lecturas de humedad y temperatura. Otra vez vamos a usar una librer\u00eda dise\u00f1ada espec\u00edficamente para estos sensores que har\u00e1n que nuestro c\u00f3digo corto y f\u00e1cil de escribir. Componente necesario: (1) x Elegoo Uno R3 (1) x m\u00f3dulo de humedad y temperatura DHT11 (3) x F M cables (cables de hembra a macho DuPont)","title":"Resumen"},{"location":"arduino/elegoo/#sensor-de-temperatura-y-humedad","text":"Sensor digital de temperatura y humedad DHT11 es un Sensor compuesto que contiene la salida de la se\u00f1al digital calibrado de la temperatura y la humedad. La tecnolog\u00eda de colecci\u00f3n de m\u00f3dulos digitales dedicado y la temperatura y humedad sensor de tecnolog\u00eda se aplican para garantizar que el producto tiene alta confiabilidad y excelente estabilidad a largo plazo. El sensor incluye un sentido resistente de componentes mojados y un dispositivos de medici\u00f3n de temperatura NTC y conecta con un microcontrolador de 8 bits de alto rendimiento. Aplicaciones: HVAC, deshumidificador, ensayos e inspecci\u00f3n de equipos, bienes de consumo, control autom\u00e1tico, autom\u00f3vil, registradores de datos, estaciones meteorol\u00f3gicas, electrodom\u00e9sticos, regulador de humedad, humedad m\u00e9dicos y otros medici\u00f3n y control. Par\u00e1metros del producto Humedad relativa: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b11% H.R. Precisi\u00f3n: 25 \u00b0 C \u00b15% hr Intercambiabilidad: intercambiables Tiempo de respuesta: 1 / e (63%) de 25\u00ba c 6s 1m / s de aire 6s Hist\u00e9resis: < \u00b1 0.3% RH Estabilidad a largo plazo: < \u00b1 0.5% hr / a\u00f1o en Temperatura: Resoluci\u00f3n: 16 bits Repetibilidad: \u00b10. 2 \u00b0 C Rango: 25 \u00b0 C \u00b12\u00b0 c Tiempo de respuesta: 1 / e (63%) 10S Caracter\u00edsticas el\u00e9ctricas Fuente de alimentaci\u00f3n: DC 3.5 ~ 5.5V Corriente: medici\u00f3n 0.3mA espera 60\u03bcA Periodo de muestreo: m\u00e1s de 2 segundos PIN Descripci\u00f3n: VDD alimentaci\u00f3n 3,5~5.5V DC serie de datos, un solo bus NC, pin vac\u00edo GND tierra, la energ\u00eda negative","title":"Sensor de temperatura y humedad"},{"location":"arduino/elegoo/#conexion_2","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_2","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_2","text":"Como se puede ver que s\u00f3lo necesitamos 3 conexiones al sensor, ya que uno de lo pin no se utiliza. Las conexiones son: voltaje, tierra y se\u00f1al de que puede conectarse a cualquier Pin en nuestro UNO.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_1","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Sensor de humedad y temperatura DHT11 12 de lecci\u00f3n y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < SimpleDHT > Biblioteca o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funciona. Para obtener m\u00e1s informaci\u00f3n sobre el tutorial de la carga del archivo de la librer\u00eda , consulte la lecci\u00f3n 1 A continuaci\u00f3n hay que subir el programa, abra el monitor, donde podemos ver los datos como abajo: (muestra la temperatura del medio ambiente, podemos ver es de 22 grados) Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-12-modulo-joystick-analogico","text":"","title":"Lecci\u00f3n 12 M\u00f3dulo Joystick anal\u00f3gico"},{"location":"arduino/elegoo/#resumen_4","text":"Los Joysticks anal\u00f3gicos son una gran manera de a\u00f1adir un poco de control en sus proyectos. En este tutorial aprenderemos a usar el m\u00f3dulo de joystick anal\u00f3gico Componente necesario: (1) x Elegoo Uno R3 (1) x m\u00f3dulo de Joystick (5) x F M cables (cables de hembra a macho DuPont)","title":"Resumen"},{"location":"arduino/elegoo/#palanca-de-mando","text":"El m\u00f3dulo tiene 5 pines: VCC, tierra, X, Y, clave. Tenga en cuenta que las etiquetas en el suyo pueden ser ligeramente diferentes, dependiendo de d\u00f3nde obtuvo el m\u00f3dulo. El palillo del pulgar es anal\u00f3gico y debe proporcionar lecturas m\u00e1s exactas que las palancas de mando \"direccionales\" simples utilizan algunas formas de botones, o interruptores mec\u00e1nicos. Adem\u00e1s, puede presionar el joystick hacia abajo (bastante dif\u00edcil en la m\u00eda) para activar un pulsador de \"pulsar para seleccionar\". Tenemos que usar pines Arduino anal\u00f3gicos para leer los datos de los pines X / Y, y un pin digital para leer el bot\u00f3n. El pin de la Llave est\u00e1 conectado a tierra, cuando el joystick est\u00e1 presionado hacia abajo, y est\u00e1 flotando de otra manera. Para obtener lecturas estables del pin Key / Select, debe conectarse a VCC a trav\u00e9s de una resistencia pull-up. Las resistencias incorporadas en los pines digitales de Arduino se pueden utilizar. Para obtener un tutorial sobre c\u00f3mo activar las resistencias pull-up para pines Arduino, configuradas como entradas","title":"Palanca de mando"},{"location":"arduino/elegoo/#conexion_3","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_3","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_3","text":"Necesitamos 5 las conexiones de la palanca de mando. Las conexiones son: clave, Y, X, voltaje y tierra. \u00abY y X\u00bb son anal\u00f3gicas y Digital es \"Clave\". Si usted no necesita el interruptor puede utilizar solamente 4 pines.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_2","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Lecci\u00f3n 13 m\u00f3dulo de Joystick anal\u00f3gico y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Palancas de mando an\u00e1logas son b\u00e1sicamente los potenci\u00f3metros para que regresan valores anal\u00f3gicos. Cuando el joystick se encuentra en la posici\u00f3n de reposo o medio, debe devolver un valor de aproximadamente 512. El rango de valores va de 0 a 1024. Abrir al monitor y puede ver los datos como soplo: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-13-modulo-de-receptor-ir","text":"","title":"Lecci\u00f3n 13 M\u00f3dulo de receptor IR"},{"location":"arduino/elegoo/#resumen_5","text":"Usando un control remoto es una gran manera de tener el control inal\u00e1mbrico de su proyecto. Los mandos a distancia infrarrojos son simples y f\u00e1ciles de usar. En este tutorial nos conectando el receptor IR para el UNO y luego use una librer\u00eda que fue dise\u00f1ada para este sensor en particular. En nuestro dibujo tenemos todos los c\u00f3digos de IR Hexadecimal que est\u00e1n disponibles en este control remoto, tambi\u00e9n detectar\u00e1 si el c\u00f3digo fue reconocido y tambi\u00e9n si estamos manteniendo pulsada una tecla","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios","text":"(1) x Elegoo Uno R3 x IR modulo receptor x IR control remoto x F-M cables (cables de hembra a macho DuPont)\u00e7","title":"Componentes necesarios"},{"location":"arduino/elegoo/#sensor-receptor-de-infrarrojos","text":"Los detectores infrarrojos son peque\u00f1os microchips con una c\u00e9lula fotoel\u00e9ctrica que est\u00e1n configurados para recibir a la luz infrarroja. Casi siempre se utilizan para la detecci\u00f3n de control remoto - cada TV y reproductor de DVD tiene uno de estos en la parte delantera para escuchar la se\u00f1al de IR desde el clicker. Dentro del control remoto es un juego IR LED, que emite pulsos IR para comunicar al televisor para encender, apagar o cambiar de canal. Luz infrarroja no es visible para el ojo humano, lo que significa que tarda un poquito m\u00e1s de trabajo para probar una configuraci\u00f3n. Hay algunas diferencias entre ellos y decir unas fotoc\u00e9lulas CdS: Detectores infrarrojos son especialmente filtrados para IR ligero, no son buenos para detectar luz visible. Por otro lado, las fotoc\u00e9lulas son buenas para detectar luz visible de amarillo/verde y no son buenas para luz IR. Detectores infrarrojos tienen un demodulador en ese aspecto para IR modulada a 38 KHz. S\u00f3lo brilla un LED IR no detectada, tiene que ser PWM intermitente en 38 KHz. fotoc\u00e9lulas no tienen ning\u00fan tipo de demodulador y puede detectar cualquier frecuencia (incluyendo CC) dentro de la velocidad de respuesta de la fotoc\u00e9lula (que es aproximadamente 1KHz) Detectores infrarrojos son salida digital - tampoco detectan se\u00f1al 38KHz IR y salida bajo (0V) o no detecta ninguno y salida alto (5V). Fotoc\u00e9lulas act\u00faan como resistencias, los cambios de resistencia dependiendo de cu\u00e1nto se exponen a la luz Lo que se puede medir Como se puede ver en estos gr\u00e1ficos de hoja de datos, la detecci\u00f3n de frecuencia de peak es a 38 KHz y el pico color del LED es de 940 nm. Se puede usar desde unos 35 KHz kHz 41 pero la sensibilidad se desprender\u00e1 para que no detecte as\u00eddesde lejos. Asimismo, puede utilizar LEDs de 850 a 1100 nm pero no funcionan tan bien como 900 a 1000nm as\u00edque aseg\u00farese de obtener coincidencia de LEDs! Compruebe la ficha t\u00e9cnica para su IR LED verificar la longitud de onda. \u00a1Trate de conseguir un 940nm - Recuerde que 940nm no es luz visible!","title":"Sensor receptor de infrarrojos"},{"location":"arduino/elegoo/#conexion_4","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_4","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_4","text":"Hay 3 conexiones para el receptor de infrarrojos. Las conexiones son: se\u00f1al, voltaje y tierra. El \"-\" es la tierra\"S\" es se\u00f1al y medio es voltaje de 5V.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_3","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en la carpeta de c\u00f3digo-Lecci\u00f3n 14 m\u00f3dulo de receptor de IR y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funciona. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. A continuaci\u00f3n nos trasladaremos el < RobotIRremote > fuera de la carpeta de librer\u00eda , para ello ya que entra en conflicto con la librer\u00eda va a utilizar. S\u00f3lo puede arrastrarlo dentro de la carpeta de la librer\u00eda una vez que haya terminado de programar el microcontrolador. Una vez que ha instalado la librer\u00eda , s\u00f3lo seguir adelante y reiniciar su Software IDE. Abrir al monitor y puede ver los datos: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-14-pantalla-lcd","text":"","title":"Lecci\u00f3n 14 Pantalla LCD"},{"location":"arduino/elegoo/#resumen_6","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo conectar y usar una pantalla LCD alfanum\u00e9rico. La pantalla tiene una retroiluminaci\u00f3n de LED y puede mostrar dos filas con hasta 16 caracteres en cada fila. Puede ver los rect\u00e1ngulos para cada car\u00e1cter en la pantalla y los p\u00edxeles que componen cada car\u00e1cter. La pantalla es blanca en azul y est\u00e1 dise\u00f1ada para mostrar texto. En esta lecci\u00f3n, se ejecutar\u00e1 el programa de ejemplo de Arduino para la librer\u00eda de la LCD, pero en la siguiente lecci\u00f3n, nos pondremos nuestra pantalla para mostrar la temperatura mediante sensores.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_1","text":"Elegoo Uno R3 LCD1602 m\u00f3dulo Potenci\u00f3metro (10k) 830 tie-puntos Breadboard M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#lcd1602","text":"Introduccion a las patillas del LCD1602: VSS: Un pin que se conecta a tierra VDD: Un pin que se conecta a un + 5V fuente de alimentaci\u00f3n VO: Un pasador que ajusta el contraste de LCD1602 RS: Un registro seleccione pin que controla donde en memoria de la pantalla LCD datos de escritura. Usted puede seleccionar el registro de datos, que es lo que pasa en la pantalla, o un registro de instrucci\u00f3n, que es donde busca controlador de LCD para obtener instrucciones sobre qu\u00e9 hacer. R/W: Pin A lectura y escritura que selecciona el modo de lectura o escritura a modo de E:, Permitiendo a un perno con energ\u00eda de bajo nivel, m\u00f3dulo causas la LDC para ejecutar instrucciones. D0-D7: Pernos que leer y escribir datos A y K: Que el control de la retroiluminaci\u00f3n LED de los pernos","title":"LCD1602"},{"location":"arduino/elegoo/#conexion_5","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_5","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_5","text":"La pantalla LCD necesita seis pines de Arduino, todo listo para ser salidas digitales. Tambi\u00e9n necesita 5V y GND conexiones. Hay un n\u00famero de conexiones a realizar. Alineaci\u00f3n de la pantalla con la parte superior de la placa ayuda a identificar sus pines sin demasiada cuenta, especialmente si la placa tiene sus filas numeradas con la fila 1 como la fila superior de la Junta. No lo olvides, el cable largo amarillo que conecta el regulador de la olla a la clavija 3 de la pantalla. La 'olla' se utiliza para controlar el contraste de la pantalla. Usted puede encontrar que su pantalla se suministra sin cabecera pins conectados a \u00e9l. Si es as\u00ed, siga las instrucciones en la secci\u00f3n siguiente.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_4","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 22 LCD pantalla y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. Subir el c\u00f3digo a la placa Arduino y usted deber\u00eda ver el mensaje 'Hola, mundo' aparece, seguido de un n\u00famero que cuenta de cero. Lo primero que nota en el dibujo es la l\u00ednea: #include < LiquidCrystal.h > Esto dice Arduino que queremos utilizar la librer\u00eda de cristal l\u00edquido. A continuaci\u00f3n tenemos la l\u00ednea que ten\u00edamos que modificar. Esto define qu\u00e9 pines de Arduino son para conectarse a que pines de la pantalla. LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Despu\u00e9s de subir este c\u00f3digo, aseg\u00farese de que se enciende la retroiluminaci\u00f3n y ajustar el potenci\u00f3metro de toda la manera alrededor hasta que aparezca el mensaje de texto En la funci\u00f3n de setup , tenemos dos comandos: LCD.Begin (16, 2); LCD.Print (\"Hola, mundo!\"); La primera cuenta la librer\u00eda de cristal l\u00edquido cu\u00e1ntas columnas y filas tiene la pantalla. La segunda l\u00ednea muestra el mensaje que vemos en la primera l\u00ednea de la pantalla. En la funci\u00f3n de 'loop', aso tienen dos comandos: lcd.setCursor (0, 1); LCD.Print(Millis()/1000); El primero establece la posici\u00f3n del cursor (donde aparecer\u00e1 el siguiente texto) columna 0 y fila 1. Los n\u00fameros de columna y fila comienzan en 0 en lugar de 1. La segunda l\u00ednea muestra el n\u00famero de milisegundos desde que se restableci\u00f3 el Arduino.","title":"Codigo"},{"location":"arduino/elegoo/#leccion-15-termometro","text":"","title":"Lecci\u00f3n 15: Term\u00f3metro"},{"location":"arduino/elegoo/#resumen_7","text":"En esta lecci\u00f3n, utilizar\u00e1 una pantalla LCD para mostrar la temperatura.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_2","text":"Elegoo Uno R3 LCD1602 M\u00f3dulo x resistencia de ohmio 10 k x termistor x potenci\u00f3metro> * x 830 tie puntos Breadboard x M M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#termistor","text":"Un termistor es un resistor t\u00e9rmico - un resistor que cambia su resistencia con la temperatura. T\u00e9cnicamente, los resistores son termistores - sus cambios de resistencia con temperatura - pero el cambio es generalmente muy peque\u00f1o y dif\u00edcil de medir. Los termistores est\u00e1n hechos para que la resistencia cambia dr\u00e1sticamente con la temperatura para que pueda ser 100 ohmios o m\u00e1s del cambio por grado! Hay dos clases de termistores: NTC (coeficiente de temperatura negativo) PTC (coeficiente positivo de temperatura). En general, usted ver\u00e1 sensores NTC para medir la temperatura. PTC es de uso frecuente como fusibles Reseteables - un aumento de temperatura aumenta la resistencia que significa que conforme pasa m\u00e1s corriente a trav\u00e9s de ellos, se calientan y 'estrangular detr\u00e1s' la corriente, muy \u00fatil para la protecci\u00f3n de circuitos.","title":"Termistor"},{"location":"arduino/elegoo/#conexion_6","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_6","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_6","text":"El dise\u00f1o de la placa se basa en el dise\u00f1o de la lecci\u00f3n 22 , as\u00edque simplificar\u00e1 las cosas si hay esto en la protoboard. Hay unos cables de puente cerca de la olla que se han movido ligeramente en este dise\u00f1o. Los 10 k\u03a9 resistencia y termistores son todas nuevas incorporaciones a la Junta","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_5","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 23 term\u00f3metro y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < LiquidCrystal > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El cableado de esto est\u00e1 basado en la lecci\u00f3n 22. Cargar para arriba en su Arduino y encontrar\u00e1 que calienta el sensor de temperatura al poner el dedo en \u00e9l aumentar\u00e1 la temperatura. Es \u00fatil poner una l\u00ednea de comentario sobre el comando 'lcd'. BSED4D5D6D7 LiquidCrystal lcd (7, 8, 9, 10, 11, 12); Esto facilita las cosas si decides cambiar que utilizas los pernos. En la funci\u00f3n loop ahora hay dos cosas interesantes sucediendo. En primer lugar tenemos que convertir la anal\u00f3gica del sensor de temperatura una temperatura real, y en segundo lugar tenemos que encontrar la manera a los mismos. En primer lugar, echemos un vistazo a c\u00e1lculo de la temperatura. int tempReading = analogRead(tempPin); doble tempK = log (10000.0 * ((1024.0/tempReading - 1))); tempK = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempK * tempK)) * tempK); float tempC = tempK - 273.15; floatfloat tempF = (tempC * 9.0) / 5.0 + 32.0; Cambio lecturas se muestra en una pantalla LCD puede ser complicado. El principal problema es que la lectura puede no ser siempre el mismo n\u00famero de d\u00edgitos. Por lo tanto, si la temperatura cambia de 101,50 a 99.00 entonces el d\u00edgito adicional de la lectura antigua es en peligro de quedar en la pantalla. Para evitar esto, escriba la l\u00ednea de la pantalla LCD cada vez el bucle. lcd.setCursor (0, 0); LCD.Print (\"Temp C\"); lcd.setCursor (6, 0); LCD.Print(tempF); El comentario bastante extra\u00f1o sirve para recordarles de las 16 columnas de la pantalla. Luego puede imprimir una cadena de esa longitud con espacios donde ir\u00e1 la lectura real. Para rellenar los espacios en blanco, establecer la posici\u00f3n del cursor por donde la lectura debe aparecer y luego imprimirlo.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-16-ocho-led-con-74hc595","text":"","title":"Lecci\u00f3n 16 Ocho LED con 74HC595"},{"location":"arduino/elegoo/#resumen_8","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo utilizar ocho LEDs rojo grandes con un UNO sin necesidad de renunciar a 8 patas de salida Aunque usted podr\u00eda conectar ocho LEDs con una resistencia a un pin UNO r\u00e1pidamente empezar\u00eda a quedarse sin patas en su UNO. Si no tienes un mont\u00f3n de cosas conectadas a la ONU. Est\u00e1 bien hacerlo - pero a menudo tiempos queremos botones, sensores, servos, etc. y antes de saberlo que no tienes pernos de izquierda. As\u00ed, en lugar de hacer eso, vas a usar un chip llamado el 74HC595 Serial a paralelo convertidor. Este chip tiene ocho salidas (perfectos) y tres entradas que utilizas para alimentar datos en \u00e9l un poco a la vez. Este chip hace un poco m\u00e1s lento para los LEDs (s\u00f3lo se puede cambiar el LED unos 500.000 veces por segundo en lugar de 8.000.000 por segundo) pero todav\u00eda es muy r\u00e1pido, forma m\u00e1s r\u00e1pido que los seres humanos puede detectar, as\u00edque vale! Componente necesario: (1) x Elegoo Uno R3 830 puntos tie breadboard leds resistencias de 220 ohmios IC x 74hc595 M M cables (cables de puente de macho a macho)","title":"Resumen"},{"location":"arduino/elegoo/#74hc595-registro-de-desplazamiento","text":"El registro de desplazamiento es un tipo de chip que tiene lo que puede considerarse como posiciones de memoria ocho, cada uno de ellos puede ser un 1 o un 0. Para definir cada uno de estos valores encendido o apagado, alimentamos en los datos mediante los pines del chip 'Datos' y 'El reloj'. El pin de reloj debe recibir ocho pulsos. En cada pulso, si el pin de datos es alto, entonces un 1 obtiene empujado en el registro de desplazamiento; de lo contrario, un 0. Cuando se han recibido los ocho impulsos, permitiendo el pin 'Pestillo' copia esos ocho valores en el registro de cierre. Esto es necesario; de lo contrario, parpadean mal los LEDs como se carga los datos en el registro de desplazamiento. El chip tambi\u00e9n tiene un pin de salida activado (OE), que se utiliza para activar o desactivar las salidas a la vez. Podr\u00eda conectar esto a un pin PWM capaz UNO y usar 'analogWrite' para controlar el brillo de los LEDs. Este pin es baja activa, por lo que nos ate a la tierra GND.","title":"74HC595 Registro de desplazamiento"},{"location":"arduino/elegoo/#conexion_7","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_7","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_7","text":"Ya que tenemos ocho LEDs y ocho resistencias para conectar, hay realmente muy pocas conexiones a realizar. Es probablemente m\u00e1s f\u00e1cil poner el chip 74HC595 en primer lugar, como casi todo lo dem\u00e1s se conecta a \u00e9l. Ponerlo de modo que la muesca en forma de U poco hacia la parte superior de la placa. Pin 1 del chip es a la izquierda de esta muesca. Digital 12 del UNO va al pin #14 del registro de desplazamiento Digital 11 del UNO va al pin #12 del registro de desplazamiento 9 digital a partir de la UNO va al pin #11 del registro de desplazamiento Todos sino una de las salidas de la IC est\u00e1 en el lado izquierdo del chip. Por lo tanto, para facilitar la conexi\u00f3n, es donde est\u00e1n los LEDs, tambi\u00e9n. Despu\u00e9s de la viruta, poner las resistencias en su lugar. Usted necesita tener cuidado de que ninguno de los cables de las resistencias tocan. Usted debe comprobar esto otra vez antes de conectar la energ\u00eda a la ONU. Si le resulta dif\u00edcil organizar las resistencias sin sus conductores tocando, entonces ayuda a acortar los cables que est\u00e1n mintiendo m\u00e1s cercanos a la superficie de la placa. A continuaci\u00f3n, coloque los LEDs en la protoboard. Cuanto m\u00e1s positivo lleva LED debe ser hacia el chip, de cualquier lado de la placa est\u00e1n en. Conecte los conductores del puente como se muestra arriba. No olvide que va desde el pin 8 del IC a la columna GND de la placa. Carga el bosquejo aparece un poco m\u00e1s adelante y probar. Cada LED debe encenderse alternadamente hasta que todos los LEDs est\u00e1n encendidos y luego se apagara y el ciclo se repite.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_6","text":"Despu\u00e9s de cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 24 8 LED con 74HC595 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para m\u00e1s detalles sobre el programa cargar si hay alg\u00fan error. Lo primero que hacemos es definir los tres pernos que vamos a utilizar. Estos son los UNO salidas digitales que se conectar\u00e1n a los pines de datos, reloj y cierre de los 74HC595. int latchPin = 11; clockPin int = 9; int dataPin = 12; A continuaci\u00f3n, se define una variable llamada 'leds'. Esto se utiliza para sostener el patr\u00f3n de que LED actualmente es activado o desactivados. Datos de tipo 'byte' representan n\u00fameros de ocho bits. Cada bit puede estar encendido o apagado, esto es perfecto para realizar un seguimiento de cu\u00e1les de nuestros ocho LEDs son on u off. leds de byte = 0; La funci\u00f3n de setup s\u00f3lo establece los tres pernos que estamos utilizando para ser de salidas digitales. void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); } La funci\u00f3n loop inicialmente apaga todos los LEDs, al darle a los variable 'leds' el valor 0. A continuaci\u00f3n, llama 'updateShiftRegister' que enviar\u00e1 el patr\u00f3n de 'leds' para el registro de desplazamiento para que el LED se apague. Se tratar\u00e1 con 'updateShiftRegister' funcionamiento m\u00e1s adelante. La funci\u00f3n loop hace una pausa de medio segundo y entonces empieza a contar de 0 a 7 usando el bucle 'for' y la variable 'i'. Cada vez utiliza la funci\u00f3n de Arduino 'verdadera' para establecer el bit que controla ese LED en la variable 'leds'. A continuaci\u00f3n tambi\u00e9n llama 'updateShiftRegister' para que los leds actualizar para reflejar lo que est\u00e1 en la variable 'leds'. Hay entonces medio segundo de retraso antes de 'i' se incrementa y se ilumina el LED pr\u00f3ximo. void loop() { LED = 0; updateShiftRegister(); Delay(500); for (int i = 0; i < 8; i ++) { bitSet(leds, i); updateShiftRegister(); Delay(500); } } La funci\u00f3n 'updateShiftRegister', en primer lugar se establece la latchPin baja, entonces llama al UNO funci\u00f3n 'shiftOut' antes de poner el 'latchPin' alta otra vez. Esto toma cuatro par\u00e1metros, los dos primeros son los pines para datos y el reloj respectivamente. El tercer par\u00e1metro especifica que final de los datos que desea iniciar en el. Vamos a empezar con la derecha m\u00e1s poco, que se conoce como el 'Bit menos significativo' (LSB). El \u00faltimo par\u00e1metro es los datos reales para ser cambiado de puesto en el registro de desplazamiento, que en este caso es 'leds'. void updateShiftRegister() { digitalWrite (latchPin, bajo); shiftOut (dataPin, clockPin, LSBFIRST, leds); digitalWrite (latchPin, HIGH); } Si usted dese\u00f3 dar vuelta a uno de los LED apagado en lugar, llamar\u00eda una funci\u00f3n similar de Arduino (bitClear) con la variable de 'leds'. Esto ajustar\u00e1 ese poco de 'leds' para ser 0 y entonces s\u00f3lo necesitar\u00e1 seguir con una llamada a 'updateShiftRegister' para actualizar la actual LED.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-17-el-monitor-serial","text":"","title":"Lecci\u00f3n 17 El monitor Serial"},{"location":"arduino/elegoo/#resumen_9","text":"En esta lecci\u00f3n, se basar\u00e1 en la lecci\u00f3n 16, a\u00f1adiendo la facilidad de controlar los LEDs desde el ordenador con el Monitor serie del Arduino. El monitor serial es el 'cable' entre el ordenador y tu UNO. Le permite enviar y recibir mensajes de texto, \u00fatiles para la depuraci\u00f3n y tambi\u00e9n control de la ONU de un teclado! Por ejemplo, usted ser\u00e1 capaz de enviar comandos desde el ordenador para encender LEDs. En esta lecci\u00f3n, utilizar\u00e1 exactamente las mismas piezas y una disposici\u00f3n similar del protoboard como lecci\u00f3n 16. Por lo tanto, si a\u00fan no lo ha hecho, siga lecci\u00f3n 16 ahora. Medidas adoptadas Despu\u00e9s de que han subido este cableado sobre el UNO, haga clic en el bot\u00f3n derecho en la barra de herramientas en el IDE de Arduino. Es en un c\u00edrculo el bot\u00f3n a continuaci\u00f3n. Se abrir\u00e1 la siguiente ventana. Haga clic en el bot\u00f3n Serial Monitor para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1. Esta ventana se llama al Monitor Serial y es parte del software del IDE de Arduino. Su trabajo es la que permite a ambos enviar mensajes desde tu ordenador a una placa UNO (por USB) y tambi\u00e9n recibir mensajes de la placa UNO. El mensaje \"Enter LED n\u00famero 0 a 7or 'x' para borrar\" ha sido enviado por el Arduino. Nos est\u00e1 diciendo qu\u00e9 comandos podemos enviamos a Arduino: o enviar la 'x' (para apagar todos los LEDs) o el n\u00famero de LED que desea activar (donde 0 es el LED de la parte inferior, 1 es la siguiente, hasta 7 para el LED superior). Trate de escribir los siguientes comandos en la parte superior del Monitor Serial que es el nivel con el bot\u00f3n 'Enviar'. Presione 'Enviar', despu\u00e9s de escribir cada uno de estos caracteres: x 0 3 5 Escribir x voluntad no tienen ning\u00fan efecto si los LEDs ya est\u00e1n todos fuera, pero al entrar en cada n\u00famero, el correspondiente LED deber\u00e1 encenderse y usted recibir\u00e1 un mensaje de confirmaci\u00f3n de la placa UNO. El Monitor Serial aparecer\u00e1 como se muestra a continuaci\u00f3n. Escriba x otra vez y pulse 'Enviar' para apagar todos los LEDs","title":"Resumen"},{"location":"arduino/elegoo/#codigo_7","text":"Despu\u00e9s de efectuar el cableado, por favor abra el Serial Monitor del programa en la carpeta de c\u00f3digo-lecci\u00f3n 25 y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Como era de esperar, el cableado se basa en el cableado utilizado en la lecci\u00f3n 24. Por lo tanto, s\u00f3lo cubrimos los nuevos bits aqu\u00ed. Le resultar\u00e1 \u00fatil para referirse al dibujo completo en el IDE de Arduino. En la funci\u00f3n de setup , hay tres nuevas l\u00edneas al final: void setup() { pinMode (latchPin, salida); pinMode (dataPin, salida); pinMode (clockPin, salida); updateShiftRegister(); Serial.Begin(9600); ```mientras (!. Serie); Espere hasta que es listo - Leonardo Serial.println (\"Enter LED n\u00famero de 0 a 7 o 'x' para borrar\"); } En primer lugar, tenemos el comando 'Serial.begin(9600)'. Esto inicia la comunicaci\u00f3n serial, para que la UNO puede enviar comandos a trav\u00e9s de la conexi\u00f3n USB. El valor 9600 es la configuraci\u00f3n velocidad de la conexi\u00f3n. Esto es la rapidez con la que los datos debe ser enviado. Esto puede cambiar a un valor m\u00e1s alto, pero tambi\u00e9n tendr\u00e1s que cambiar al monitor de Arduino Serial el mismo valor. Hablaremos de esto m\u00e1s adelante; por ahora, dejar en 9600. El comienzo de la l\u00ednea con 'mientras' asegura que hay algo en el otro extremo de la conexi\u00f3n USB para Arduino hablar antes de que comience el env\u00edo de mensajes. De lo contrario, el mensaje puede ser enviado, pero no aparece. Esta l\u00ednea es realmente s\u00f3lo es necesaria si est\u00e1 utilizando a un Arduino Leonardo porque el Arduino UNO se restablece autom\u00e1ticamente la placa Arduino al abrir el Monitor de la serie, mientras que esto no sucede con el Leonardo. La \u00faltima de las nuevas l\u00edneas en **setup** env\u00eda el mensaje que vemos en la parte superior del Monitor serie. La funci\u00f3n de 'bucle' es donde sucede toda la acci\u00f3n ```arduino void loop() { if (Serial.available()) { char ch = Serial.read(); if (ch >= '0' && ch <= '7') { int led = ch - '0'; bitSet(leds, led); updateShiftRegister(); Serial.print(\"Turned on LED \"); Serial.println(led); } if (ch == 'x') { leds = 0; 129 / 165 updateShiftRegister(); Serial.println(\"Cleared\"); } } } Todo lo que ocurre dentro del bucle est\u00e1 contenido dentro de una instrucci\u00f3n 'if'. As\u00ed que a menos que la llamada a la funci\u00f3n incorporada de Arduino 'Serial.available()' es 'true' entonces nada suceder\u00e1. Serial.Available() devuelve 'true' si los datos ha sido enviado a la ONU y all\u00edest\u00e1 listos para ser procesado. Los mensajes entrantes se llevan a cabo en lo que se llama un b\u00fafer y Serial.available() devuelve true si ese buffer es no vac\u00eda. Si un mensaje ha sido recibido, es a la siguiente l\u00ednea de c\u00f3digo: char ch = Serial.read(); Esto lee el siguiente car\u00e1cter del b\u00fafer y elimina del buffer. Tambi\u00e9n asigna a la variable 'ch'. La variable 'ch' es de tipo 'char' que significa 'car\u00e1cter' y como su nombre indica, tiene un car\u00e1cter \u00fanico. Si usted ha seguido las instrucciones en el prompt en la parte superior del Monitor Serial, luego este personaje ser\u00e1n o bien un n\u00famero d\u00edgito entre 0 y 7 o la letra 'x'. La instrucci\u00f3n 'if' en la l\u00ednea siguiente comprueba para ver si es un solo d\u00edgito por ver si 'ch' es mayor o igual que el car\u00e1cter ' 0 'y menor o igual que el personaje 7'. Parece un poco extra\u00f1o comparar caracteres de esta manera, pero es perfectamente aceptable. Cada car\u00e1cter est\u00e1 representado por un n\u00famero \u00fanico, conocido su valor ASCII. Esto significa que cuando se comparan caracteres usando < = y > = es realmente los valores ASCII que se estaban comparando. Si pasa la prueba, llegamos a la siguiente l\u00ednea: int led = ch-'0'; \u00a1Ahora estamos actuando aritm\u00e9tica en los personajes! Estamos restando el d\u00edgito '0' de cualquier d\u00edgitos fue introducido. Por lo tanto, si escribi\u00f3 '0' y luego '0' a '0' ser\u00e1 igual a 0. Si escribi\u00f3 '7' y '7'-'0' ser\u00e1 igual al n\u00famero 7 ya que es realmente los valores ASCII que se utilizan en la sustracci\u00f3n. Desde sabemos que el n\u00famero del LED que queremos encender, nos basta establecer este bit en la variable 'leds' y actualizar el registro de desplazamiento. bitSet (leds, led); 121 / 165 updateShiftRegister(); Las dos l\u00edneas escriben de nuevo un mensaje de confirmaci\u00f3n en el Monitor serie. Serial.Print (\"encendido LED\"); Serial.println(LED); La primera l\u00ednea utiliza Serial.print en lugar de Serial.println. La diferencia entre los dos es que Serial.print no se inicia una nueva l\u00ednea despu\u00e9s de imprimir lo que est\u00e1 en su par\u00e1metro. Usamos esto en la primera l\u00ednea, porque estamos impresi\u00f3n el mensaje en dos partes. En primer lugar el general bits: 'Enciende LED' y luego el n\u00famero del LED. El n\u00famero del LED se realiza en un 'int' variable en lugar de ser una cadena de texto. Serial.Print puede tomar ya sea una cadena de texto dentro de comillas dobles, o un 'int' o para el caso casi cualquier tipo de variable. Despu\u00e9s de la instrucci\u00f3n 'if' que maneja el caso, cuando un d\u00edgito se ha manejado, hay una segunda instrucci\u00f3n 'if' que comprueba si la 'ch' es la letra 'x'. Si (ch == 'x') { LE D=0; updateShiftRegister(); Serial.println(\"cleared\"); } Si es as\u00ed, entonces se borran todos los LEDs y env\u00eda un mensaje de confirmaci\u00f3n.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-18-fotocelula","text":"","title":"Lecci\u00f3n 18 Fotoc\u00e9lula"},{"location":"arduino/elegoo/#resumen_10","text":"En esta lecci\u00f3n, usted aprender\u00e1 c\u00f3mo medir la intensidad de la luz utilizando una entrada anal\u00f3gica. Se construir\u00e1 en la lecci\u00f3n 26 y utilice el nivel de luz para controlar el n\u00famero de LEDs que se encender\u00e1n. La fotoc\u00e9lula es en la parte inferior de la placa, donde estaba el bote por encima.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_3","text":"[x] Elegoo Uno R3 [x]830 tie puntos breadboard [x]leds [x]resistencias de 220 ohmios [x]resistencia de 1 k ohm [x] (1) x IC74hc595 [x] (1) x fotoresistor (fotoc\u00e9lula) [x] (16) x M M cables (cables de puente de macho a macho)","title":"Componentes necesarios:"},{"location":"arduino/elegoo/#fotocelula","text":"La fotoc\u00e9lula utilizada es de un tipo llamado un resistor dependiente de luz, a veces llamado un LDR. Como su nombre indica, estos componentes act\u00faan como una resistencia, excepto que la resistencia cambia en respuesta a cuanta luz est\u00e1 cayendo sobre ellos. Esta tiene una resistencia de cerca de 50 k\u03a9 en cerca de oscuridad y \u03a9 500 en luz brillante. Para convertir este valor variable de la resistencia en algo que podemos medir en la entrada anal\u00f3gica de la Junta de un R3 de UNO, debe ser convertida en un voltaje. La forma m\u00e1s sencilla de hacerlo es combinar con una resistencia fija. La resistencia y fotoc\u00e9lula junto se comportan como una sola. Cuando la luz es muy brillante, entonces la resistencia de la fotoc\u00e9lula es muy baja en comparaci\u00f3n con la resistencia de valor fijo, y as\u00edes como si el bote se dio vuelta a m\u00e1ximo. Cuando la fotoc\u00e9lula est\u00e1 en una luz apagada, la resistencia es mayor que la resistencia fija de 1 k\u03a9 y es como si el recipiente estuviera girando hacia GND. Cargue el croquis dado en la siguiente secci\u00f3n y trate de cubrir la fotoc\u00e9lula con el dedo y, a continuaci\u00f3n, sost\u00e9ngalo cerca de una fuente de luz.","title":"Fotoc\u00e9lula"},{"location":"arduino/elegoo/#conexion_8","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_8","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_8","text":"","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_8","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 26 fotoc\u00e9lula y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Lo primero que note es que hemos cambiado el nombre del pin anal\u00f3gico a ser 'apagado' en lugar de 'potPin' ya que no tenemos una olla conectada. El s\u00f3lo cambio substancial al dibujo es la l\u00ednea que calcula cu\u00e1ntos de los LEDs de luz: int numLEDSLit = reading / 57;// all LEDs lit at 1k Este tiempo, dividimos la lectura cruda 57 en lugar de 114. En otras palabras, nos dividirlo por la mitad, tanto como lo hicimos con el bote para dividirlo en nueve zonas, de ning\u00fan LED encendido a ocho todas iluminada. Este factor adicional es para tener en cuenta la resistencia fija de k\u03a9 1. Esto significa que cuando la fotoc\u00e9lula tiene una resistencia de 1 k\u03a9 (igual a la resistencia fija), la lectura cruda ser\u00e1 1023 / 2 = 511. Esto se proporcionan a todos los LED se enciende y luego un poco (numLEDSLit) ser\u00e1 8.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-19-74hc595-y-display-segmentado","text":"","title":"Lecci\u00f3n 19 74HC595 y display Segmentado"},{"location":"arduino/elegoo/#resumen_11","text":"Despu\u00e9s de aprender la lecci\u00f3n 24, 25 y 26, vamos a utilizar el registro de desplazamiento 74HC595 para controlar la visualizaci\u00f3n del segmento. La pantalla mostrar\u00e1 el n\u00famero de 9-0.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_4","text":"(1) x Elegoo Uno R3 x 830 tie-puntos breadboard x 74HC595 IC x 1 Pantalla de 7 d\u00edgitos segmentada x 220 ohm resistencias x M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#display-de-siete-segmentos","text":"Abajo est\u00e1 el diagrama de pines de siete segmentos 0-9 diez d\u00edgitos se corresponden con cada segmento es los siguientes (en la tabla siguiente se aplica com\u00fan c\u00e1todo dispositivo de exhibici\u00f3n de segmento siete, si se utiliza un \u00e1nodo com\u00fan, de la mesa debe ser reemplazado cada 1 0 0 si todos sustituidos por 1): Display digital dp a b c d e f g 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 0 0 0 2 0 1 1 0 1 1 0 1 3 0 1 1 1 1 0 0 1 4 0 0 1 1 0 0 1 1 5 0 1 0 1 1 0 1 1 6 0 1 0 1 1 1 1 1 7 0 1 1 1 0 0 0 0 8 0 1 1 1 1 1 1 1 9 0 1 1 1 1 0 1 1 129 / 165","title":"Display de siete segmentos"},{"location":"arduino/elegoo/#conexion_9","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_9","text":"130 / 165","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_9","text":"131 / 165 La siguiente tabla muestra la tabla de correspondencias pantalla de siete segmentos 74HC595 pin 74HC595 pin Seven shows remarkable control pin (stroke) Q0 7 (A) Q1 6 (B) Q2 4 (C) Q3 2 (D) Q4 1 (E) Q5 9 (F) Q6 10 (G) Q7 5 (DP) Paso uno: conexi\u00f3n 74HC595 En primer lugar, el cableado est\u00e1 conectado a la alimentaci\u00f3n y tierra: VCC (pin 16) y Se\u00f1or (pin 10) conectado a 5V GND (pin 8) y OE (pin 13) a tierra Pin conexi\u00f3n DS, ST_CP y SH_CP: DS (pin 14) conectado al pin de tablero UNO R3 2 (la cifra por debajo de la l\u00ednea amarilla) ST_CP (pin 12, perno de pestillo) conectado al pin de tablero UNO R3 3 (l\u00ednea azul de la figura abajo) SH_CP (pin 11, pin de reloj) conectado al pin de tablero UNO R3 4 (figura debajo de la l\u00ednea blanca) Paso 2: conectar el display de siete segmentos El display de siete segmentos 3, 8 pin a UNO R3 Junta GND (este ejemplo utiliza el c\u00e1todo com\u00fan, si se utiliza el \u00e1nodo com\u00fan, por favor conecte el 3, 8 pines para tablero UNO R3 + 5V) Seg\u00fan la tabla anterior, conecte el 74HC595 Q0 ~ Q7 a siete segmentos pantalla pin correspondiente (A ~ G y DP) y luego cada pie en una resistencia de 220 ohmios en serie.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_9","text":"Despu\u00e9s de efectuar el cableado, abrir el programa en el c\u00f3digo carpeta - lecci\u00f3n 27 74HC595 y exhibici\u00f3n de segmento y haga clic en cargar para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#_1","text":"","title":""},{"location":"arduino/elegoo/#leccion-20-display-de-7-segmentos-de-cuatro-digitos","text":"","title":"Lecci\u00f3n 20 Display de 7 segmentos de cuatro d\u00edgitos"},{"location":"arduino/elegoo/#resumen_12","text":"En esta lecci\u00f3n, aprender\u00e1 a utilizar una pantalla de 7 segmentos de 4 d\u00edgitos. Cuando se utiliza 1 d\u00edgitos de 7 segmentos, tenga en cuenta que si es \u00e1nodo com\u00fan, el pin com\u00fan del \u00e1nodo se conecta a la fuente de energ\u00eda; Si es de c\u00e1todo com\u00fan, el pin com\u00fan del c\u00e1todo se conecta a la tierra. Cuando se utilizan 4 d\u00edgitos de 7 segmentos, el \u00e1nodo com\u00fan o pin de c\u00e1todo com\u00fan se utiliza para controlar qu\u00e9 d\u00edgito aparece. A pesar de que hay s\u00f3lo un d\u00edgito de trabajo, el principio de persistencia de la visi\u00f3n le permite ver todos los n\u00fameros de muestra ya que cada uno es tan r\u00e1pida que apenas notar\u00e1 los intervalos de la velocidad de exploraci\u00f3n.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_5","text":"(1) x Elegoo Uno R3 x 830 tie-punto breadboard x 74HC595 IC x display de 4 d\u00edgitos de 7 segmentos x 220 ohm resistencias x M-M cables (cables de puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#muestra-de-4-digitos-de-7-segmentos","text":"135 / 165 ### Conexi\u00f3n","title":"Muestra de 4 d\u00edgitos de 7 segmentos"},{"location":"arduino/elegoo/#esquema_10","text":"136 / 165","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_10","text":"137 / 165","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_10","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta - lecci\u00f3n 28 cuatro siete segmentos pantalla Digital y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. 138 / 165","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-21-motor-de-corriente-continua","text":"","title":"Lecci\u00f3n 21 Motor de corriente continua"},{"location":"arduino/elegoo/#resumen_13","text":"En esta lecci\u00f3n, aprender\u00e1 a controlar un peque\u00f1o motor DC (corriente continua) usando un R3 de UNO y un transistor.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_6","text":"(1) x Elegoo Uno R3 x 830 tie-punto breadboard x L293D IC (1) x Aspa de ventilador y motor de3-6v x M- M cables (cables de puente de macho a macho) x M\u00f3dulo de alimentaci\u00f3n x 9V1A adaptador corriente","title":"Componentes necesarios"},{"location":"arduino/elegoo/#fuente-de-alimentacion-de-la-placa","text":"El peque\u00f1o motor de corriente continua es probable que use m\u00e1s energ\u00eda que una Junta de UNO R3 salida digital puede manejar directamente. Si tratamos de conectar el motor directamente a un pin de tablero UNO R3, hay una buena probabilidad de que se podr\u00eda da\u00f1ar la Junta UNO R3. Para ello usar un m\u00f3dulo de alimentaci\u00f3n que proporciona alimentaci\u00f3n Especificaciones del producto: Bloqueo Encendido interruptor LED Power indicador Entrada voltaje: 6.5-9v (CC) trav\u00e9s 5.5mm x 2,1 mm enchufe Salida voltaje: 3.3V / 5v M\u00e1ximo salida actual: 700 mA Independiente control riel salida. 0v, 3.3v, 5v a protoboard Salida pins principal para usos externos Tama\u00f1o: 2.1 en x 1.4 en USB dispositivo conector a bordo a power externos dispositivo Configuraci\u00f3n de voltaje de salida: La izquierda y derecha de la tensi\u00f3n de salida puede configurarse independientemente. Para seleccionar la tensi\u00f3n de salida, mover el puente a los pines correspondientes. Nota: indicador de energ\u00eda LED y los carriles de la energ\u00eda de protoboard no se enciende si ambos puentes est\u00e1n en la posici\u00f3n \"OFF\". Nota IMPORTANTE: Aseg\u00farese de alinear el m\u00f3dulo correctamente en la placa de pruebas. El pin negativo (-) en el m\u00f3dulo se alinea con la l\u00ednea azul (-) en la placa de pan y el pin positivo (+) se alinea con la l\u00ednea roja (+). De no hacerlo podr\u00eda resultar en que usted accidentalmente invirtiendo la energ\u00eda a su Proyecto","title":"Fuente de alimentaci\u00f3n de la placa"},{"location":"arduino/elegoo/#l293d","text":"Este es un chip muy \u00fatil. En realidad puede controlar dos motores independientemente. Estamos usando s\u00f3lo la mitad del chip en esta lecci\u00f3n, la mayor\u00eda de los pines en el lado derecho del chip son para el control de un segundo motor. Especificaciones del producto: Cuenta con Unitrode L293 L293D productos y ahora de Texas Instruments Amplio rango de tensi\u00f3n de alimentaci\u00f3n: 4,5 V a 36 V Alimentaci\u00f3n de entrada l\u00f3gica separada Protecci\u00f3n interna ESD Apagado t\u00e9rmico Alta inmunidad de ruido entradas Funcionalmente Similar al L293 SGS y SGS L293D Salida de corriente 1 A por canal (600 mA para el L293D) M\u00e1xima salida de corriente 2 A por canal (1.2 A para L293D) Salida diodos pinza inductiva T ransient supresi\u00f3n (L293D) Descripci\u00f3n y pedidos de informaci\u00f3n El L293 y L293D son cu\u00e1druples controladores de media H de alta corriente. El L293 est\u00e1 dise\u00f1ado para proporcionar corrientes de transmisi\u00f3n bidireccional de hasta 1 A con tensiones de 4,5 V a 36 V. El L293D est\u00e1 dise\u00f1ado para proporcionar bidireccional corrientes de impulsi\u00f3n de hasta 600 mA en tensiones de 4,5 V a 36 V. Ambos dispositivos est\u00e1n dise\u00f1ados para manejar cargas inductivas como rel\u00e9s, solenoides, dc y motores paso a paso bipolares, as\u00edcomo otras cargas de alta corriente de alta tensi\u00f3n en aplicaciones de suministro de positivo. Todas las entradas son TTL compatible. Cada salida es un circuito de coche completa totem-pole, con un fregadero de transistor Darlington y una fuente de pseudo-Darlington. Conductores est\u00e1n habilitados en pares, con conductores de 1 y 2 de 1, 2EN y drivers 3 y 4 de 3, 4EN. Cuando una entrada de enable es alta, est\u00e1n habilitados los controladores asociados, y sus salidas son activas y en fase con sus aportaciones. Cuando la entrada enable es baja, se deshabilitan los controladores y sus salidas son y en el estado de alta impedancia. Con las entradas de datos adecuada, cada par de conductores forma una unidad reversible completo-H (o puente) adecuada para aplicaciones de solenoide o motor.","title":"L293D"},{"location":"arduino/elegoo/#diagrama-de-bloques","text":"VCC1 1 1 16 1 2 15 1 M 0 0 1 3 14 4 13 M 5 12 6 11 2 3 1 1 7 10 0 0 9 8 1 M 0 VCC2 Me hart\u00e9 de diagramas de pinout indescifrables dentro de las hojas de datos, por lo que han dise\u00f1ado mi propio que creo que da m\u00e1s informaci\u00f3n pertinente. Hay 3 cables conectados al Arduino, 2 cables conectados al motor y 1 alambre conectado a una bater\u00eda. Para utilizar este pin: Ocupa el lado izquierdo con el primer motor, el lado derecho trata con un segundo motor. S\u00ed, usted puede funcionar con solamente un motor conectado. 143 / 165 Conexiones de Arduino M1 PWM - con\u00e9ctelo a un pin PWM de Arduino. Est\u00e1 marcados en la ONU, el pin 5 es un ejemplo. Cualquier n\u00famero entero entre 0 y 255, donde 0 es apagado, 128 es la mitad de velocidad y 255 es la velocidad m\u00e1xima de salida. Direcci\u00f3n de M1 0/1 y M1 1/0 - conectar estos pines de Arduino digitales dos a dos. Un pin de salida tan alto y el otro pin como baja y el motor girar\u00e1 en un sentido. Revertir las salidas a baja y alta, y el motor girar\u00e1 en sentido contrario.","title":"Diagrama de bloques"},{"location":"arduino/elegoo/#conexion_10","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_11","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_11","text":"El c\u00f3digo siguiente no utiliza una fuente de alimentaci\u00f3n separada (es decir, una bater\u00eda), sino que utiliza en su lugar la alimentaci\u00f3n de 5v del Arduino. Tenga en cuenta que esto ser\u00eda arriesgado sin que el L293D lo controlara. Nunca deber\u00eda conectar un motor directamente al Arduino, porque al desconectar un motor obtendr\u00e1 una retroalimentaci\u00f3n el\u00e9ctrica. Con un motor peque\u00f1o, esto da\u00f1ar\u00e1 su Arduino, y con un motor grande, usted puede mirar un efecto interesante de la llama y de las chispas.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_11","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 29 motores y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. Ligeramente, el motor girar\u00e1 en sentido horario y antihorario por 5 veces. Luego, seguir\u00e1 dram\u00e1ticamente gire hacia la derecha. Tras una breve pausa, lo dram\u00e1ticamente girar\u00e1 hacia la izquierda. A continuaci\u00f3n, la tarjeta controladora enviar\u00e1 la se\u00f1al PWM para el motor, el motor lentamente reducir su m\u00e1xima RPM al m\u00ednimo y aumentar al m\u00e1ximo otra vez. Por \u00faltimo, se trata de una parada para 10s hasta que comience el siguiente ciclo.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-22-rele","text":"","title":"Lecci\u00f3n 22 Rel\u00e9"},{"location":"arduino/elegoo/#resumen_14","text":"En esta lecci\u00f3n, aprender\u00e1 a utilizar un rel\u00e9","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_7","text":"(1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x Ventilador de aspa y 3-6v dc motor x L293D IC x 5v Rel\u00e9 x M\u00f3dulo de alimentaci\u00f3n x 9V1A Adaptador x M-M cables (cables de puente de macho a macho","title":"Componentes necesarios"},{"location":"arduino/elegoo/#rele","text":"Un rel\u00e9 es un interruptor operado el\u00e9ctricamente. Muchos rel\u00e9s utilizan un electroim\u00e1n para operar mec\u00e1nicamente un interruptor, pero otros principios de funcionamiento tambi\u00e9n se utilizan como rel\u00e9s de estado s\u00f3lidos. Rel\u00e9s se utilizan donde es necesario un circuito de control por una se\u00f1al de baja potencia (con aislamiento el\u00e9ctrico total entre el control y los circuitos controlados), o donde varios circuitos deben ser controlados por una se\u00f1al. Los primeros Relais fueron utilizados en circuitos de larga distancia tel\u00e9grafo como amplificadores. Repite la se\u00f1al proveniente un circuito y hab\u00eda retransmitido en otro circuito. Relais fueron utilizados extensivamente en centrales telef\u00f3nicas y computadoras tempranas para realizar operaciones l\u00f3gicas. Un tipo de rel\u00e9 que pueda manejar la alta potencia necesaria para controlar directamente un motor el\u00e9ctrico u otras cargas se llama un contactor. Rel\u00e9s de estado s\u00f3lidos controlan de circuitos de potencia sin partes m\u00f3viles, en cambio usando un dispositivo de semiconductor para realizar la conmutaci\u00f3n. Relevadores con caracter\u00edsticas de funcionamiento calibradas y a veces m\u00faltiples bobinas de funcionamiento se utilizan para proteger circuitos el\u00e9ctricos contra sobrecarga o fallos. En los sistemas modernos de energ\u00eda el\u00e9ctrica, estas funciones son realizadas por instrumentos digitales llamados \"rel\u00e9s de protecci\u00f3n\". A continuaci\u00f3n es el esquema de c\u00f3mo rel\u00e9 de coche con Arduino. Puede ser confundido acerca de c\u00f3mo insertar el rel\u00e9 en el tablero de pan. Como el cuadro siguiente muestra, tienes que doblar una de las patillas del rel\u00e9 un poco luego se puede insertar en el tablero de pan.","title":"Rel\u00e9"},{"location":"arduino/elegoo/#conexion_11","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_12","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_12","text":"","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_12","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 30 rel\u00e9 y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Programa de carga, despu\u00e9s de encender todos los interruptores de potencia. El rel\u00e9 a recoger con un sonido de timbre. Entonces, el motor girar\u00e1. Despu\u00e9s de un per\u00edodo de tiempo, se liberar\u00e1 el rel\u00e9 y el motor se detiene.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-23-motor-paso-a-paso","text":"","title":"Lecci\u00f3n 23 Motor paso a paso"},{"location":"arduino/elegoo/#resumen_15","text":"En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para manejar un motor paso a paso. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_8","text":"(1) x Elegoo Uno R3 (1) x 830 tie-points breadboard x m\u00f3dulo de controlador de motor paso a paso de x ULN2003 x Motor paso a paso x 9V1A Adaptador x Power supply module x F-M cables (cables de hembra a macho DuPont) M-M wire (hilo puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#motor-paso-a-paso","text":"Un motor paso a paso es un dispositivo electromec\u00e1nico que convierte pulsos el\u00e9ctricos en movimientos mec\u00e1nicos discretos. El eje o eje de un motor paso a paso gira en incrementos discretos cuando impulsos de mando el\u00e9ctrico se aplican a \u00e9l en la secuencia correcta. La rotaci\u00f3n de los motores tiene varias relaciones directas a estos pulsos de entrada aplicadas. La secuencia de los pulsos aplicados se relaciona directamente con la direcci\u00f3n de rotaci\u00f3n de ejes motor. La velocidad de la rotaci\u00f3n de los ejes motor est\u00e1 directamente relacionada con la frecuencia de los pulsos de entrada y la duraci\u00f3n de la rotaci\u00f3n est\u00e1 directamente relacionada con el n\u00famero de pulsos de entrada aplicada. Una de las ventajas m\u00e1s importantes de un motor paso a paso es su capacidad para ser controlado con precisi\u00f3n en un sistema de lazo abierto. Control de lazo abierto significa que ninguna informaci\u00f3n de retroalimentaci\u00f3n de posici\u00f3n es necesario. Este tipo de control elimina la necesidad de costosos dispositivos de detecci\u00f3n y regeneraci\u00f3n como codificadores \u00f3pticos. Su posici\u00f3n es conocida simplemente por hacer el seguimiento de los pulsos de entrada de paso 28BYJ-48 los par\u00e1metros del motor paso a paso Modelo: 28BYJ-48 Tensi\u00f3n nominal: 5 VDC N\u00famero de fase: 4 Cociente de la variaci\u00f3n de velocidad: 1/64 \u00c1ngulo de paso: 5,625 \u00b0 64 Frecuencia: 100Hz Resistencia de la C.C.: 50\u03a9\u00b17 %(25 \u00b0 C) Inactivo en tracci\u00f3n frecuencia: > 600Hz Frecuencia ociosa de hacia fuera-tracci\u00f3n: > 1000Hz En tracci\u00f3n par > 34.3mN.m(120Hz) Posicionamiento autom\u00e1tico par > 34.3mN.m Par de fricci\u00f3n: 600-1200 gf.cm Tire un par: 300 gf.cm Resistencia de aislamiento > 10M\u03a9(500V) Aislantes de electricidad : 600VAC/1mA/1s Grado de aislamiento : A Subida de temperatura < 40K(120Hz) Ruido < 35dB (120Hz, No carga, 10cm","title":"Motor paso a paso"},{"location":"arduino/elegoo/#esquema-de-circuitos","text":"El motor de pasos bipolar tiene generalmente cuatro cables que salen de \u00e9l. A diferencia de los motores PAP unipolares, steppers bipolares no tienen ninguna conexi\u00f3n com\u00fan de centro. Tienen dos juegos independientes de bobinas en lugar de otro. Se pueden distinguir de steppers unipolares midiendo la resistencia entre los cables. Debe encontrar dos pares de cables de igual resistencia. Si tienes las puntas de su medidor conectado a dos cables que no est\u00e1n conectados (es decir, no conectada a la bobina del mismo), deber\u00eda ver resistencia infinita (o sin continuidad).","title":"Esquema de circuitos"},{"location":"arduino/elegoo/#uln2003-placa-conductora","text":"Descripci\u00f3n del producto Tama\u00f1o: 42mmx30mm Chip de controlador de uso ULN2003, 500mA A. B. C. D LED que indica las cuatro fases las condiciones de trabajo motor paso a paso. Blanco jack es el conector est\u00e1ndar motor cuatro fase paso a paso. Pines de alimentaci\u00f3n son separados Mantuvimos las clavijas del resto de la viruta del ULN2003 para sus prototipos m\u00e1s. La forma m\u00e1s sencilla de conexi\u00f3n un paso a paso unipolar a Arduino es utilizar un desglose para chip de ULN2003A transistor array. El ULN2003A contiene siete controladores de transistor Darlington y es algo as\u00edcomo tener siete transistores TIP120 todo en un paquete. El ULN2003A puede pasar hasta 500 mA por canal y tiene una ca\u00edda de tensi\u00f3n interna de 1V cuando en. Tambi\u00e9n contiene diodos de abrazadera interna para disipar las puntas de tensi\u00f3n al manejar cargas inductivas. Para controlar el paso a paso, aplicamos tensi\u00f3n a cada una de las bobinas en una secuencia espec\u00edfica. La secuencia ir\u00eda as\u00ed: Estos son esquemas que muestran c\u00f3mo un paso a paso unipolar de interfaz motor a cuatro pines controlador utilizando un ULN2003A y mostrando c\u00f3mo la interfaz usando cuatro com","title":"ULN2003 Placa conductora"},{"location":"arduino/elegoo/#conexion_12","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_13","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_13","text":"Estamos utilizando 4 pines para controlar el paso a paso. Pin 8-11 controlan el motor paso a paso. Conectamos la tierra de a UNO para el motor paso a paso.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_13","text":"Despu\u00e9s de efectuar el cableado, por favor, abra el programa en el c\u00f3digo de carpeta lecci\u00f3n 31 Motor de pasos y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado la librer\u00eda < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1.","title":"C\u00f3digo"},{"location":"arduino/elegoo/#leccion-24-control-motor-paso-a-paso-con-mando-a-distancia","text":"","title":"Lecci\u00f3n 24 Control Motor paso a paso con mando a distancia"},{"location":"arduino/elegoo/#resumen_16","text":"En esta lecci\u00f3n, usted aprender\u00e1 una manera divertida y f\u00e1cil para controlar un motor paso a paso a distancia mediante un mando a distancia IR. El paso a paso que estamos utilizando viene con su propio tablero de conductor, lo que es f\u00e1cil conectar con nuestro UNO. Ya que no queremos que el motor de accionamiento de la ONU, vamos a usar una barata fuente de alimentaci\u00f3n peque\u00f1a protoboard que enchufes a la derecha en nuestro protoboard y alimentaci\u00f3n con una fuente de alimentaci\u00f3n 9V 1Amp. El sensor de infrarrojos est\u00e1 conectado a la ONU directamente ya que no utiliza casi ninguna energ\u00eda.","title":"Resumen"},{"location":"arduino/elegoo/#componentes-necesarios_9","text":"(1) x Elegoo Uno R3 x 830 tie-points breadboard x IR receiver module x IR remote x ULN2003 stepper motor driver module x Stepper motor x Power supply module x 9V1A Adaptador x F-M cables (cables de hembra a macho DuPont) x M-M cable (hilo puente de macho a macho)","title":"Componentes necesarios"},{"location":"arduino/elegoo/#conexion_13","text":"","title":"Conexi\u00f3n"},{"location":"arduino/elegoo/#esquema_14","text":"","title":"Esquema"},{"location":"arduino/elegoo/#diagrama-de-cableado_14","text":"Estamos utilizando 4 pines para controlar el paso a paso y el 1 pin del sensor IR. Pernos 8-11 controlan el motor paso a paso y pin 12 recibe la informaci\u00f3n de IR. Conectamos los 5V y la tierra de la ONU en el sensor. Como medida de precauci\u00f3n, usar un protoboard alimentaci\u00f3n potencia el motor paso a paso ya que puede utilizar m\u00e1s energ\u00eda y no queremos da\u00f1ar la fuente de alimentaci\u00f3n de la UNO.","title":"Diagrama de cableado"},{"location":"arduino/elegoo/#codigo_14","text":"Despu\u00e9s de efectuar el cableado, por favor abrir programa en el c\u00f3digo de carpeta - lecci\u00f3n 32 control paso a paso Motor con control remoto y haga clic en UPLOAD para cargar el programa. Ver Lecci\u00f3n 2 para obtener m\u00e1s informaci\u00f3n sobre programa cargar si hay alg\u00fan error. Antes de ejecutar esto, aseg\u00farese de que ha instalado el < IRremote > Biblioteca de < paso a paso > o volver a instalarlo, si es necesario. De lo contrario, el c\u00f3digo no funcionar\u00e1. Para obtener m\u00e1s informaci\u00f3n sobre carga el archivo de librer\u00eda , ver Lecci\u00f3n 1. El c\u00f3digo reconoce s\u00f3lo 2 valores desde el control remoto IR: VOL + y VOL-. - Presionando VOL + del control remoto el motor har\u00e1 un giro completo hacia la derecha. - VOL- para hacer una rotaci\u00f3n completa en sentido antihorario.","title":"C\u00f3digo"},{"location":"arduino/esp8266/","text":"Introducci\u00f3n El ESP8266 NodeMCU es una plataforma de hardware y software open source que permite a los usuarios crear dispositivos conectados a Internet con funciones de red WiFi de forma r\u00e1pida y f\u00e1cil. Se basa en el chip ESP8266, que es un microcontrolador Wi-Fi de bajo costo y de altas prestaciones. Aplicaciones principales Dispositivos dom\u00e9sticos inteligentes Dispositivos IoT Wearables Juguetes conectados Sistemas de seguridad Termostatos Sistemas de rociadores Controles remotos Iluminaci\u00f3n automatizada C\u00f3digo fuente /* * ESP8266 NodeMCU LED Control over WiFi Demo * * https://circuits4you.com */ #include <ESP8266WiFi.h> #include <WiFiClient.h> //ESP Web Server Library to host a web page #include <ESP8266WebServer.h> //--------------------------------------------------------------- //Our HTML webpage contents in program memory const char MAIN_page[] PROGMEM = R\"=====( <!DOCTYPE html> <html> <body> <center> <h1>WiFi LED on off demo: 1</h1><br> Ciclk to turn <a href=\"ledOn\">LED ON</a><br> Ciclk to turn <a href=\"ledOff\">LED OFF</a><br> <hr> <a href=\"https://circuits4you.com\">circuits4you.com</a> </center> </body> </html> )=====\"; //--------------------------------------------------------------- //On board LED Connected to GPIO2 #define LED 2 //SSID and Password of your WiFi router const char* ssid = \"BONDIATOTLODIA\"; const char* password = \"UHYD6VRg\"; //Declare a global object variable from the ESP8266WebServer class. ESP8266WebServer server(80); //Server on port 80 //=============================================================== // This routine is executed when you open its IP in browser //=============================================================== void handleRoot() { Serial.println(\"You called root page\"); String s = MAIN_page; //Read HTML contents server.send(200, \"text/html\", s); //Send web page } void handleLEDon() { Serial.println(\"LED on page\"); digitalWrite(LED,LOW); //LED is connected in reverse server.send(200, \"text/html\", \"LED is ON\"); //Send ADC value only to client ajax request } void handleLEDoff() { Serial.println(\"LED off page\"); digitalWrite(LED,HIGH); //LED off server.send(200, \"text/html\", \"LED is OFF\"); //Send ADC value only to client ajax request } //============================================================== // SETUP //============================================================== void setup(void){ Serial.begin(115200); Serial.println(\"\"); Serial.println(ssid); Serial.println(password); WiFi.begin(ssid, password); //Connect to your WiFi router //Onboard LED port Direction output pinMode(LED,OUTPUT); //Power on LED state off digitalWrite(LED,HIGH); // Wait for connection while (WiFi.status() != WL_CONNECTED) { delay(500); Serial.print(\".\"); } //If connection successful show IP address in serial monitor Serial.println(\"\"); Serial.print(\"Connected to \"); Serial.println(ssid); Serial.print(\"IP address: \"); Serial.println(WiFi.localIP()); //IP address assigned to your ESP server.on(\"/\", handleRoot); //Which routine to handle at root location. This is display page server.on(\"/ledOn\", handleLEDon); //as Per <a href=\"ledOn\">, Subroutine to be called server.on(\"/ledOff\", handleLEDoff); server.begin(); //Start server Serial.println(\"HTTP server started\"); } //============================================================== // LOOP //============================================================== void loop(void){ server.handleClient(); //Handle client requests } Subida Salida monitor serie Wifi bridge #include <ESP8266WiFi.h> // Set WiFi credentials #define WIFI_SSID \"YOUR WIFI NETWORK SSID\" #define WIFI_PASS \"YOUR WIFI PASSWORD\" // Set AP credentials #define AP_SSID \"ESP8266\" #define AP_PASS \"magicword\" void setup() { // Setup serial port Serial.begin(115200); Serial.println(); // Begin Access Point WiFi.mode(WIFI_AP_STA); WiFi.softAP(AP_SSID, AP_PASS); // Begin WiFi WiFi.begin(WIFI_SSID, WIFI_PASS); // Connecting to WiFi... Serial.print(\"Connecting to \"); Serial.print(WIFI_SSID); while (WiFi.status() != WL_CONNECTED) { delay(100); Serial.print(\".\"); } // Connected to WiFi Serial.println(); Serial.println(\"Connected!\"); Serial.print(\"IP address for network \"); Serial.print(WIFI_SSID); Serial.print(\" : \"); Serial.println(WiFi.localIP()); Serial.print(\"IP address for network \"); Serial.print(AP_SSID); Serial.print(\" : \"); Serial.print(WiFi.softAPIP()); } void loop() { // put your main code here, to run repeatedly: } https://siytek.com/esp8266-ap-and-station-mode/","title":"Introducci\u00f3n"},{"location":"arduino/esp8266/#introduccion","text":"El ESP8266 NodeMCU es una plataforma de hardware y software open source que permite a los usuarios crear dispositivos conectados a Internet con funciones de red WiFi de forma r\u00e1pida y f\u00e1cil. Se basa en el chip ESP8266, que es un microcontrolador Wi-Fi de bajo costo y de altas prestaciones.","title":"Introducci\u00f3n"},{"location":"arduino/esp8266/#aplicaciones-principales","text":"Dispositivos dom\u00e9sticos inteligentes Dispositivos IoT Wearables Juguetes conectados Sistemas de seguridad Termostatos Sistemas de rociadores Controles remotos Iluminaci\u00f3n automatizada","title":"Aplicaciones principales"},{"location":"arduino/esp8266/#codigo-fuente","text":"/* * ESP8266 NodeMCU LED Control over WiFi Demo * * https://circuits4you.com */ #include <ESP8266WiFi.h> #include <WiFiClient.h> //ESP Web Server Library to host a web page #include <ESP8266WebServer.h> //--------------------------------------------------------------- //Our HTML webpage contents in program memory const char MAIN_page[] PROGMEM = R\"=====( <!DOCTYPE html> <html> <body> <center> <h1>WiFi LED on off demo: 1</h1><br> Ciclk to turn <a href=\"ledOn\">LED ON</a><br> Ciclk to turn <a href=\"ledOff\">LED OFF</a><br> <hr> <a href=\"https://circuits4you.com\">circuits4you.com</a> </center> </body> </html> )=====\"; //--------------------------------------------------------------- //On board LED Connected to GPIO2 #define LED 2 //SSID and Password of your WiFi router const char* ssid = \"BONDIATOTLODIA\"; const char* password = \"UHYD6VRg\"; //Declare a global object variable from the ESP8266WebServer class. ESP8266WebServer server(80); //Server on port 80 //=============================================================== // This routine is executed when you open its IP in browser //=============================================================== void handleRoot() { Serial.println(\"You called root page\"); String s = MAIN_page; //Read HTML contents server.send(200, \"text/html\", s); //Send web page } void handleLEDon() { Serial.println(\"LED on page\"); digitalWrite(LED,LOW); //LED is connected in reverse server.send(200, \"text/html\", \"LED is ON\"); //Send ADC value only to client ajax request } void handleLEDoff() { Serial.println(\"LED off page\"); digitalWrite(LED,HIGH); //LED off server.send(200, \"text/html\", \"LED is OFF\"); //Send ADC value only to client ajax request } //============================================================== // SETUP //============================================================== void setup(void){ Serial.begin(115200); Serial.println(\"\"); Serial.println(ssid); Serial.println(password); WiFi.begin(ssid, password); //Connect to your WiFi router //Onboard LED port Direction output pinMode(LED,OUTPUT); //Power on LED state off digitalWrite(LED,HIGH); // Wait for connection while (WiFi.status() != WL_CONNECTED) { delay(500); Serial.print(\".\"); } //If connection successful show IP address in serial monitor Serial.println(\"\"); Serial.print(\"Connected to \"); Serial.println(ssid); Serial.print(\"IP address: \"); Serial.println(WiFi.localIP()); //IP address assigned to your ESP server.on(\"/\", handleRoot); //Which routine to handle at root location. This is display page server.on(\"/ledOn\", handleLEDon); //as Per <a href=\"ledOn\">, Subroutine to be called server.on(\"/ledOff\", handleLEDoff); server.begin(); //Start server Serial.println(\"HTTP server started\"); } //============================================================== // LOOP //============================================================== void loop(void){ server.handleClient(); //Handle client requests }","title":"C\u00f3digo fuente"},{"location":"arduino/esp8266/#subida","text":"","title":"Subida"},{"location":"arduino/esp8266/#salida-monitor-serie","text":"","title":"Salida monitor serie"},{"location":"arduino/esp8266/#wifi-bridge","text":"#include <ESP8266WiFi.h> // Set WiFi credentials #define WIFI_SSID \"YOUR WIFI NETWORK SSID\" #define WIFI_PASS \"YOUR WIFI PASSWORD\" // Set AP credentials #define AP_SSID \"ESP8266\" #define AP_PASS \"magicword\" void setup() { // Setup serial port Serial.begin(115200); Serial.println(); // Begin Access Point WiFi.mode(WIFI_AP_STA); WiFi.softAP(AP_SSID, AP_PASS); // Begin WiFi WiFi.begin(WIFI_SSID, WIFI_PASS); // Connecting to WiFi... Serial.print(\"Connecting to \"); Serial.print(WIFI_SSID); while (WiFi.status() != WL_CONNECTED) { delay(100); Serial.print(\".\"); } // Connected to WiFi Serial.println(); Serial.println(\"Connected!\"); Serial.print(\"IP address for network \"); Serial.print(WIFI_SSID); Serial.print(\" : \"); Serial.println(WiFi.localIP()); Serial.print(\"IP address for network \"); Serial.print(AP_SSID); Serial.print(\" : \"); Serial.print(WiFi.softAPIP()); } void loop() { // put your main code here, to run repeatedly: } https://siytek.com/esp8266-ap-and-station-mode/","title":"Wifi bridge"},{"location":"arduino/mando%20con%20infrarrojos/","text":"13. M\u00f3dulo de receptor IR Resumen Los mandos a distancia infrarrojos son simples y f\u00e1ciles de usar. En este tutorial nos conectando el receptor IR para el UNO y luego usaremos una librer\u00eda que fue dise\u00f1ada para este sensor en particular. En nuestro dibujo tenemos todos los c\u00f3digos de IR Hexadecimal que est\u00e1n disponibles en este control remoto, tambi\u00e9n detectar\u00e1 si el c\u00f3digo fue reconocido y tambi\u00e9n si estamos manteniendo pulsada una tecla Componentes necesarios (1) x Elegoo Uno R3 x IR modulo receptor x IR control remoto x F-M cables (cables de hembra a macho DuPont)\u00e7 Sensor receptor de infrarrojos Los detectores infrarrojos son peque\u00f1os microchips con una c\u00e9lula fotoel\u00e9ctrica que est\u00e1n configurados para recibir a la luz infrarroja. Casi siempre se utilizan para la detecci\u00f3n de control remoto - cada TV y reproductor de DVD tiene uno de estos en la parte delantera para escuchar la se\u00f1al de IR desde el clicker. Dentro del control remoto es un juego IR LED, que emite pulsos IR para comunicar al televisor para encender, apagar o cambiar de canal. Luz infrarroja no es visible para el ojo humano, lo que significa que tarda un poquito m\u00e1s de trabajo para probar una configuraci\u00f3n. Hay algunas diferencias entre ellos y decir unas fotoc\u00e9lulas CdS: Detectores infrarrojos son especialmente filtrados para IR ligero, no son buenos para detectar luz visible. Por otro lado, las fotoc\u00e9lulas son buenas para detectar luz visible de amarillo/verde y no son buenas para luz IR. Detectores infrarrojos tienen un demodulador en ese aspecto para IR modulada a 38 KHz. S\u00f3lo brilla un LED IR no detectada, tiene que ser PWM intermitente en 38 KHz. fotoc\u00e9lulas no tienen ning\u00fan tipo de demodulador y puede detectar cualquier frecuencia (incluyendo CC) dentro de la velocidad de respuesta de la fotoc\u00e9lula (que es aproximadamente 1KHz) Detectores infrarrojos son salida digital - tampoco detectan se\u00f1al 38KHz IR y salida bajo (0V) o no detecta ninguno y salida alto (5V). Fotoc\u00e9lulas act\u00faan como resistencias, los cambios de resistencia dependiendo de cu\u00e1nto se exponen a la luz Lo que se puede medir Como se puede ver en estos gr\u00e1ficos de hoja de datos, la detecci\u00f3n de frecuencia de peak es a 38 KHz y el pico color del LED es de 940 nm. Se puede usar desde unos 35 KHz kHz 41 pero la sensibilidad se desprender\u00e1 para que no detecte as\u00eddesde lejos. Asimismo, puede utilizar LEDs de 850 a 1100 nm pero no funcionan tan bien como 900 a 1000nm as\u00edque aseg\u00farese de obtener coincidencia de LEDs! Compruebe la ficha t\u00e9cnica para su IR LED verificar la longitud de onda. \u00a1Trate de conseguir un 940nm - Recuerde que 940nm no es luz visible! Conexi\u00f3n Esquema Diagrama de cableado Hay 3 conexiones para el receptor de infrarrojos. Las conexiones son: se\u00f1al, voltaje y tierra. El \"-\" es la tierra\"S\" es se\u00f1al y medio es voltaje de 5V. C\u00f3digo #include \"IRremote.h\" int receiver = 11; // Signal Pin of IR receiver to Arduino Digital Pin 11 /*-----( Declare objects )-----*/ IRrecv irrecv(receiver); // create instance of 'irrecv' decode_results results; // create instance of 'decode_results' /*-----( Function )-----*/ void translateIR() // takes action based on IR code received // describing Remote IR codes { switch(results.value) { case 0xFFA25D: Serial.println(\"POWER\"); break; case 0xFFE21D: Serial.println(\"FUNC/STOP\"); break; case 0xFF629D: Serial.println(\"VOL+\"); break; case 0xFF22DD: Serial.println(\"FAST BACK\"); break; case 0xFF02FD: Serial.println(\"PAUSE\"); break; case 0xFFC23D: Serial.println(\"FAST FORWARD\"); break; case 0xFFE01F: Serial.println(\"DOWN\"); break; case 0xFFA857: Serial.println(\"VOL-\"); break; case 0xFF906F: Serial.println(\"UP\"); break; case 0xFF9867: Serial.println(\"EQ\"); break; case 0xFFB04F: Serial.println(\"ST/REPT\"); break; case 0xFF6897: Serial.println(\"0\"); break; case 0xFF30CF: Serial.println(\"1\"); break; case 0xFF18E7: Serial.println(\"2\"); break; case 0xFF7A85: Serial.println(\"3\"); break; case 0xFF10EF: Serial.println(\"4\"); break; case 0xFF38C7: Serial.println(\"5\"); break; case 0xFF5AA5: Serial.println(\"6\"); break; case 0xFF42BD: Serial.println(\"7\"); break; case 0xFF4AB5: Serial.println(\"8\"); break; case 0xFF52AD: Serial.println(\"9\"); break; case 0xFFFFFFFF: Serial.println(\" REPEAT\");break; default: Serial.println(\" other button \"); }// End Case delay(500); // Do not get immediate repeat } //END translateIR void setup() /*----( SETUP: RUNS ONCE )----*/ { Serial.begin(9600); Serial.println(\"IR Receiver Button Decode\"); irrecv.enableIRIn(); // Start the receiver }/*--(end setup )---*/ void loop() /*----( LOOP: RUNS CONSTANTLY )----*/ { if (irrecv.decode(&results)) // have we received an IR signal? { translateIR(); irrecv.resume(); // receive the next value } }/* --(end main loop )-- */ Abrir al monitor y puede ver los datos: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1","title":"Mando con infrarrojos"},{"location":"arduino/mando%20con%20infrarrojos/#13-modulo-de-receptor-ir","text":"","title":"13. M\u00f3dulo de receptor IR"},{"location":"arduino/mando%20con%20infrarrojos/#resumen","text":"Los mandos a distancia infrarrojos son simples y f\u00e1ciles de usar. En este tutorial nos conectando el receptor IR para el UNO y luego usaremos una librer\u00eda que fue dise\u00f1ada para este sensor en particular. En nuestro dibujo tenemos todos los c\u00f3digos de IR Hexadecimal que est\u00e1n disponibles en este control remoto, tambi\u00e9n detectar\u00e1 si el c\u00f3digo fue reconocido y tambi\u00e9n si estamos manteniendo pulsada una tecla","title":"Resumen"},{"location":"arduino/mando%20con%20infrarrojos/#componentes-necesarios","text":"(1) x Elegoo Uno R3 x IR modulo receptor x IR control remoto x F-M cables (cables de hembra a macho DuPont)\u00e7","title":"Componentes necesarios"},{"location":"arduino/mando%20con%20infrarrojos/#sensor-receptor-de-infrarrojos","text":"Los detectores infrarrojos son peque\u00f1os microchips con una c\u00e9lula fotoel\u00e9ctrica que est\u00e1n configurados para recibir a la luz infrarroja. Casi siempre se utilizan para la detecci\u00f3n de control remoto - cada TV y reproductor de DVD tiene uno de estos en la parte delantera para escuchar la se\u00f1al de IR desde el clicker. Dentro del control remoto es un juego IR LED, que emite pulsos IR para comunicar al televisor para encender, apagar o cambiar de canal. Luz infrarroja no es visible para el ojo humano, lo que significa que tarda un poquito m\u00e1s de trabajo para probar una configuraci\u00f3n. Hay algunas diferencias entre ellos y decir unas fotoc\u00e9lulas CdS: Detectores infrarrojos son especialmente filtrados para IR ligero, no son buenos para detectar luz visible. Por otro lado, las fotoc\u00e9lulas son buenas para detectar luz visible de amarillo/verde y no son buenas para luz IR. Detectores infrarrojos tienen un demodulador en ese aspecto para IR modulada a 38 KHz. S\u00f3lo brilla un LED IR no detectada, tiene que ser PWM intermitente en 38 KHz. fotoc\u00e9lulas no tienen ning\u00fan tipo de demodulador y puede detectar cualquier frecuencia (incluyendo CC) dentro de la velocidad de respuesta de la fotoc\u00e9lula (que es aproximadamente 1KHz) Detectores infrarrojos son salida digital - tampoco detectan se\u00f1al 38KHz IR y salida bajo (0V) o no detecta ninguno y salida alto (5V). Fotoc\u00e9lulas act\u00faan como resistencias, los cambios de resistencia dependiendo de cu\u00e1nto se exponen a la luz Lo que se puede medir Como se puede ver en estos gr\u00e1ficos de hoja de datos, la detecci\u00f3n de frecuencia de peak es a 38 KHz y el pico color del LED es de 940 nm. Se puede usar desde unos 35 KHz kHz 41 pero la sensibilidad se desprender\u00e1 para que no detecte as\u00eddesde lejos. Asimismo, puede utilizar LEDs de 850 a 1100 nm pero no funcionan tan bien como 900 a 1000nm as\u00edque aseg\u00farese de obtener coincidencia de LEDs! Compruebe la ficha t\u00e9cnica para su IR LED verificar la longitud de onda. \u00a1Trate de conseguir un 940nm - Recuerde que 940nm no es luz visible!","title":"Sensor receptor de infrarrojos"},{"location":"arduino/mando%20con%20infrarrojos/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/mando%20con%20infrarrojos/#esquema","text":"","title":"Esquema"},{"location":"arduino/mando%20con%20infrarrojos/#diagrama-de-cableado","text":"Hay 3 conexiones para el receptor de infrarrojos. Las conexiones son: se\u00f1al, voltaje y tierra. El \"-\" es la tierra\"S\" es se\u00f1al y medio es voltaje de 5V.","title":"Diagrama de cableado"},{"location":"arduino/mando%20con%20infrarrojos/#codigo","text":"#include \"IRremote.h\" int receiver = 11; // Signal Pin of IR receiver to Arduino Digital Pin 11 /*-----( Declare objects )-----*/ IRrecv irrecv(receiver); // create instance of 'irrecv' decode_results results; // create instance of 'decode_results' /*-----( Function )-----*/ void translateIR() // takes action based on IR code received // describing Remote IR codes { switch(results.value) { case 0xFFA25D: Serial.println(\"POWER\"); break; case 0xFFE21D: Serial.println(\"FUNC/STOP\"); break; case 0xFF629D: Serial.println(\"VOL+\"); break; case 0xFF22DD: Serial.println(\"FAST BACK\"); break; case 0xFF02FD: Serial.println(\"PAUSE\"); break; case 0xFFC23D: Serial.println(\"FAST FORWARD\"); break; case 0xFFE01F: Serial.println(\"DOWN\"); break; case 0xFFA857: Serial.println(\"VOL-\"); break; case 0xFF906F: Serial.println(\"UP\"); break; case 0xFF9867: Serial.println(\"EQ\"); break; case 0xFFB04F: Serial.println(\"ST/REPT\"); break; case 0xFF6897: Serial.println(\"0\"); break; case 0xFF30CF: Serial.println(\"1\"); break; case 0xFF18E7: Serial.println(\"2\"); break; case 0xFF7A85: Serial.println(\"3\"); break; case 0xFF10EF: Serial.println(\"4\"); break; case 0xFF38C7: Serial.println(\"5\"); break; case 0xFF5AA5: Serial.println(\"6\"); break; case 0xFF42BD: Serial.println(\"7\"); break; case 0xFF4AB5: Serial.println(\"8\"); break; case 0xFF52AD: Serial.println(\"9\"); break; case 0xFFFFFFFF: Serial.println(\" REPEAT\");break; default: Serial.println(\" other button \"); }// End Case delay(500); // Do not get immediate repeat } //END translateIR void setup() /*----( SETUP: RUNS ONCE )----*/ { Serial.begin(9600); Serial.println(\"IR Receiver Button Decode\"); irrecv.enableIRIn(); // Start the receiver }/*--(end setup )---*/ void loop() /*----( LOOP: RUNS CONSTANTLY )----*/ { if (irrecv.decode(&results)) // have we received an IR signal? { translateIR(); irrecv.resume(); // receive the next value } }/* --(end main loop )-- */ Abrir al monitor y puede ver los datos: Haga clic en el Serial Monitor bot\u00f3n para encender el monitor serie. Se introducen los conceptos b\u00e1sicos sobre el monitor serial en detalles en la lecci\u00f3n 1","title":"C\u00f3digo"},{"location":"arduino/proyecto-parking/","text":"Objetivo La idea de este proyecto es crear un sistema autom\u00e1tico de control de un aparcamiento utilizando Arduino Materiales necesarios 3 LED de color rojo 3 LED de color verde 1 servo En lugar de fotoresistencias se pueden incorporar sensores infrarrojos. Funcionamiento El parking dispondr\u00e1 de 3 plazas para aparcar. Cada una de ellas tendr\u00e1 un sensor que iluminar\u00e1 un LED en el caso de que un coche est\u00e9 aparcado encima suyo, indicando que la plaza est\u00e1 ocupada. El servomotor mover\u00e1 una barrera, que estar\u00e1 subida cuando alguna de las plazas est\u00e9 libre (sin coche encima). En el caso de que las 3 plazas est\u00e9n ocupadas, la barrera estar\u00e1 bajada. Posibles mejoras Crear un contador de plazas libres. Para ello ayudarse de un seven segments o una pantalla LCD Crear un detector a la entrada para abrir la barrera solo cuando haya un coche esperando. Se puede incorporar un sem\u00e1foro a la entrada que indique si se puede pasar.","title":"Objetivo"},{"location":"arduino/proyecto-parking/#objetivo","text":"La idea de este proyecto es crear un sistema autom\u00e1tico de control de un aparcamiento utilizando Arduino","title":"Objetivo"},{"location":"arduino/proyecto-parking/#materiales-necesarios","text":"3 LED de color rojo 3 LED de color verde 1 servo En lugar de fotoresistencias se pueden incorporar sensores infrarrojos.","title":"Materiales necesarios"},{"location":"arduino/proyecto-parking/#funcionamiento","text":"El parking dispondr\u00e1 de 3 plazas para aparcar. Cada una de ellas tendr\u00e1 un sensor que iluminar\u00e1 un LED en el caso de que un coche est\u00e9 aparcado encima suyo, indicando que la plaza est\u00e1 ocupada. El servomotor mover\u00e1 una barrera, que estar\u00e1 subida cuando alguna de las plazas est\u00e9 libre (sin coche encima). En el caso de que las 3 plazas est\u00e9n ocupadas, la barrera estar\u00e1 bajada.","title":"Funcionamiento"},{"location":"arduino/proyecto-parking/#posibles-mejoras","text":"Crear un contador de plazas libres. Para ello ayudarse de un seven segments o una pantalla LCD Crear un detector a la entrada para abrir la barrera solo cuando haya un coche esperando. Se puede incorporar un sem\u00e1foro a la entrada que indique si se puede pasar.","title":"Posibles mejoras"},{"location":"arduino/tiras-led/","text":"Introducci\u00f3n Los LEDs se est\u00e1n volviendo cada vez m\u00e1s populares como un medio para iluminar un espacio. Uno de los tipos de LEDs m\u00e1s nuevos y populares es el WS2812B. Estos LEDs ofrecen una serie de ventajas sobre los LEDs tradicionales, como la capacidad de cambiar de color y la capacidad de crear una gran variedad de efectos de iluminaci\u00f3n. El WS2812B es un tipo de LED direccionable. Esto significa que cada LED individual se puede controlar de forma independiente . Esto le da la capacidad de crear algunos efectos de iluminaci\u00f3n realmente geniales. Por ejemplo, puede crear un espect\u00e1culo de luces en el que cada LED sea de un color diferente y todos cambien de color al mismo tiempo. Alimentaci\u00f3n Las tiras WS2812B pueden alimentarse a trav\u00e9s de una bater\u00eda o de una fuente de alimentaci\u00f3n externa. El voltaje necesario para que funcione correctamente la tira de led WS2812B es de 5V. Un led WS2812B necesita un m\u00ednimo de 60mA para funcionar. La librer\u00eda FASTLED FastLED es una librer\u00eda de c\u00f3digo abierto para programar tira de LEDs RGB direccionables y controladores. Est\u00e1 dise\u00f1ada para simplificar el proceso de crear efectos de iluminaci\u00f3n complejos y se puede usar con una amplia variedad de hardware. Conexi\u00f3n Cabecera #include<FastLED.h> // header file #define NUM_LEDS 60 // number of led present in your strip #define DATA_PIN 6 // digital pin of your arduino CRGB leds[NUM_LEDS]; Setup void setup() { FastLED.addLeds<WS2812B, LED_PIN, GRB>(leds, NUM_LEDS); FastLED.setBrightness(50); } Loop // en mi tira, un p\u00edxel equivale a 3 LED, por lo que cuando enciendo 1 LED como en el c\u00f3digo, 3 LED brillaron //esto se debe a que en mi tira de leds hay 3 leds conectados en serie y controlados por ws28111 en 12v // leds[led no.] es una matriz void loop() { leds[0] = CRGB::Green; //glow 1st led as green leds[1] = CRGB::Blue; //glow 2nd led as blue FastLED.show(); // apply the function on led strip delay(30); } ## Parpadeo (blink) ```c void loop() { leds[0] = CRGB::Blue; FastLED.show(); delay(200); leds[0] = CRGB::Black; FastLED.show(); delay(200); } Para apagar la luz: leds[0] = CRGB::Black; Iluminar todos los LED de golpe Para ello podemos utilizar la funci\u00f3n fill_solid . fill_solid(leds, NUM_LEDS, CRGB:Red); Arcoiris fill_rainbow(leds, NUM_LEDS, 0,255 / NUM_LEDS); LED Chaser // chase forward void loop() { for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } } // chase backward void loop() { for(int dot=NUM_LEDS ; dot >=0 ; dot--) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } } // chase both void loop() { for(int dot=(NUM_LEDS-1) ; dot >=0 ; dot--) { leds[dot] = CRGB::Green; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } } Serial glow void loop() { for(int dot=(NUM_LEDS-1) ; dot >=0 ; dot--) { leds[dot] = CRGB::HotPink; FastLED.show(); delay(300); } for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Blue; FastLED.show(); delay(300); } }","title":"Tiras led"},{"location":"arduino/tiras-led/#introduccion","text":"Los LEDs se est\u00e1n volviendo cada vez m\u00e1s populares como un medio para iluminar un espacio. Uno de los tipos de LEDs m\u00e1s nuevos y populares es el WS2812B. Estos LEDs ofrecen una serie de ventajas sobre los LEDs tradicionales, como la capacidad de cambiar de color y la capacidad de crear una gran variedad de efectos de iluminaci\u00f3n. El WS2812B es un tipo de LED direccionable. Esto significa que cada LED individual se puede controlar de forma independiente . Esto le da la capacidad de crear algunos efectos de iluminaci\u00f3n realmente geniales. Por ejemplo, puede crear un espect\u00e1culo de luces en el que cada LED sea de un color diferente y todos cambien de color al mismo tiempo.","title":"Introducci\u00f3n"},{"location":"arduino/tiras-led/#alimentacion","text":"Las tiras WS2812B pueden alimentarse a trav\u00e9s de una bater\u00eda o de una fuente de alimentaci\u00f3n externa. El voltaje necesario para que funcione correctamente la tira de led WS2812B es de 5V. Un led WS2812B necesita un m\u00ednimo de 60mA para funcionar.","title":"Alimentaci\u00f3n"},{"location":"arduino/tiras-led/#la-libreria-fastled","text":"FastLED es una librer\u00eda de c\u00f3digo abierto para programar tira de LEDs RGB direccionables y controladores. Est\u00e1 dise\u00f1ada para simplificar el proceso de crear efectos de iluminaci\u00f3n complejos y se puede usar con una amplia variedad de hardware.","title":"La librer\u00eda FASTLED"},{"location":"arduino/tiras-led/#conexion","text":"","title":"Conexi\u00f3n"},{"location":"arduino/tiras-led/#cabecera","text":"#include<FastLED.h> // header file #define NUM_LEDS 60 // number of led present in your strip #define DATA_PIN 6 // digital pin of your arduino CRGB leds[NUM_LEDS];","title":"Cabecera"},{"location":"arduino/tiras-led/#setup","text":"void setup() { FastLED.addLeds<WS2812B, LED_PIN, GRB>(leds, NUM_LEDS); FastLED.setBrightness(50); }","title":"Setup"},{"location":"arduino/tiras-led/#loop","text":"// en mi tira, un p\u00edxel equivale a 3 LED, por lo que cuando enciendo 1 LED como en el c\u00f3digo, 3 LED brillaron //esto se debe a que en mi tira de leds hay 3 leds conectados en serie y controlados por ws28111 en 12v // leds[led no.] es una matriz void loop() { leds[0] = CRGB::Green; //glow 1st led as green leds[1] = CRGB::Blue; //glow 2nd led as blue FastLED.show(); // apply the function on led strip delay(30); } ## Parpadeo (blink) ```c void loop() { leds[0] = CRGB::Blue; FastLED.show(); delay(200); leds[0] = CRGB::Black; FastLED.show(); delay(200); } Para apagar la luz: leds[0] = CRGB::Black;","title":"Loop"},{"location":"arduino/tiras-led/#iluminar-todos-los-led-de-golpe","text":"Para ello podemos utilizar la funci\u00f3n fill_solid . fill_solid(leds, NUM_LEDS, CRGB:Red); Arcoiris fill_rainbow(leds, NUM_LEDS, 0,255 / NUM_LEDS);","title":"Iluminar todos los LED de golpe"},{"location":"arduino/tiras-led/#led-chaser","text":"// chase forward void loop() { for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } } // chase backward void loop() { for(int dot=NUM_LEDS ; dot >=0 ; dot--) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } } // chase both void loop() { for(int dot=(NUM_LEDS-1) ; dot >=0 ; dot--) { leds[dot] = CRGB::Green; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Red; FastLED.show(); leds[dot] = CRGB::Black; delay(300); } }","title":"LED Chaser"},{"location":"arduino/tiras-led/#serial-glow","text":"void loop() { for(int dot=(NUM_LEDS-1) ; dot >=0 ; dot--) { leds[dot] = CRGB::HotPink; FastLED.show(); delay(300); } for(int dot = 0;dot < NUM_LEDS; dot++) { leds[dot] = CRGB::Blue; FastLED.show(); delay(300); } }","title":"Serial glow"},{"location":"arduino/parking/parking1cocheIR/","text":"Problema Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde. Algoritmo Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo C\u00f3digo // variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"Problema"},{"location":"arduino/parking/parking1cocheIR/#problema","text":"Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde.","title":"Problema"},{"location":"arduino/parking/parking1cocheIR/#algoritmo","text":"Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo","title":"Algoritmo"},{"location":"arduino/parking/parking1cocheIR/#codigo","text":"// variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"C\u00f3digo"},{"location":"arduino/parking/parkinginfrarrojos/","text":"// variables y includes #include <Servo.h> // Configuramos PINES para leer los valores del LDR // Los conectaremos a los pines anal\u00f3gicos A1 a A3 int pinP1Sensor = A1; int pinP2Sensor = A2; int pinP3Sensor = A3; int pinEntradaSensor = A5; // Configuramos los PINES para cada LED // Los conectaremos a los pines 7 a 12 int pinP1Rojo = 12; int pinP1Verde = 11; int pinP2Rojo = 10; int pinP2Verde = 9; int pinP3Rojo = 8; int pinP3Verde = 7; int valorSensorP1 = 0; int valorSensorP2 = 0; int valorSensorP3 = 0; int valorSensorEntrada = 0; // Estados true or false de los 3 parkings boolean P1_ocupado; boolean P2_ocupado; boolean P3_ocupado; boolean parkingLleno; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo // setup part void setup() { Serial.begin(9600); miservo.attach(13); // Le asignamos el PIN //Habilitamos como salida pinMode(pinP1Rojo, OUTPUT); pinMode(pinP1Verde, OUTPUT); pinMode(pinP2Rojo, OUTPUT); pinMode(pinP2Verde, OUTPUT); pinMode(pinP2Rojo, OUTPUT); pinMode(pinP2Verde, OUTPUT); } // loop part void loop() { delay(200); valorSensorP1 = digitalRead(pinP1Sensor); valorSensorP2 = digitalRead(pinP2Sensor); valorSensorP3 = digitalRead(pinP3Sensor); valorSensorEntrada = digitalRead(pinEntradaSensor); Serial.println(valorSensorP1); Serial.println(valorSensorP2); Serial.println(valorSensorP3); if (valorSensorP1 == HIGH) { digitalWrite(pinP1Rojo, LOW); digitalWrite(pinP1Verde, HIGH); P1_ocupado = false; } else { digitalWrite(pinP1Rojo, HIGH); digitalWrite(pinP1Verde, LOW); P1_ocupado = true; } if (valorSensorP2 == HIGH) { digitalWrite(pinP2Rojo, LOW); digitalWrite(pinP2Verde, HIGH); P2_ocupado = false; } else { digitalWrite(pinP2Rojo, HIGH); digitalWrite(pinP2Verde, LOW); P2_ocupado = true; } if (valorSensorP3 == HIGH) { digitalWrite(pinP3Rojo, LOW); digitalWrite(pinP3Verde, HIGH); P3_ocupado = false; } else { digitalWrite(pinP3Rojo, HIGH); digitalWrite(pinP3Verde, LOW); P3_ocupado = true; } // Si las 3 plazas est\u00e1n ocupadas (valores true) cierra la barrera // Si al menos una no lo est\u00e1, abre la barrera if (P1_ocupado && P2_ocupado && P3_ocupado) { parkingLleno = true; } else { parkingLleno = false; } if ((valorSensorEntrada == LOW ) && (parkingLleno == false)) { miservo.write(posicionCerrado); // tell servo to go to position in variable 'pos' Serial.println(\"hay un coche en la entrada\"); } else { miservo.write(posicionAbierto); // tell servo to go to position in variable 'pos' } }","title":"Parkinginfrarrojos"},{"location":"arduino/parking/soloLED/","text":"Problema Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde. Algoritmo Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo C\u00f3digo // variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"Problema"},{"location":"arduino/parking/soloLED/#problema","text":"Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde.","title":"Problema"},{"location":"arduino/parking/soloLED/#algoritmo","text":"Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo","title":"Algoritmo"},{"location":"arduino/parking/soloLED/#codigo","text":"// variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"C\u00f3digo"},{"location":"arduino/parking/soloServo/","text":"Problema Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde. Algoritmo Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo C\u00f3digo // variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"Problema"},{"location":"arduino/parking/soloServo/#problema","text":"Si el sensor de infrarrojos detecta un coche, enciende el led rojo y apaga el led verde y baja la barrera Si el sensor no detecta un coche, se apaga el led rojo y apaga el led verde.","title":"Problema"},{"location":"arduino/parking/soloServo/#algoritmo","text":"Solo una vez: Decir donde est\u00e1n conectados los led y configurar como salida Decir donde est\u00e1 conectado el sensor IR y configurar como entrada Decir donde est\u00e1 conectado el motor y programar como salida Repetir siempre: Mirar el valor del sensor de IR Si el sensor detecta un valor alto Enciende el rojo y apaga el verde Baja la barrera con el servo Si el sensor detecta un valor bajo Apaga el rojo y enciende el verde Baja la barrera con el servo","title":"Algoritmo"},{"location":"arduino/parking/soloServo/#codigo","text":"// variables y includes #include <Servo.h> int pinSensor = A1; int pinServo = 13 int pinRojo = 12; int pinVerde = 11; int valorSensorIR = 0; // Grados del servo para las dos posiciones (abierto y cerrado) int posicionAbierto = 0; // variable to store the servo position int posicionCerrado = 90; Servo miservo; // create servo object to control a servo void setup() { Serial.begin(9600); miservo.attach(pinServo); // Le asignamos el PIN //Habilitamos como salida pinMode(pinRojo, OUTPUT); pinMode(pinVerde, OUTPUT); } void loop() { valorSensorIR = digitalRead(pinSensor); Serial.println(valorSensorIR); if (valorSensorIR == HIGH) { digitalWrite(pinRojo, LOW); digitalWrite(pinVerde, HIGH); miservo.write(posicionCerrado); } else { digitalWrite(pinRojo, HIGH); digitalWrite(pinVerde, LOW); miservo.write(posicionAbierto); } }","title":"C\u00f3digo"},{"location":"azure/azure/","text":"Conectar Hemos creado una cuenta con suscricion gratuita para probar las funcionalidades de azure. Para acceder y logearse podemos hacerlo a traves del portal: https://portal.azure.com/ Grupos de recursos Todos los recursos que se creen deben ir dentro de un grupo de recursos . Es decir, aunque solo creamos crear una maquina virtual, debemos crear un grupo de recursos en el que estara situada. Lo primero que nos preguntara al crear un recuroso cualquiera sera en que grupo queremos crearlo. Crear una infraestructura Podemos crear toda nuestra infraestructura a base de clicks pero es un poco tedioso. Vamos a crear toda la infraestructura autom\u00e1ticamente. Podemos hacerlo de varias formas: A base de shell puro y duro Automatizaci\u00f3n tipo terraform. Otros Creaci\u00f3n manual Azure nos permite crear una infraestructura de contenedores, por lo que tenemos que crear un grupo de recursos al que vamos a llamar contenedores . Dentro de \u00e9l vamos a meter todas las instancias de contenedor que queramos. En este caso vamos a crear un servicio de kubernetes utilizando Azure Kubernetes Service o AKS. Detalles del proyecto Creamos un servicio AKS, para lo cual vamos a crear un grupo de recursos nuevo, llamado \"clusterk8s\" Detalles del cluster Nos vamos a crear un cluster: lo llamamos cluster-k8s-pruebas . Versi\u00f3n de kubernetes 1.12.7 regi\u00f3n North Europe Pool de nodos Aqu\u00ed definimos el n\u00famero de nodos que vamos a meter. Nos recomiendan: 3 nodos para producci\u00f3n 1 nodo para desarrollo Nos permiten elegir el tipo de m\u00e1quina, por lo que vamos a pillar una sencillita, adem\u00e1s de que nos consumir\u00e1 menos dinero. Elegir maquinas para el cluster He probado con maquinas de 2 GB y un vCore pero me dice que no valen para montar un AKS. Me voy a coger una m\u00e1quina A1_v2 que, por unos 30 euros mes, me da: 2 vCPU 4 GB RAM 2 discos Todos los nodos que cree van a ser iguales, por lo que conviene atinar bien o deberemos crear el AKS de nuevo. Limitaciones de cuenta Una vez definidas las maquinas voy a decirle cuantos nodos quiero Le indicamos que nos meta 2 nodos en el cluster. La cuenta gratuita no me deja crear m\u00e1s nodos. Escalado A continuaci\u00f3n nos va a pedir opciones de escalado que le queremos meter. Nos permite meter: Virtual nodes VM Scale sets De momento pasamos ol\u00edmpicamente porque no vamos a implantar escalado. Servicio Nos pedir\u00e1 crear un service principal Networking TODO Monitorizaci\u00f3n Por lo que dice, AKS nos va a facilitar m\u00e9tricas ed CPU y memoria por cada nodo. Tambi\u00e9n podemos meter m\u00e1s cosas de monitorizaci\u00f3n, pero nos avisan de que nos van a cobrar. Le decimos que gracias pero que no queremos por ahora extra monitorizaci\u00f3n. Levantando el AKS Por \u00faltimo, nos dejar\u00e1 comprobar la configuraci\u00f3n para levantar el sistema. Me permite guardar como template la configuraci\u00f3n que he hecho en varios sistemas, entre ellos: Un script powershell .NET, Ruby, etc. Shell scripts Con lo cual, si tenemos que volver a crear el mismo chiringuito, no nos har\u00e1 falta hacerlo a mano paso por paso. Levantando el cluster Lo que m\u00e1s tarda es en levantar el cluster , puesto que me tiene que arrancar las 2 MV. Por lo que veo, me ha creado un deployment llamado: Deployment name:microsoft.aks-20190429114347 Resultado del despliegue Al cabo de 8 minutazos: Your deployment is complete Deployment name:microsoft.aks-20190429114347 Subscription:Azure para estudiantes Resource group:clusterk8s Deployment details(Download) Start time:29/4/2019, 11:53:25 Duration:8 minutes 43 seconds Correlation ID:9df64479-3390-4b1f-b1bb-ee5be5158c97 Deployment center Bueno, pues tengo mi cluster creado con mis 2 maquinitas, y montado el AKS de kubernetes encima. De momento se quedan esperando a que despliegue algo encima. Me voy a deployment center para linkar a un proyecto de GitHub . He cogido un repo de un proyecto que tengo de pruebas basado en Node.js y mongoDB, que ya ten\u00eda dockerizado. DevOps project Me obliga a crear un DevOps project porque s\u00ed, al que voy a llamar danimrprofe . Podr\u00e9 consultar mis proyectos en: https://dev.azure.com/danimrprofe/ Me hace una build del proyecto, una release Me obliga a crear un registro, que le voy a llamar igual. Aqu\u00ed me he quedado porque ya no sab\u00eda por donde tirar.","title":"Conectar"},{"location":"azure/azure/#conectar","text":"Hemos creado una cuenta con suscricion gratuita para probar las funcionalidades de azure. Para acceder y logearse podemos hacerlo a traves del portal: https://portal.azure.com/","title":"Conectar"},{"location":"azure/azure/#grupos-de-recursos","text":"Todos los recursos que se creen deben ir dentro de un grupo de recursos . Es decir, aunque solo creamos crear una maquina virtual, debemos crear un grupo de recursos en el que estara situada. Lo primero que nos preguntara al crear un recuroso cualquiera sera en que grupo queremos crearlo.","title":"Grupos de recursos"},{"location":"azure/azure/#crear-una-infraestructura","text":"Podemos crear toda nuestra infraestructura a base de clicks pero es un poco tedioso. Vamos a crear toda la infraestructura autom\u00e1ticamente. Podemos hacerlo de varias formas: A base de shell puro y duro Automatizaci\u00f3n tipo terraform. Otros","title":"Crear una infraestructura"},{"location":"azure/azure/#creacion-manual","text":"Azure nos permite crear una infraestructura de contenedores, por lo que tenemos que crear un grupo de recursos al que vamos a llamar contenedores . Dentro de \u00e9l vamos a meter todas las instancias de contenedor que queramos. En este caso vamos a crear un servicio de kubernetes utilizando Azure Kubernetes Service o AKS.","title":"Creaci\u00f3n manual"},{"location":"azure/azure/#detalles-del-proyecto","text":"Creamos un servicio AKS, para lo cual vamos a crear un grupo de recursos nuevo, llamado \"clusterk8s\"","title":"Detalles del proyecto"},{"location":"azure/azure/#detalles-del-cluster","text":"Nos vamos a crear un cluster: lo llamamos cluster-k8s-pruebas . Versi\u00f3n de kubernetes 1.12.7 regi\u00f3n North Europe","title":"Detalles del cluster"},{"location":"azure/azure/#pool-de-nodos","text":"Aqu\u00ed definimos el n\u00famero de nodos que vamos a meter. Nos recomiendan: 3 nodos para producci\u00f3n 1 nodo para desarrollo Nos permiten elegir el tipo de m\u00e1quina, por lo que vamos a pillar una sencillita, adem\u00e1s de que nos consumir\u00e1 menos dinero.","title":"Pool de nodos"},{"location":"azure/azure/#elegir-maquinas-para-el-cluster","text":"He probado con maquinas de 2 GB y un vCore pero me dice que no valen para montar un AKS. Me voy a coger una m\u00e1quina A1_v2 que, por unos 30 euros mes, me da: 2 vCPU 4 GB RAM 2 discos Todos los nodos que cree van a ser iguales, por lo que conviene atinar bien o deberemos crear el AKS de nuevo.","title":"Elegir maquinas para el cluster"},{"location":"azure/azure/#limitaciones-de-cuenta","text":"Una vez definidas las maquinas voy a decirle cuantos nodos quiero Le indicamos que nos meta 2 nodos en el cluster. La cuenta gratuita no me deja crear m\u00e1s nodos.","title":"Limitaciones de cuenta"},{"location":"azure/azure/#escalado","text":"A continuaci\u00f3n nos va a pedir opciones de escalado que le queremos meter. Nos permite meter: Virtual nodes VM Scale sets De momento pasamos ol\u00edmpicamente porque no vamos a implantar escalado.","title":"Escalado"},{"location":"azure/azure/#servicio","text":"Nos pedir\u00e1 crear un service principal","title":"Servicio"},{"location":"azure/azure/#networking","text":"TODO","title":"Networking"},{"location":"azure/azure/#monitorizacion","text":"Por lo que dice, AKS nos va a facilitar m\u00e9tricas ed CPU y memoria por cada nodo. Tambi\u00e9n podemos meter m\u00e1s cosas de monitorizaci\u00f3n, pero nos avisan de que nos van a cobrar. Le decimos que gracias pero que no queremos por ahora extra monitorizaci\u00f3n.","title":"Monitorizaci\u00f3n"},{"location":"azure/azure/#levantando-el-aks","text":"Por \u00faltimo, nos dejar\u00e1 comprobar la configuraci\u00f3n para levantar el sistema. Me permite guardar como template la configuraci\u00f3n que he hecho en varios sistemas, entre ellos: Un script powershell .NET, Ruby, etc. Shell scripts Con lo cual, si tenemos que volver a crear el mismo chiringuito, no nos har\u00e1 falta hacerlo a mano paso por paso.","title":"Levantando el AKS"},{"location":"azure/azure/#levantando-el-cluster","text":"Lo que m\u00e1s tarda es en levantar el cluster , puesto que me tiene que arrancar las 2 MV. Por lo que veo, me ha creado un deployment llamado: Deployment name:microsoft.aks-20190429114347","title":"Levantando el cluster"},{"location":"azure/azure/#resultado-del-despliegue","text":"Al cabo de 8 minutazos: Your deployment is complete Deployment name:microsoft.aks-20190429114347 Subscription:Azure para estudiantes Resource group:clusterk8s Deployment details(Download) Start time:29/4/2019, 11:53:25 Duration:8 minutes 43 seconds Correlation ID:9df64479-3390-4b1f-b1bb-ee5be5158c97","title":"Resultado del despliegue"},{"location":"azure/azure/#deployment-center","text":"Bueno, pues tengo mi cluster creado con mis 2 maquinitas, y montado el AKS de kubernetes encima. De momento se quedan esperando a que despliegue algo encima. Me voy a deployment center para linkar a un proyecto de GitHub . He cogido un repo de un proyecto que tengo de pruebas basado en Node.js y mongoDB, que ya ten\u00eda dockerizado.","title":"Deployment center"},{"location":"azure/azure/#devops-project","text":"Me obliga a crear un DevOps project porque s\u00ed, al que voy a llamar danimrprofe . Podr\u00e9 consultar mis proyectos en: https://dev.azure.com/danimrprofe/ Me hace una build del proyecto, una release Me obliga a crear un registro, que le voy a llamar igual. Aqu\u00ed me he quedado porque ya no sab\u00eda por donde tirar.","title":"DevOps project"},{"location":"criptomonedas/brevehistoriadebitcoin/","text":"Breve historia de Bitcoin. Transacciones, bloques, hashes y recompensas 4 octubre, 2021 Bitcoin es un conjunto de tecnolog\u00edas, as\u00ed como el nombre de la moneda, basados en la tecnolog\u00eda blockchain. Bitcoin se basa en un libro de cuentas distribuido entre m\u00faltiples nodos repartidos por Internet, en forma de una cadena de bloques llamada Blockchain .Los nodos comparten informaci\u00f3n y crean bloques, manteniendo toda la estructura de bitcoin. Los bitcoin La moneda se llama bitcoin. Existen unidades m\u00e1s peque\u00f1as que un bitcoin Las monedas se van creando poco a poco. Cada vez que se crea un bloque se generan bitcoin Actualmente cada 10 minutos se crean 6.25 bitcoin, que se ingresan en la cuenta del minero que crea el bloque correcto En 2140 se estima que se habr\u00e1n creado todos los bitcoin El m\u00e1ximo de monedas que habr\u00e1 ser\u00e1n 21.000.000 de bitcoin. Ni m\u00e1s ni menos. Un satoshi es equivalente a 0.00000001 bitcoins Podemos comprar bitcoin con nuestro dinero, y venderlo a cambio de dinero. La cantidad de euros a que equivale el bitcoin cambia con el tiempo. Los bitcoin no existen, solo existen como anotaciones en el libro de cuentas Las personas que minan un bloque con \u00e9xito, se \u00abautotransfieren\u00bb una cantidad fija de la nada Las cuentas Cada persona crea al menos una cuenta, identificada con un c\u00f3digo Esta cuenta est\u00e1 protegida con claves criptogr\u00e1ficas \u00fanicas, que solo tiene el due\u00f1o En ning\u00fan momento se asocia esta cuenta con unos datos reales Si se pierden las claves, se pierde el acceso a la cuenta y, por tanto, el acceso al dinero Estas cuentas se guardan en billeteras o wallets. Estas no contienen dinero alguno, solo las claves. Podemos tener claves de varias criptomonedas en una misma billetera. Las transacciones Cada cuenta tiene una direcci\u00f3n p\u00fablica, aunque no se asocia a una persona p\u00fablicamente. El dinero se mueve de una cuenta a otra mediante transacciones Las transacciones son movimientos de dinero entre varias cuentas. Las transacciones son p\u00fablicas, y cualquiera puede verlas Deben ser confirmadas para que tengan efecto. Al hacer una transacci\u00f3n, parte del dinero pagado se descuenta para luego repartirse como recompensa (como una - comisi\u00f3n) Los bloques Cuando se tiene un conjunto de transacciones, se crea con ellas un bloque con ellas Los mineros compiten por crear un bloque v\u00e1lido. Cada diez minutos de media se crea un bloque v\u00e1lido Una vez se crea un bloque v\u00e1lido, se agrega a la cadena de bloques existente. El 3 de enero de 2009 se crea el primer bloque. Los bloques tienen un n\u00famero que los identifica. El bloque original es el bloque 0. En este bloque, la primera transacci\u00f3n es una cantidad de bitcoins creados nuevos a su cuenta Si su bloque sale adelante, las transferencias de dentro se confirman, y se lleva la recompensa. Las recompensas van disminuyendo cada 4 a\u00f1os (50,25, 12.5, 6.25, etc). A d\u00eda de hoy (octubre de 2021) existen alrededor de 700.000 bloques creados La cadena blockchain Los bloques se apilan uno encima del otro, formando una pila. Cada bloque que se apila est\u00e1 formado a partir del anterior, con parte de su informaci\u00f3n Esta cadena de bloques se llama blockchain Toda esta informaci\u00f3n, que ocupa actualmente 400 GB, se guarda en m\u00faltiples ordenadores Estos ordenadores se llaman nodos, y se van intercambiando la informaci\u00f3n Bitcoin existe mientras todos estos nodos guardan copias de la informaci\u00f3n Las recompensas El sistema se sostiene gracias a recompensas. Las transacciones y los bloques dan recompensas. Los mineros dedican potencia de ordenadores a crear bloques, a cambio de la posibilidad de ganar dinero Para este minado se necesita cada vez m\u00e1s potencia de computaci\u00f3n Los hashes El sistema intenta que los bloques se vayan creando regularmente cada 10 minutos de media Para ello, pone un reto de dificultad que tarde un tiempo en poder resolverse Este reto consiste en crear un c\u00f3digo utilizando criptograf\u00eda llamado hash Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta allar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido.","title":"Breve historia de Bitcoin. Transacciones, bloques, hashes y recompensas"},{"location":"criptomonedas/brevehistoriadebitcoin/#breve-historia-de-bitcoin-transacciones-bloques-hashes-y-recompensas","text":"4 octubre, 2021 Bitcoin es un conjunto de tecnolog\u00edas, as\u00ed como el nombre de la moneda, basados en la tecnolog\u00eda blockchain. Bitcoin se basa en un libro de cuentas distribuido entre m\u00faltiples nodos repartidos por Internet, en forma de una cadena de bloques llamada Blockchain .Los nodos comparten informaci\u00f3n y crean bloques, manteniendo toda la estructura de bitcoin.","title":"Breve historia de Bitcoin. Transacciones, bloques, hashes y recompensas"},{"location":"criptomonedas/brevehistoriadebitcoin/#los-bitcoin","text":"La moneda se llama bitcoin. Existen unidades m\u00e1s peque\u00f1as que un bitcoin Las monedas se van creando poco a poco. Cada vez que se crea un bloque se generan bitcoin Actualmente cada 10 minutos se crean 6.25 bitcoin, que se ingresan en la cuenta del minero que crea el bloque correcto En 2140 se estima que se habr\u00e1n creado todos los bitcoin El m\u00e1ximo de monedas que habr\u00e1 ser\u00e1n 21.000.000 de bitcoin. Ni m\u00e1s ni menos. Un satoshi es equivalente a 0.00000001 bitcoins Podemos comprar bitcoin con nuestro dinero, y venderlo a cambio de dinero. La cantidad de euros a que equivale el bitcoin cambia con el tiempo. Los bitcoin no existen, solo existen como anotaciones en el libro de cuentas Las personas que minan un bloque con \u00e9xito, se \u00abautotransfieren\u00bb una cantidad fija de la nada Las cuentas Cada persona crea al menos una cuenta, identificada con un c\u00f3digo Esta cuenta est\u00e1 protegida con claves criptogr\u00e1ficas \u00fanicas, que solo tiene el due\u00f1o En ning\u00fan momento se asocia esta cuenta con unos datos reales Si se pierden las claves, se pierde el acceso a la cuenta y, por tanto, el acceso al dinero Estas cuentas se guardan en billeteras o wallets. Estas no contienen dinero alguno, solo las claves. Podemos tener claves de varias criptomonedas en una misma billetera. Las transacciones Cada cuenta tiene una direcci\u00f3n p\u00fablica, aunque no se asocia a una persona p\u00fablicamente. El dinero se mueve de una cuenta a otra mediante transacciones Las transacciones son movimientos de dinero entre varias cuentas. Las transacciones son p\u00fablicas, y cualquiera puede verlas Deben ser confirmadas para que tengan efecto. Al hacer una transacci\u00f3n, parte del dinero pagado se descuenta para luego repartirse como recompensa (como una - comisi\u00f3n)","title":"Los bitcoin"},{"location":"criptomonedas/brevehistoriadebitcoin/#los-bloques","text":"Cuando se tiene un conjunto de transacciones, se crea con ellas un bloque con ellas Los mineros compiten por crear un bloque v\u00e1lido. Cada diez minutos de media se crea un bloque v\u00e1lido Una vez se crea un bloque v\u00e1lido, se agrega a la cadena de bloques existente. El 3 de enero de 2009 se crea el primer bloque. Los bloques tienen un n\u00famero que los identifica. El bloque original es el bloque 0. En este bloque, la primera transacci\u00f3n es una cantidad de bitcoins creados nuevos a su cuenta Si su bloque sale adelante, las transferencias de dentro se confirman, y se lleva la recompensa. Las recompensas van disminuyendo cada 4 a\u00f1os (50,25, 12.5, 6.25, etc). A d\u00eda de hoy (octubre de 2021) existen alrededor de 700.000 bloques creados","title":"Los bloques"},{"location":"criptomonedas/brevehistoriadebitcoin/#la-cadena-blockchain","text":"Los bloques se apilan uno encima del otro, formando una pila. Cada bloque que se apila est\u00e1 formado a partir del anterior, con parte de su informaci\u00f3n Esta cadena de bloques se llama blockchain Toda esta informaci\u00f3n, que ocupa actualmente 400 GB, se guarda en m\u00faltiples ordenadores Estos ordenadores se llaman nodos, y se van intercambiando la informaci\u00f3n Bitcoin existe mientras todos estos nodos guardan copias de la informaci\u00f3n Las recompensas El sistema se sostiene gracias a recompensas. Las transacciones y los bloques dan recompensas. Los mineros dedican potencia de ordenadores a crear bloques, a cambio de la posibilidad de ganar dinero Para este minado se necesita cada vez m\u00e1s potencia de computaci\u00f3n","title":"La cadena blockchain"},{"location":"criptomonedas/brevehistoriadebitcoin/#los-hashes","text":"El sistema intenta que los bloques se vayan creando regularmente cada 10 minutos de media Para ello, pone un reto de dificultad que tarde un tiempo en poder resolverse Este reto consiste en crear un c\u00f3digo utilizando criptograf\u00eda llamado hash Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta allar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido.","title":"Los hashes"},{"location":"criptomonedas/cripotomonedas/","text":"Criptomonedas \u00bfConoc\u00e9is a alguien que tenga bitcoin u otro tipo de criptomoneda? \u00bfQu\u00e9 pens\u00e1is que es una criptomoneda? Bitcoin es a la vez el nombre de una red de ordenadores y el nombre de la moneda digital o criptomoneda Existen much\u00edsimas criptomonedas, cada una con una forma de funcionar ligeramente diferente Cualquiera puede crear una criptomoneda \u00bfPor qu\u00e9 se han vuelto tan populares? Sistema financiero actual Bancos centrales y Gobiernos controlan cantidad de monedas en el mercado Las transferencias se realizan a trav\u00e9s de bancos Sistema monetario protegido y respaldado \u00bfPor qu\u00e9 se inventan las criptomonedas? Busca ofrecer un sistema de dinero digital entre ordenadores (P2P) Eliminar a los intermediarios del comercio online El sistema est\u00e1 formado por muchos ordenadores en todo el mundo Estos ordenadores se conectan entre ellos a trav\u00e9s de internet Comparten la informaci\u00f3n de las transacciones entre ellos \u00bfQu\u00e9 hacen los ordenadores que est\u00e1n en esta red? Los ordenadores crean las monedas peri\u00f3dicamente Comparten entre ellos toda la informaci\u00f3n Si un ordenador se apaga, el resto siguen funcionando Nodos de bitcoin \u00bfC\u00f3mo hacer que sea seguro? La red de Bitcoin est\u00e1 \"garantizada\" por algoritmos criptogr\u00e1ficos Cada cuenta tiene asociadas unas claves que solo tiene el propietario de la cuenta Los ordenadores verifican y protegen la red A cambio, estos ordenadores reciben recompensas en forma de criptomoneda Si se pierden las claves, se pierde el acceso al dinero Criptomonedas El control de esta moneda no depende de bancos, entidades o gobiernos Las transferencias se realizan entre ordenadores directamente Estos ordenadores guardan la informaci\u00f3n financiera Criptomonedas. Han existido desde 1980. Los primeros, Digicash y Ecash Fallaron porque no proporcionaron una soluci\u00f3n al problema del \"doble gasto\" Bitcoin (2009) resuelve el problema A partir de entonces, aparecen muchas m\u00e1s criptomonedas. \u00bfDe qu\u00e9 depende el valor de una criptomoneda? El valor de la moneda depende de la oferta y la demanda \u00bfQu\u00e9 beneficio aportan las criptomonedas? Reduce el coste de transacci\u00f3n Reduce tiempo de transacci\u00f3n Elimina la necesidad de agentes financieros \u00bfQu\u00e9 problemas generan las criptomonedas? Falta de control y legislaci\u00f3n Alta especulaci\u00f3n Sistema en desarrollo Dificultad de operar con criptomonedas en el mundo real Bitcoin. La criptomoneda m\u00e1s popular \u00bfCual es el origen? - Bitcoin es un conjunto de tecnolog\u00edas, as\u00ed como el nombre de la moneda - El sistema es de c\u00f3digo abierto - Desde 2009. Creado Satoshi Nakamoto (individuo/grupo an\u00f3nimo) Funcionamiento Se basan en la tecnolog\u00eda blockchain La informaci\u00f3n econ\u00f3mica se guarda en un libro de cuentas Este libro se distribuye entre m\u00faltiples nodos repartidos por Internet El libro se divide en bloques Los bloques se une entre ellos formando una cadena (Blockchain) \u00bfQui\u00e9n controla el sistema? Bitcoin lo controlan todos los usuarios de Bitcoin del mundo. Los programadores mejoran el software No pueden forzar un cambio en el protocolo de Bitcoin Usuarios son libres de elegir el software y la versi\u00f3n que quieran. Para que sigan siendo compatibles entre s\u00ed, todos los usuarios necesitan utilizar software que cumpla con las mismas reglas. Bitcoin. Explicaci\u00f3n t\u00e9cnica Libro de contabilidad (ledger) El libro de contabilidad es p\u00fablico Contiene la historia de todas las transacciones de bitcoin desde 2009 Los nodos comparten informaci\u00f3n y crean bloques, manteniendo toda la estructura de bitcoin La red comienza a funcionar el 3 de Enero de 2009, con el bloque g\u00e9nesis https://academy.bit2me.com/que-es-bloque-genesis/ La cadena blockchain Este libro est\u00e1 formado por bloques Cada bloque contiene un conjunto de transacciones Cada 10 minutos de media se crea un bloque nuevo Este bloque, si se confirma, se a\u00f1ade al libro (cadena) Cada bloque contiene una referencia al bloque anterior Se puede rastrear cada transacci\u00f3n desde 2009 D\u00f3nde se guarda todo esto Este libro se guarda en muchos ordenadores Estos PC que tienen un software ejecut\u00e1ndose Los PC que son nodos completos tienen la cadena de bloques completa (400 GB) Si un ordenador est\u00e1 apagado, cuando se reinicie, enviar\u00e1 un mensaje para obtener los bloques creados cuando la computadora estaba inactiva. Tama\u00f1o actual de blockchain es de 400 GB C\u00f3mo se lleva la contabilidad Por lo general, pensamos que una transacci\u00f3n tiene un d\u00e9bito y un cr\u00e9dito (contabilidad de doble entrada) Con Bitcoin, hay una tercera entrada. Cada transacci\u00f3n va a un dep\u00f3sito de conocimiento com\u00fan. Este repositorio o libro mayor p\u00fablico es altamente seguro y lo mantienen todos en la red. El libro p\u00fablico es la \u00faltima palabra, por lo que no puede haber desacuerdo sobre los d\u00e9bitos y cr\u00e9ditos y no puede haber \"gastos dobles\". El libro mayor p\u00fablico se llama \"cadena de bloques\" Seguridad. Clave p\u00fablica y privada La creaci\u00f3n de una \"cuenta bancaria\" en la red global de Bitcoin genera una contrase\u00f1a extremadamente larga, tambi\u00e9n conocida como \"clave privada\". Esta es imposible de adivinar para nadie m\u00e1s. Cualquiera, en cualquier lugar con acceso a Internet, puede recibir, enviar y mantener Bitcoin utilizando la versi\u00f3n p\u00fablica de su clave. Se puede compartir libremente para recibir fondos de forma segura Bitcoin \u00bfD\u00f3nde est\u00e1n mis bitcoin? \u00bfCu\u00e1ntos bitcoin hay? \u00bfC\u00f3mo se crean? \u00bfCu\u00e1ntos bitcoin se obtienen por crear un bloque? Las monedas se van creando poco a poco. Cada vez que se crea un bloque se generan bitcoin Actualmente cada 10 minutos se crean 6.25 bitcoin Se ingresan en la cuenta del minero que crea el bloque correcto \u00bfCu\u00e1ntos bitcoin existen? La producci\u00f3n se ralentiza con el tiempo La cantidad de nuevas monedas se divide por la mitad cada 4 a\u00f1os En 2140 se estima que se habr\u00e1n creado todos los bitcoin El m\u00e1ximo de monedas que habr\u00e1 ser\u00e1n 21.000.000 de bitcoin . Ni m\u00e1s ni menos. Cuentas bancarias No existe una cuenta tradicional, como una cuenta bancaria donde el banco puede consultar su saldo En un banco tradicional creamos una cuenta bancaria Con ese n\u00famero podemos realizar pagos y recibir dinero. Esta cuenta a nuestro nombre, vinculada a nuestro DNI. El banco guarda la informaci\u00f3n sobre la cuenta, as\u00ed como las operaciones que se han realizado Cuenta en bitcoin Cada persona crea al menos una direcci\u00f3n. Una direcci\u00f3n de Bitcoin es un identificador de 33 caracteres que representa una cuenta de Bitcoin. Las direcciones se generan usando una clave privada, que es un n\u00famero aleatorio de 32 bytes. Cada direcci\u00f3n de bitcoin tiene un par de claves p\u00fablica y privada Las claves se guardan en una monedero digital (wallet software) El monedero se guarda en un programa, app o web Se accede a \u00e9l con una cuenta de usuario. Para almacenar bitcoin, necesitamos unas claves Estas claves, se guardan en un monedero ( wallet ) Este monedero puede guardarse en smartphone, PC o USB Nosotros no guardamos dinero, sino las claves para acceder a \u00e9l https://bitcoin.org/es/elige-tu-monedero?step=1 Algunos problemas En ning\u00fan momento se asocia esta cuenta con unos datos reales Si se pierden las claves, se pierde el acceso a la cuenta y, por tanto, el acceso al dinero Monederos (wallets) Del mismo modo que podemos tener varias monedas distintas en una cartera Podemos tener claves de varias criptomonedas en un misma billetera. Transacciones C\u00f3mo se intercambian criptomonedas Transacciones Cada cuenta tiene una direcci\u00f3n p\u00fablica La cuenta no se asocia a una persona p\u00fablicamente. Las transacciones son movimientos de dinero entre varias cuentas. El dinero se mueve de una cuenta a otra mediante transacciones Las transacciones son p\u00fablicas, y cualquiera puede verlas Deben ser confirmadas para que tengan efecto. Parte del dinero pagado se descuenta para luego repartirse como recompensa (como una comisi\u00f3n) Validaci\u00f3n de transacciones Cada vez que alguien quiere enviar bitcoin a otra cuenta, la transacci\u00f3n es validada por la red: Asegurarse de que la persona tenga los bitcoins para transferir Si la persona tiene los bitcoins, se agregan al libro Para asegurar el libro mayor, los mineros lo sellan detr\u00e1s de un c\u00f3digo computacional No puede haber doble gasto ni falsificaci\u00f3n. \u00bfC\u00f3mo traspasar dinero? Cualquiera puede enviar a una direcci\u00f3n p\u00fablica El m\u00e9todo m\u00e1s f\u00e1cil es crear un QR, que incluye la direcci\u00f3n y la cantidad Los pagos son irreversibles Los pagos tardan un tiempo en hacerse efectivos Se paga una comisi\u00f3n a cambio Bitcoin wallet Monederos de escritorio: Los monederos de escritorio se instalan en una computadora port\u00e1til o de escritorio y le dan al usuario el control completo del monedero. Solo son accesibles desde la computadora individual en la que se descargan. Los monederos de escritorio ofrecen uno de los niveles de seguridad m\u00e1s altos, pero si su computadora es pirateada o obtiene un virus, es posible que pierda todos sus fondos. Monederos en l\u00ednea: Los monederos en l\u00ednea son sitios web o aplicaciones que le permiten usar su servicio para almacenar sus monedas. Si bien son m\u00e1s convenientes de usar, se almacenan de forma remota y, por lo tanto, la seguridad no est\u00e1 completamente en sus manos. Monederos m\u00f3viles: Los monederos m\u00f3viles son aplicaciones que puedes descargar en tu tel\u00e9fono. Los monederos m\u00f3viles te permiten llevar tus monedas a donde quiera que vayas y tambi\u00e9n te permiten gastar tus monedas en tiendas y establecimientos reales. Monederos de hardware: Los monederos de hardware son dispositivos f\u00edsicos que parecen unidades USB. Almacenan tus monedas sin conexi\u00f3n y lejos de amenazas potenciales y tambi\u00e9n te permiten gastar tus monedas en tiendas y establecimientos reales. \u00bfPodemos comprar bitcoin? Puedes comprar bitcoin a trav\u00e9s de exchanges online o a trav\u00e9s de plataformas de peer-to-peer. Los exchanges en l\u00ednea funcionan de manera similar a las bolsas de valores tradicionales, donde compras y vendes bitcoin a trav\u00e9s de una plataforma. La principal diferencia es que los exchanges en l\u00ednea operan 24/7, lo que te permite comprar y vender bitcoin en cualquier momento. Las plataformas de peer-to-peer , por otro lado, conectan directamente a compradores y vendedores. Esto significa que puedes comprar y vender bitcoin directamente de otras personas. Podemos comprar bitcoin con euros, y venderlo a cambio de euros El tipo de cambio var\u00eda con el tiempo. Las personas que minan un bloque con \u00e9xito (mineros), se \u201cautotransfieren\u201d una cantidad fija de la nada \u00bfExisten unidades m\u00e1s peque\u00f1as que un bitcoin? Creaci\u00f3n de un bloque \u00bfQu\u00e9 hacemos con las transacciones? Cuando se tiene un conjunto de transacciones, se crea con ellas un bloque con ellas Los mineros compiten por crear un bloque v\u00e1lido. Cada diez minutos de media se crea un bloque v\u00e1lido Una vez se crea un bloque v\u00e1lido, se agrega a la cadena de bloques existente. Recompensa al crear un bloque Si su bloque sale adelante, las transferencias de dentro se confirman, y se lleva la recompensa. Las recompensas van disminuyendo cada 4 a\u00f1os (50,25, 12.5, 6.25, etc). A d\u00eda de hoy (octubre de 2021) existen alrededor de 700.000 bloques creados Identificaci\u00f3n de bloques El 3 de enero de 2009 se crea el primer bloque. Los bloques tienen un n\u00famero que los identifica. El bloque original es el bloque 0. En este bloque, la primera transacci\u00f3n es una cantidad de bitcoins creados nuevos a su cuenta. Cadena de bloques (blockchain) Los bloques se colocan uno encima del otro, formando una pila. Cada bloque nuevo est\u00e1 formado a partir de informaci\u00f3n del anterior Esta cadena de bloques se llama blockchain Toda esta informaci\u00f3n, que ocupa actualmente 400GB, se guarda en m\u00faltiples ordenadores Estos ordenadores se llaman nodos, y se van intercambiando la informaci\u00f3n Bitcoin existe mientras todos estos nodos guardan copias de la informaci\u00f3n Miner\u00eda El minado es una validaci\u00f3n de las transacciones. Por este esfuerzo, los mineros obtienen dinero como recompensa. Esta recompensa disminuye las tarifas, creando un incentivo complementario para contribuir al poder de procesamiento de la red. Progreso de la miner\u00eda Creaci\u00f3n m\u00e1quinas especializadas como FPGAs y ASICs. Carrera por construir m\u00e1quinas m\u00e1s baratas y eficientes Incremento en el n\u00famero de mineros aumenta complejidad de la generaci\u00f3n de hashes Mineros invierten grandes cantidades de dinero en m\u00e1quinas especializadas. Recompensas El sistema se sostiene gracias a recompensas. Las transacciones y los bloques dan recompensas. Los mineros dedican potencia de ordenadores a crear bloques a cambio de la posibilidad de ganar dinero Para este minado se necesita cada vez m\u00e1s potencia de computaci\u00f3n El reto El sistema intenta que los bloques se vayan creando regularmente cada 10 minutos de media Para ello, pone un reto de dificultad que tarde un tiempo en poder resolverse Este reto consiste en crear un c\u00f3digo utilizando criptograf\u00eda llamado hash Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta hallar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido. Crear el hash Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta hallar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido. Videos interesantes http://www.youtube.com/watch?v=44D9nVxqGIE http://www.youtube.com/watch?v=YBNr69vrscw","title":"Criptomonedas"},{"location":"criptomonedas/cripotomonedas/#criptomonedas","text":"\u00bfConoc\u00e9is a alguien que tenga bitcoin u otro tipo de criptomoneda? \u00bfQu\u00e9 pens\u00e1is que es una criptomoneda? Bitcoin es a la vez el nombre de una red de ordenadores y el nombre de la moneda digital o criptomoneda Existen much\u00edsimas criptomonedas, cada una con una forma de funcionar ligeramente diferente Cualquiera puede crear una criptomoneda \u00bfPor qu\u00e9 se han vuelto tan populares?","title":"Criptomonedas"},{"location":"criptomonedas/cripotomonedas/#sistema-financiero-actual","text":"Bancos centrales y Gobiernos controlan cantidad de monedas en el mercado Las transferencias se realizan a trav\u00e9s de bancos Sistema monetario protegido y respaldado","title":"Sistema financiero actual"},{"location":"criptomonedas/cripotomonedas/#por-que-se-inventan-las-criptomonedas","text":"Busca ofrecer un sistema de dinero digital entre ordenadores (P2P) Eliminar a los intermediarios del comercio online El sistema est\u00e1 formado por muchos ordenadores en todo el mundo Estos ordenadores se conectan entre ellos a trav\u00e9s de internet Comparten la informaci\u00f3n de las transacciones entre ellos","title":"\u00bfPor qu\u00e9 se inventan las criptomonedas?"},{"location":"criptomonedas/cripotomonedas/#que-hacen-los-ordenadores-que-estan-en-esta-red","text":"Los ordenadores crean las monedas peri\u00f3dicamente Comparten entre ellos toda la informaci\u00f3n Si un ordenador se apaga, el resto siguen funcionando","title":"\u00bfQu\u00e9 hacen los ordenadores que est\u00e1n en esta red?"},{"location":"criptomonedas/cripotomonedas/#nodos-de-bitcoin","text":"","title":"Nodos de bitcoin"},{"location":"criptomonedas/cripotomonedas/#como-hacer-que-sea-seguro","text":"La red de Bitcoin est\u00e1 \"garantizada\" por algoritmos criptogr\u00e1ficos Cada cuenta tiene asociadas unas claves que solo tiene el propietario de la cuenta Los ordenadores verifican y protegen la red A cambio, estos ordenadores reciben recompensas en forma de criptomoneda Si se pierden las claves, se pierde el acceso al dinero","title":"\u00bfC\u00f3mo hacer que sea seguro?"},{"location":"criptomonedas/cripotomonedas/#criptomonedas_1","text":"El control de esta moneda no depende de bancos, entidades o gobiernos Las transferencias se realizan entre ordenadores directamente Estos ordenadores guardan la informaci\u00f3n financiera Criptomonedas. Han existido desde 1980. Los primeros, Digicash y Ecash Fallaron porque no proporcionaron una soluci\u00f3n al problema del \"doble gasto\" Bitcoin (2009) resuelve el problema A partir de entonces, aparecen muchas m\u00e1s criptomonedas. \u00bfDe qu\u00e9 depende el valor de una criptomoneda? El valor de la moneda depende de la oferta y la demanda","title":"Criptomonedas"},{"location":"criptomonedas/cripotomonedas/#que-beneficio-aportan-las-criptomonedas","text":"Reduce el coste de transacci\u00f3n Reduce tiempo de transacci\u00f3n Elimina la necesidad de agentes financieros","title":"\u00bfQu\u00e9 beneficio aportan las criptomonedas?"},{"location":"criptomonedas/cripotomonedas/#que-problemas-generan-las-criptomonedas","text":"Falta de control y legislaci\u00f3n Alta especulaci\u00f3n Sistema en desarrollo Dificultad de operar con criptomonedas en el mundo real","title":"\u00bfQu\u00e9 problemas generan las criptomonedas?"},{"location":"criptomonedas/cripotomonedas/#bitcoin-la-criptomoneda-mas-popular","text":"\u00bfCual es el origen? - Bitcoin es un conjunto de tecnolog\u00edas, as\u00ed como el nombre de la moneda - El sistema es de c\u00f3digo abierto - Desde 2009. Creado Satoshi Nakamoto (individuo/grupo an\u00f3nimo)","title":"Bitcoin. La criptomoneda m\u00e1s popular"},{"location":"criptomonedas/cripotomonedas/#funcionamiento","text":"Se basan en la tecnolog\u00eda blockchain La informaci\u00f3n econ\u00f3mica se guarda en un libro de cuentas Este libro se distribuye entre m\u00faltiples nodos repartidos por Internet El libro se divide en bloques Los bloques se une entre ellos formando una cadena (Blockchain)","title":"Funcionamiento"},{"location":"criptomonedas/cripotomonedas/#quien-controla-el-sistema","text":"Bitcoin lo controlan todos los usuarios de Bitcoin del mundo. Los programadores mejoran el software No pueden forzar un cambio en el protocolo de Bitcoin Usuarios son libres de elegir el software y la versi\u00f3n que quieran. Para que sigan siendo compatibles entre s\u00ed, todos los usuarios necesitan utilizar software que cumpla con las mismas reglas.","title":"\u00bfQui\u00e9n controla el sistema?"},{"location":"criptomonedas/cripotomonedas/#bitcoin-explicacion-tecnica","text":"Libro de contabilidad (ledger) El libro de contabilidad es p\u00fablico Contiene la historia de todas las transacciones de bitcoin desde 2009 Los nodos comparten informaci\u00f3n y crean bloques, manteniendo toda la estructura de bitcoin La red comienza a funcionar el 3 de Enero de 2009, con el bloque g\u00e9nesis https://academy.bit2me.com/que-es-bloque-genesis/","title":"Bitcoin. Explicaci\u00f3n t\u00e9cnica"},{"location":"criptomonedas/cripotomonedas/#la-cadena-blockchain","text":"Este libro est\u00e1 formado por bloques Cada bloque contiene un conjunto de transacciones Cada 10 minutos de media se crea un bloque nuevo Este bloque, si se confirma, se a\u00f1ade al libro (cadena) Cada bloque contiene una referencia al bloque anterior Se puede rastrear cada transacci\u00f3n desde 2009","title":"La cadena blockchain"},{"location":"criptomonedas/cripotomonedas/#donde-se-guarda-todo-esto","text":"Este libro se guarda en muchos ordenadores Estos PC que tienen un software ejecut\u00e1ndose Los PC que son nodos completos tienen la cadena de bloques completa (400 GB) Si un ordenador est\u00e1 apagado, cuando se reinicie, enviar\u00e1 un mensaje para obtener los bloques creados cuando la computadora estaba inactiva. Tama\u00f1o actual de blockchain es de 400 GB","title":"D\u00f3nde se guarda todo esto"},{"location":"criptomonedas/cripotomonedas/#como-se-lleva-la-contabilidad","text":"Por lo general, pensamos que una transacci\u00f3n tiene un d\u00e9bito y un cr\u00e9dito (contabilidad de doble entrada) Con Bitcoin, hay una tercera entrada. Cada transacci\u00f3n va a un dep\u00f3sito de conocimiento com\u00fan. Este repositorio o libro mayor p\u00fablico es altamente seguro y lo mantienen todos en la red. El libro p\u00fablico es la \u00faltima palabra, por lo que no puede haber desacuerdo sobre los d\u00e9bitos y cr\u00e9ditos y no puede haber \"gastos dobles\". El libro mayor p\u00fablico se llama \"cadena de bloques\"","title":"C\u00f3mo se lleva la contabilidad"},{"location":"criptomonedas/cripotomonedas/#seguridad-clave-publica-y-privada","text":"La creaci\u00f3n de una \"cuenta bancaria\" en la red global de Bitcoin genera una contrase\u00f1a extremadamente larga, tambi\u00e9n conocida como \"clave privada\". Esta es imposible de adivinar para nadie m\u00e1s. Cualquiera, en cualquier lugar con acceso a Internet, puede recibir, enviar y mantener Bitcoin utilizando la versi\u00f3n p\u00fablica de su clave. Se puede compartir libremente para recibir fondos de forma segura","title":"Seguridad. Clave p\u00fablica y privada"},{"location":"criptomonedas/cripotomonedas/#bitcoin","text":"\u00bfD\u00f3nde est\u00e1n mis bitcoin? \u00bfCu\u00e1ntos bitcoin hay? \u00bfC\u00f3mo se crean?","title":"Bitcoin"},{"location":"criptomonedas/cripotomonedas/#cuantos-bitcoin-se-obtienen-por-crear-un-bloque","text":"Las monedas se van creando poco a poco. Cada vez que se crea un bloque se generan bitcoin Actualmente cada 10 minutos se crean 6.25 bitcoin Se ingresan en la cuenta del minero que crea el bloque correcto","title":"\u00bfCu\u00e1ntos bitcoin se obtienen por crear un bloque?"},{"location":"criptomonedas/cripotomonedas/#cuantos-bitcoin-existen","text":"La producci\u00f3n se ralentiza con el tiempo La cantidad de nuevas monedas se divide por la mitad cada 4 a\u00f1os En 2140 se estima que se habr\u00e1n creado todos los bitcoin El m\u00e1ximo de monedas que habr\u00e1 ser\u00e1n 21.000.000 de bitcoin . Ni m\u00e1s ni menos.","title":"\u00bfCu\u00e1ntos bitcoin existen?"},{"location":"criptomonedas/cripotomonedas/#cuentas-bancarias","text":"No existe una cuenta tradicional, como una cuenta bancaria donde el banco puede consultar su saldo En un banco tradicional creamos una cuenta bancaria Con ese n\u00famero podemos realizar pagos y recibir dinero. Esta cuenta a nuestro nombre, vinculada a nuestro DNI. El banco guarda la informaci\u00f3n sobre la cuenta, as\u00ed como las operaciones que se han realizado","title":"Cuentas bancarias"},{"location":"criptomonedas/cripotomonedas/#cuenta-en-bitcoin","text":"Cada persona crea al menos una direcci\u00f3n. Una direcci\u00f3n de Bitcoin es un identificador de 33 caracteres que representa una cuenta de Bitcoin. Las direcciones se generan usando una clave privada, que es un n\u00famero aleatorio de 32 bytes. Cada direcci\u00f3n de bitcoin tiene un par de claves p\u00fablica y privada Las claves se guardan en una monedero digital (wallet software) El monedero se guarda en un programa, app o web Se accede a \u00e9l con una cuenta de usuario. Para almacenar bitcoin, necesitamos unas claves Estas claves, se guardan en un monedero ( wallet ) Este monedero puede guardarse en smartphone, PC o USB Nosotros no guardamos dinero, sino las claves para acceder a \u00e9l https://bitcoin.org/es/elige-tu-monedero?step=1","title":"Cuenta en bitcoin"},{"location":"criptomonedas/cripotomonedas/#algunos-problemas","text":"En ning\u00fan momento se asocia esta cuenta con unos datos reales Si se pierden las claves, se pierde el acceso a la cuenta y, por tanto, el acceso al dinero","title":"Algunos problemas"},{"location":"criptomonedas/cripotomonedas/#monederos-wallets","text":"Del mismo modo que podemos tener varias monedas distintas en una cartera Podemos tener claves de varias criptomonedas en un misma billetera.","title":"Monederos (wallets)"},{"location":"criptomonedas/cripotomonedas/#transacciones","text":"C\u00f3mo se intercambian criptomonedas","title":"Transacciones"},{"location":"criptomonedas/cripotomonedas/#transacciones_1","text":"Cada cuenta tiene una direcci\u00f3n p\u00fablica La cuenta no se asocia a una persona p\u00fablicamente. Las transacciones son movimientos de dinero entre varias cuentas. El dinero se mueve de una cuenta a otra mediante transacciones Las transacciones son p\u00fablicas, y cualquiera puede verlas Deben ser confirmadas para que tengan efecto. Parte del dinero pagado se descuenta para luego repartirse como recompensa (como una comisi\u00f3n)","title":"Transacciones"},{"location":"criptomonedas/cripotomonedas/#validacion-de-transacciones","text":"Cada vez que alguien quiere enviar bitcoin a otra cuenta, la transacci\u00f3n es validada por la red: Asegurarse de que la persona tenga los bitcoins para transferir Si la persona tiene los bitcoins, se agregan al libro Para asegurar el libro mayor, los mineros lo sellan detr\u00e1s de un c\u00f3digo computacional No puede haber doble gasto ni falsificaci\u00f3n.","title":"Validaci\u00f3n de transacciones"},{"location":"criptomonedas/cripotomonedas/#como-traspasar-dinero","text":"Cualquiera puede enviar a una direcci\u00f3n p\u00fablica El m\u00e9todo m\u00e1s f\u00e1cil es crear un QR, que incluye la direcci\u00f3n y la cantidad Los pagos son irreversibles Los pagos tardan un tiempo en hacerse efectivos Se paga una comisi\u00f3n a cambio","title":"\u00bfC\u00f3mo traspasar dinero?"},{"location":"criptomonedas/cripotomonedas/#bitcoin-wallet","text":"Monederos de escritorio: Los monederos de escritorio se instalan en una computadora port\u00e1til o de escritorio y le dan al usuario el control completo del monedero. Solo son accesibles desde la computadora individual en la que se descargan. Los monederos de escritorio ofrecen uno de los niveles de seguridad m\u00e1s altos, pero si su computadora es pirateada o obtiene un virus, es posible que pierda todos sus fondos. Monederos en l\u00ednea: Los monederos en l\u00ednea son sitios web o aplicaciones que le permiten usar su servicio para almacenar sus monedas. Si bien son m\u00e1s convenientes de usar, se almacenan de forma remota y, por lo tanto, la seguridad no est\u00e1 completamente en sus manos. Monederos m\u00f3viles: Los monederos m\u00f3viles son aplicaciones que puedes descargar en tu tel\u00e9fono. Los monederos m\u00f3viles te permiten llevar tus monedas a donde quiera que vayas y tambi\u00e9n te permiten gastar tus monedas en tiendas y establecimientos reales. Monederos de hardware: Los monederos de hardware son dispositivos f\u00edsicos que parecen unidades USB. Almacenan tus monedas sin conexi\u00f3n y lejos de amenazas potenciales y tambi\u00e9n te permiten gastar tus monedas en tiendas y establecimientos reales.","title":"Bitcoin wallet"},{"location":"criptomonedas/cripotomonedas/#podemos-comprar-bitcoin","text":"Puedes comprar bitcoin a trav\u00e9s de exchanges online o a trav\u00e9s de plataformas de peer-to-peer. Los exchanges en l\u00ednea funcionan de manera similar a las bolsas de valores tradicionales, donde compras y vendes bitcoin a trav\u00e9s de una plataforma. La principal diferencia es que los exchanges en l\u00ednea operan 24/7, lo que te permite comprar y vender bitcoin en cualquier momento. Las plataformas de peer-to-peer , por otro lado, conectan directamente a compradores y vendedores. Esto significa que puedes comprar y vender bitcoin directamente de otras personas. Podemos comprar bitcoin con euros, y venderlo a cambio de euros El tipo de cambio var\u00eda con el tiempo. Las personas que minan un bloque con \u00e9xito (mineros), se \u201cautotransfieren\u201d una cantidad fija de la nada \u00bfExisten unidades m\u00e1s peque\u00f1as que un bitcoin?","title":"\u00bfPodemos comprar bitcoin?"},{"location":"criptomonedas/cripotomonedas/#creacion-de-un-bloque","text":"\u00bfQu\u00e9 hacemos con las transacciones? Cuando se tiene un conjunto de transacciones, se crea con ellas un bloque con ellas Los mineros compiten por crear un bloque v\u00e1lido. Cada diez minutos de media se crea un bloque v\u00e1lido Una vez se crea un bloque v\u00e1lido, se agrega a la cadena de bloques existente.","title":"Creaci\u00f3n de un bloque"},{"location":"criptomonedas/cripotomonedas/#recompensa-al-crear-un-bloque","text":"Si su bloque sale adelante, las transferencias de dentro se confirman, y se lleva la recompensa. Las recompensas van disminuyendo cada 4 a\u00f1os (50,25, 12.5, 6.25, etc). A d\u00eda de hoy (octubre de 2021) existen alrededor de 700.000 bloques creados","title":"Recompensa al crear un bloque"},{"location":"criptomonedas/cripotomonedas/#identificacion-de-bloques","text":"El 3 de enero de 2009 se crea el primer bloque. Los bloques tienen un n\u00famero que los identifica. El bloque original es el bloque 0. En este bloque, la primera transacci\u00f3n es una cantidad de bitcoins creados nuevos a su cuenta. Cadena de bloques (blockchain) Los bloques se colocan uno encima del otro, formando una pila. Cada bloque nuevo est\u00e1 formado a partir de informaci\u00f3n del anterior Esta cadena de bloques se llama blockchain Toda esta informaci\u00f3n, que ocupa actualmente 400GB, se guarda en m\u00faltiples ordenadores Estos ordenadores se llaman nodos, y se van intercambiando la informaci\u00f3n Bitcoin existe mientras todos estos nodos guardan copias de la informaci\u00f3n","title":"Identificaci\u00f3n de bloques"},{"location":"criptomonedas/cripotomonedas/#mineria","text":"El minado es una validaci\u00f3n de las transacciones. Por este esfuerzo, los mineros obtienen dinero como recompensa. Esta recompensa disminuye las tarifas, creando un incentivo complementario para contribuir al poder de procesamiento de la red.","title":"Miner\u00eda"},{"location":"criptomonedas/cripotomonedas/#progreso-de-la-mineria","text":"Creaci\u00f3n m\u00e1quinas especializadas como FPGAs y ASICs. Carrera por construir m\u00e1quinas m\u00e1s baratas y eficientes Incremento en el n\u00famero de mineros aumenta complejidad de la generaci\u00f3n de hashes Mineros invierten grandes cantidades de dinero en m\u00e1quinas especializadas.","title":"Progreso de la miner\u00eda"},{"location":"criptomonedas/cripotomonedas/#recompensas","text":"El sistema se sostiene gracias a recompensas. Las transacciones y los bloques dan recompensas. Los mineros dedican potencia de ordenadores a crear bloques a cambio de la posibilidad de ganar dinero Para este minado se necesita cada vez m\u00e1s potencia de computaci\u00f3n","title":"Recompensas"},{"location":"criptomonedas/cripotomonedas/#el-reto","text":"El sistema intenta que los bloques se vayan creando regularmente cada 10 minutos de media Para ello, pone un reto de dificultad que tarde un tiempo en poder resolverse Este reto consiste en crear un c\u00f3digo utilizando criptograf\u00eda llamado hash Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta hallar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido.","title":"El reto"},{"location":"criptomonedas/cripotomonedas/#crear-el-hash","text":"Este hash se genera a partir de informaci\u00f3n del bloque actual, y del anterior Cada hash identifica un bloque, y se calcula con el hash del bloque anterior. Crear un c\u00f3digo hash requiere muy poco tiempo Para complicar la tarea, se pone una condici\u00f3n que el hash debe cumplir Se tienen que hacer muchas pruebas hasta hallar un hash v\u00e1lido Este c\u00e1lculo es m\u00e1s r\u00e1pido a medida que la potencia de los ordenadores aumenta Por ello, la dificultad se va ajustando poniendo una condici\u00f3n m\u00e1s estricta El nonce es el par\u00e1metro que hay que variar hasta conseguir un hash v\u00e1lido. Videos interesantes http://www.youtube.com/watch?v=44D9nVxqGIE http://www.youtube.com/watch?v=YBNr69vrscw","title":"Crear el hash"},{"location":"criptomonedas/nft/","text":"NFT \u00bfQu\u00e9 pasar\u00eda si pudi\u00e9ramos crear activos digitales similares a Bitcoin, pero a\u00f1adiendo un identificador \u00fanico en cada unidad? Esto har\u00eda que cada una fuera diferente del resto (es decir, no fungible). Esto es b\u00e1sicamente, eso es un NFT. Los NFTs no pueden ser replicados o transferidos sin el permiso del propietario Ni siquiera podr\u00e1 hacerlo el creador del NFT. Marketplaces Un mercado de NFT (marketplace) es una plataforma en la que puedes comprar y vender NFTs. Algunos de los principales mercados de NFT son OpenSea, Rarible y Nifty Gateway. Dichos mercados conectan a los compradores con los vendedores En ellos el valor de cada token es \u00fanico. NFT son propensos a los cambios de precio como respuesta a la oferta y demanda del mercado \u00bfPero c\u00f3mo es posible que algo as\u00ed tenga valor? Igual que ocurre con cualquier otro art\u00edculo preciado, el valor no es inherente al objeto en s\u00ed, sino que es asignado por la gente que lo considera valioso. El valor es una creencia compartida. No importa que se trate de dinero f\u00edat, metales preciosos o un veh\u00edculo Todas esas cosas tienen valor porque la gente cree que lo tienen. As\u00ed es como todo objeto valioso adquiere su valor, \u00bfpor qu\u00e9 iban a ser diferentes los coleccionables digitales? Se necesita una cartera (wallet) para: - Conectarla al marketplace (opensea) - Mintear un trabajo - Pagar comisiones - Recibir dinero - Hay que tener Ethereums - Hay que pagar comisiones para inciar una cuenta - Crear una colecci\u00f3n Garant\u00edas NFT no garantiza nada No garantiza la propiedad intelectual No hay garant\u00eda de copyright \u00bfQu\u00e9 hace la gente que compra NFTs? Algunos los ven como una inversi\u00f3n, ya que su valor puede aumentar con el tiempo. Hay gente que compra NFTs para utilizarlos como coleccionables, como si fueran trading cards. Otros los usan como representaciones de activos digitales, como terrenos en videojuegos o mundos virtuales. Algunos incluso los usan como obras de arte digitales.","title":"NFT"},{"location":"criptomonedas/nft/#nft","text":"\u00bfQu\u00e9 pasar\u00eda si pudi\u00e9ramos crear activos digitales similares a Bitcoin, pero a\u00f1adiendo un identificador \u00fanico en cada unidad? Esto har\u00eda que cada una fuera diferente del resto (es decir, no fungible). Esto es b\u00e1sicamente, eso es un NFT. Los NFTs no pueden ser replicados o transferidos sin el permiso del propietario Ni siquiera podr\u00e1 hacerlo el creador del NFT.","title":"NFT"},{"location":"criptomonedas/nft/#marketplaces","text":"Un mercado de NFT (marketplace) es una plataforma en la que puedes comprar y vender NFTs. Algunos de los principales mercados de NFT son OpenSea, Rarible y Nifty Gateway. Dichos mercados conectan a los compradores con los vendedores En ellos el valor de cada token es \u00fanico. NFT son propensos a los cambios de precio como respuesta a la oferta y demanda del mercado","title":"Marketplaces"},{"location":"criptomonedas/nft/#pero-como-es-posible-que-algo-asi-tenga-valor","text":"Igual que ocurre con cualquier otro art\u00edculo preciado, el valor no es inherente al objeto en s\u00ed, sino que es asignado por la gente que lo considera valioso. El valor es una creencia compartida. No importa que se trate de dinero f\u00edat, metales preciosos o un veh\u00edculo Todas esas cosas tienen valor porque la gente cree que lo tienen. As\u00ed es como todo objeto valioso adquiere su valor, \u00bfpor qu\u00e9 iban a ser diferentes los coleccionables digitales? Se necesita una cartera (wallet) para: - Conectarla al marketplace (opensea) - Mintear un trabajo - Pagar comisiones - Recibir dinero - Hay que tener Ethereums - Hay que pagar comisiones para inciar una cuenta - Crear una colecci\u00f3n","title":"\u00bfPero c\u00f3mo es posible que algo as\u00ed tenga valor?"},{"location":"criptomonedas/nft/#garantias","text":"NFT no garantiza nada No garantiza la propiedad intelectual No hay garant\u00eda de copyright","title":"Garant\u00edas"},{"location":"criptomonedas/nft/#que-hace-la-gente-que-compra-nfts","text":"Algunos los ven como una inversi\u00f3n, ya que su valor puede aumentar con el tiempo. Hay gente que compra NFTs para utilizarlos como coleccionables, como si fueran trading cards. Otros los usan como representaciones de activos digitales, como terrenos en videojuegos o mundos virtuales. Algunos incluso los usan como obras de arte digitales.","title":"\u00bfQu\u00e9 hace la gente que compra NFTs?"},{"location":"docker/docker/","text":"\u00cdndice \u00cdndice Contenedores Contenedores Windows y contenedores Linux Im\u00e1genes Aprovechamiento de las capas Docker Dockerfiles Formato de un dockerfile Ejecutar un comando Construir una imagen Definir etiqueta para una imagen Consultar im\u00e1genes Ejecutar un contenedor Docker compose Definici\u00f3n de servicios Montaje de vol\u00famenes Variables de entorno Ejemplo de docker-compose Ejecutar docker-compose Visualizar contenedores Monitorizar contenedores Eliminar contenedores Eliminar contenedores linux Eliminar contenedores Windows Eliminar contenedores y im\u00e1genes con batch Eliminar contenedores en powershell: Persistencia Dive Multi stage builds Buenas pr\u00e1cticas para construir contenedores Ventajas de dockerizar Almacenar en repositorio Construir la imagen Login en docker hub Subir imagen Descargar imagen Contenedores Los contenedores no tienen un sistema operativo dentro, el contenedor a\u00edsla el espacio de usuario. Son muy ligeros porque corren como un proceso sobre el SO del host. Los contenedores escalan en funci\u00f3n de la demanda, mientras que las MV tienen que ser aprovisionadas previamente. Contenedores Windows y contenedores Linux Los contenedores Windows corren sobre Windows y los contenedores Linux sobre Linux Se diferencian en los tipos de aislamiento que tienen ambos Los contenedores Linux: Se ejecutan sobre el host de modo que son visibles a ellos Se ejecutan sobre el kernel como un proceso visible desde el host En Hyper-V Windows lanza una MV super fina que tiene su propio kernel y por tanto los contenedores no son visibles desde el propio SO. Im\u00e1genes Una imagen es como una aplicaci\u00f3n compilada. Un contenedor es una instancia en ejecuci\u00f3n de una imagen concreta. Las im\u00e1genes se construyen sobre una tecnolog\u00eda de sistema de ficheros por capas . Para crear una imagen, generalmente se crea un archivo de texto llamado docker file formado por diferentes instrucciones . Cada l\u00ednea representa una instrucci\u00f3n, y cada vez que se ejecuta el dockerfile se ejecutan dichas instrucciones de arriba a abajo. Estos dockerfiles se almacenan como texto y se pueden compartir con facilidad, as\u00ed como almacenarse en sistemas de control de versiones. Cada instrucci\u00f3n que se ejecuta cambia ligeramente el estado del sistema de archivos respecto a la instrucci\u00f3n anterior. La diferencia entre el estado del sistema de ficheros antes y despu\u00e9s de cada instrucci\u00f3n se guarda en disco como un archivo, que conforma una capa . Cada imagen es un conjunto de capas que contienen los diferentes cambios que se van realizando sobre el sistema de archivos empaquetados. Al final del dockerfile, la \u00faltima instrucci\u00f3n define el comando que se ejecutar\u00e1 cuando arranquemos el contenedor. Al ejecutar un comando a partir de la imagen creada, se ejecuta el comando especificado y se convierte en el proceso con PID 1 dentro del \u00e1rbol virtual de procesos. El contenedor seguir\u00e1 en marcha mientras el proceso creado siga en ejecuci\u00f3n. Aprovechamiento de las capas Cada vez que se ejecuta una instrucci\u00f3n, se crea un contenedor y se etiqueta con un hash creado para obtener un nombre \u00fanico. De este modo, podemos reutilizar estas capas intermedias y solo tener que construirlas una vez. Si dos docker files comienzan por el mismo set de instrucciones desde el comienzo, todas las capas que coincidan solo existir\u00e1n en el sistema de ficheros una vez, para ambos contenedores. Para cada RUN se crea una capa, por lo que se pueden agrupar varios comandos en un solo RUN y crear una \u00fanica capa. Docker Docker permite automatizar el despliegue de aplicaciones dentro de contenedores. Veremos diferentes configuraciones de Docker que podemos hacer. Dockerfiles Permiten automatizar la construcci\u00f3n de una imagen, a trav\u00e9s de un fichero que contiene instrucciones para fabricar una imagen, a trav\u00e9s de una serie de pasos. Formato de un dockerfile Formato del Dockerfile, que se crear\u00e1 dentro de la carpeta donde tengamos el proyecto FROM ubuntu:14.04 ENTRYPOINT [\"/bin/echo\"] Ejecutar un comando Si en lugar de utilizar entrypoints queremos pasar par\u00e1metros, podemos utilizar CMD CMD [\"/bin/echo\" , \"Hi Docker !\"] Construir una imagen Construimos la imagen con el siguiente comando. Al haber un Dockerfile en la carpeta la detecta y monta la imagen a partir de las instrucciones del Dockerfile. docker build . Definir etiqueta para una imagen Al no definir repositorios ni tags, se asigna a la imagen una ID hexadecimal. Podemos especificar un nombre y una etiqueta al construir la imagen: docker build -t cookbook:hello . Consultar im\u00e1genes Consultar las im\u00e1genes disponibles en nuestra m\u00e1quina. A partir de una imagen, podemos levantar tantos contenedores como queramos. docker images Nos mostrar\u00e1: REPOSITORY TAG IMAGE ID CREATED SIZE node.js-mongodb latest 2ce837b1b0ca 11 minutes ago 111MB danimrtic/apache2 first 4223faeadc8f 2 months ago 208MB danimrprofe/apache2 first 4223faeadc8f 2 months ago 208MB danimrprofe/apache2 latest 4223faeadc8f 2 months ago 208MB ubuntu latest 20bb25d32758 3 months ago 87.5MB node 10.13-alpine 93f2dcbcddfe 4 months ago 70.3MB Ejecutar un contenedor A partir de una imagen podemos crear y ejecutar un contenedor, especificando el ID de la imagen: docker run 20bb25d32758 Docker compose Si quisiera levantar varios contenedores de diferentes im\u00e1genes, me ver\u00eda obligado a definir diferentes Dockerfiles para cada uno y levantar los contenedores uno a uno. Docker-compose es una herramienta que nos permite: Definir varios servicios en un solo archivo de configuraci\u00f3n Con un solo comando podemos poner en marcha varios contenedores al mismo tiempo. Podemos decir que un servicio solo se levante si otro se ha iniciado previamente Definici\u00f3n de servicios Para ello definimos la configuraci\u00f3n de los servicios mediante un archivo en formato YAML, que llamaremos docker-compose. Ejemplo de docker-compose, en el que podemos ver dos servicios: Un servicio basededatos que cargar\u00e1 una imagen de mysql:5.7 Un servicio wordpress que cargar\u00e1 una imagen wordpress:latest Estas im\u00e1genes saldr\u00e1n de docker hub. Los propios desarrolladores generan las im\u00e1genes docker y las publican all\u00ed. Montaje de vol\u00famenes Como ya sabemos, los contenedores tienen un ciclo de vida y dentro de ellos los datos no persisten, por lo que tendremos que enlazar una carpeta externa a una interna del contenedor. Por ejemplo, la carpeta db_data que tenemos en la carpeta contenedora de los dockerfiles y el c\u00f3digo fuente se montar\u00e1 dentro del contenedor en la carpeta /var/lib/mysql . De este modo, al morir el contenedor los datos no ser\u00e1n borrados. Variables de entorno Los diferentes servicios pueden tener que compartir variables entre ellos. Por ejemplo, wordpress necesitar\u00e1 saber los datos de acceso a la BD donde guardar\u00e1 la informaci\u00f3n que necesite. Esto, que generalmente har\u00edamos a mano modificando archivos de configuraci\u00f3n, se puede hacer definiendo variables externamente dentro del dockerfile. Ejemplo de docker-compose version: '3.3' services: basededatos: image: mysql:5.7 volumes: - db_data:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: somewordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: depends_on: - basededatos image: wordpress:latest ports: - \"8000:80\" restart: always environment: WORDPRESS_DB_HOST: basededatos:3306 WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress volumes: db_data: {} Ejecutar docker-compose Para ejecutar docker-compose: docker-compose up El inconveniente de hacerlo as\u00ed es que la consola se ver\u00e1 bloqueada por la ejecuci\u00f3n del proceso hasta que el contenedor finalice. De todos modos, tambi\u00e9n podemos ejecutar los contenedores en segundo plano (detached), utilizando: docker-compose up -d Visualizar contenedores Si queremos visualizar los contenedores que se est\u00e1n ejecutando: docker ps Monitorizar contenedores Comprobar recursos que utiliza un contenedor: docker stats xxx Comprobar los logs de un contenedor: docker logs Comprobar todos los eventos que han ocurrido a un contenedor: docker events Listar procesos de un contenedor: docker top xxx Eliminar contenedores Eliminar contenedores linux Actualizaci\u00f3n: podemos borrar todas las im\u00e1genes: docker system prune -a Eliminar todos los contenedores existentes (subshell): docker stop $(docker ps -q) docker rm -v $(docker ps -aq) Eliminar contenedores Windows Borrar todos los contenedores en windows. Meter en un bat FOR /f \"tokens=*\" %i IN ('docker ps -a -q') DO docker rm %i Eliminar contenedores y im\u00e1genes con batch Un bat que te lo hace todo (maravilloso), borra contenedores e im\u00e1genes. @echo off FOR /f \"tokens=*\" %%i IN ('docker ps -aq') DO docker rm %%i FOR /f \"tokens=*\" %%i IN ('docker images --format \"{{.ID}}\"') DO docker rmi %%i Eliminar contenedores en powershell: docker ps -aq | foreach {docker rm $_} Persistencia Los contenedores por defecto est\u00e1n completamente aislados del mundo exterior. Podemos montar un volumen que funcionar\u00e1 como si fuer una carpeta compartida a la que puedes acceder desde otro lugar. Dive Existe una herramienta llamada dive que permite monitorizar una imagen para ver detalles, espacio ocupado, sistema de archivos, etc. e intentar optimizarla. No he tenido tiempo de probarlo, pero el proyecto est\u00e1 en: https://github.com/yosifkit/dive Multi stage builds Definimos un dockerfile y ponemos en primer lugar una l\u00ednea FROM. A continuaci\u00f3n ponemos otra l\u00ednea FROM. Por ejemplo: FROM alpine golang FROM alpine Puedes cargar el c\u00f3digo fuente en una imagen y compilarlo Luego borrar el c\u00f3digo fuente Etiquetamos el estado y utilizarlo como un nuevo statement. Todo lo que hay antes del segundo FROM se elimina Buenas pr\u00e1cticas para construir contenedores Una sola aplicaci\u00f3n por contenedor. Por ejemplo, PHP y Mysql en dos contenedores. Agregar el c\u00f3digo fuente de la aplici\u00f3n lo m\u00e1s tarde posible. Las capas y dependencias se pueden cachear y acelerar las builds posteriores Eliminar todo lo que no sea necesario, o utilizar una imagen scratch o distroless. Hacer las im\u00e1genes lo m\u00e1s peque\u00f1as posibles. Reduce downtimes, tiempo de arranque y espacio en disco. Etiquetar las im\u00e1genes Utiliza vol\u00famenes para manejar guardar la configuraci\u00f3n y los datos fuera de los contenedores Ventajas de dockerizar Algunas ventajas de cambiar a un entorno docker son: Ciclos de desarrollo m\u00e1s r\u00e1pidos Aplicaciones m\u00e1s peque\u00f1as Ayuda a tener m\u00e1s documentados los pasos de aprovisionamiento del servidor, al tenerlos que definir como instrucciones en un Dockerfile. Al hacer los dockerfiles tratas tu infraestructura como c\u00f3digo que puede ser commited y compartido, as\u00ed como ver un hist\u00f3rico de cambios. Almacenar en repositorio Podemos pushear la imagen a un registro del tipo Docker hub , para poderla utilizar y construir y escalar contenedores a partir de ella. Construir la imagen Primero creo la imagen, si no la ten\u00eda ya creada: docker build -t danimrtic/nodejs-mongodb . Comprobamos que me la ha creado: C:\\xxx>docker images REPOSITORY TAG IMAGE ID CREATED SIZE danimrtic/nodejs-mongodb latest 1d3b7e77a948 32 seconds ago 117MB Ahora podr\u00edamos crear todos los contenedores que queramos a partir de ella, o utilizarla como punto de partida para crear otras im\u00e1genes. Login en docker hub Ahora vamos a subir la imagen al repositorio. Para ello nos logueamos: C:\\xxx>docker login -u danimrtic Password: Login Succeeded Una vez esto, me guarda la configuraci\u00f3n en un archivo JSON . Subir imagen Pusheo la imagen: docker push danimrtic/nodejs-mongodb Y ale, a subir se ha dicho: C:\\xxx> docker push danimrtic/nodejs-mongodb The push refers to repository [docker.io/danimrtic/nodejs-mongodb] c9b7262cf2a9: Pushed 484f9423b541: Pushed 6faf95ed340e: Pushed a4c2fd79fb93: Pushed 2faeaaebb113: Mounted from library/node 387bc77dd3f2: Mounted from library/node df64d3292fd6: Mounted from library/node latest: digest: sha256:c0540a9bcce05b35ef3b0738aee2681b78246b91503d0ae25091b52644c4df49 size: 1788 Al no darle etiqueta, se convierte en la versi\u00f3n latest . Ahora la puedo pullear desde cualquier proveedor cloud y montar los contenedores que quiera. Borro todas las im\u00e1genes para obligar la descarga: docker system prune -a Descargar imagen Y a descargar la imagen: docker pull danimrtic/nodejs-mongodb Respuesta: C:\\Users\\dnick\\Desktop\\github\\node.js-mongodb>docker pull danimrtic/nodejs-mongodb Using default tag: latest latest: Pulling from danimrtic/nodejs-mongodb 4fe2ade4980c: Pull complete c245f6a8ecc5: Pull complete 82bdc9503d50: Pull complete f4a77d5c469c: Pull complete 628735677efb: Pull complete 69feec983dbb: Pull complete 7a0d47fa11c7: Pull complete Digest: sha256:c0540a9bcce05b35ef3b0738aee2681b78246b91503d0ae25091b52644c4df49 Status: Downloaded newer image for danimrtic/nodejs-mongodb:latest","title":["Docker"]},{"location":"docker/docker/#indice","text":"\u00cdndice Contenedores Contenedores Windows y contenedores Linux Im\u00e1genes Aprovechamiento de las capas Docker Dockerfiles Formato de un dockerfile Ejecutar un comando Construir una imagen Definir etiqueta para una imagen Consultar im\u00e1genes Ejecutar un contenedor Docker compose Definici\u00f3n de servicios Montaje de vol\u00famenes Variables de entorno Ejemplo de docker-compose Ejecutar docker-compose Visualizar contenedores Monitorizar contenedores Eliminar contenedores Eliminar contenedores linux Eliminar contenedores Windows Eliminar contenedores y im\u00e1genes con batch Eliminar contenedores en powershell: Persistencia Dive Multi stage builds Buenas pr\u00e1cticas para construir contenedores Ventajas de dockerizar Almacenar en repositorio Construir la imagen Login en docker hub Subir imagen Descargar imagen","title":"\u00cdndice"},{"location":"docker/docker/#contenedores","text":"Los contenedores no tienen un sistema operativo dentro, el contenedor a\u00edsla el espacio de usuario. Son muy ligeros porque corren como un proceso sobre el SO del host. Los contenedores escalan en funci\u00f3n de la demanda, mientras que las MV tienen que ser aprovisionadas previamente.","title":"Contenedores"},{"location":"docker/docker/#contenedores-windows-y-contenedores-linux","text":"Los contenedores Windows corren sobre Windows y los contenedores Linux sobre Linux Se diferencian en los tipos de aislamiento que tienen ambos Los contenedores Linux: Se ejecutan sobre el host de modo que son visibles a ellos Se ejecutan sobre el kernel como un proceso visible desde el host En Hyper-V Windows lanza una MV super fina que tiene su propio kernel y por tanto los contenedores no son visibles desde el propio SO.","title":"Contenedores Windows y contenedores Linux"},{"location":"docker/docker/#imagenes","text":"Una imagen es como una aplicaci\u00f3n compilada. Un contenedor es una instancia en ejecuci\u00f3n de una imagen concreta. Las im\u00e1genes se construyen sobre una tecnolog\u00eda de sistema de ficheros por capas . Para crear una imagen, generalmente se crea un archivo de texto llamado docker file formado por diferentes instrucciones . Cada l\u00ednea representa una instrucci\u00f3n, y cada vez que se ejecuta el dockerfile se ejecutan dichas instrucciones de arriba a abajo. Estos dockerfiles se almacenan como texto y se pueden compartir con facilidad, as\u00ed como almacenarse en sistemas de control de versiones. Cada instrucci\u00f3n que se ejecuta cambia ligeramente el estado del sistema de archivos respecto a la instrucci\u00f3n anterior. La diferencia entre el estado del sistema de ficheros antes y despu\u00e9s de cada instrucci\u00f3n se guarda en disco como un archivo, que conforma una capa . Cada imagen es un conjunto de capas que contienen los diferentes cambios que se van realizando sobre el sistema de archivos empaquetados. Al final del dockerfile, la \u00faltima instrucci\u00f3n define el comando que se ejecutar\u00e1 cuando arranquemos el contenedor. Al ejecutar un comando a partir de la imagen creada, se ejecuta el comando especificado y se convierte en el proceso con PID 1 dentro del \u00e1rbol virtual de procesos. El contenedor seguir\u00e1 en marcha mientras el proceso creado siga en ejecuci\u00f3n.","title":"Im\u00e1genes"},{"location":"docker/docker/#aprovechamiento-de-las-capas","text":"Cada vez que se ejecuta una instrucci\u00f3n, se crea un contenedor y se etiqueta con un hash creado para obtener un nombre \u00fanico. De este modo, podemos reutilizar estas capas intermedias y solo tener que construirlas una vez. Si dos docker files comienzan por el mismo set de instrucciones desde el comienzo, todas las capas que coincidan solo existir\u00e1n en el sistema de ficheros una vez, para ambos contenedores. Para cada RUN se crea una capa, por lo que se pueden agrupar varios comandos en un solo RUN y crear una \u00fanica capa.","title":"Aprovechamiento de las capas"},{"location":"docker/docker/#docker","text":"Docker permite automatizar el despliegue de aplicaciones dentro de contenedores. Veremos diferentes configuraciones de Docker que podemos hacer.","title":"Docker"},{"location":"docker/docker/#dockerfiles","text":"Permiten automatizar la construcci\u00f3n de una imagen, a trav\u00e9s de un fichero que contiene instrucciones para fabricar una imagen, a trav\u00e9s de una serie de pasos.","title":"Dockerfiles"},{"location":"docker/docker/#formato-de-un-dockerfile","text":"Formato del Dockerfile, que se crear\u00e1 dentro de la carpeta donde tengamos el proyecto FROM ubuntu:14.04 ENTRYPOINT [\"/bin/echo\"]","title":"Formato de un dockerfile"},{"location":"docker/docker/#ejecutar-un-comando","text":"Si en lugar de utilizar entrypoints queremos pasar par\u00e1metros, podemos utilizar CMD CMD [\"/bin/echo\" , \"Hi Docker !\"]","title":"Ejecutar un comando"},{"location":"docker/docker/#construir-una-imagen","text":"Construimos la imagen con el siguiente comando. Al haber un Dockerfile en la carpeta la detecta y monta la imagen a partir de las instrucciones del Dockerfile. docker build .","title":"Construir una imagen"},{"location":"docker/docker/#definir-etiqueta-para-una-imagen","text":"Al no definir repositorios ni tags, se asigna a la imagen una ID hexadecimal. Podemos especificar un nombre y una etiqueta al construir la imagen: docker build -t cookbook:hello .","title":"Definir etiqueta para una imagen"},{"location":"docker/docker/#consultar-imagenes","text":"Consultar las im\u00e1genes disponibles en nuestra m\u00e1quina. A partir de una imagen, podemos levantar tantos contenedores como queramos. docker images Nos mostrar\u00e1: REPOSITORY TAG IMAGE ID CREATED SIZE node.js-mongodb latest 2ce837b1b0ca 11 minutes ago 111MB danimrtic/apache2 first 4223faeadc8f 2 months ago 208MB danimrprofe/apache2 first 4223faeadc8f 2 months ago 208MB danimrprofe/apache2 latest 4223faeadc8f 2 months ago 208MB ubuntu latest 20bb25d32758 3 months ago 87.5MB node 10.13-alpine 93f2dcbcddfe 4 months ago 70.3MB","title":"Consultar im\u00e1genes"},{"location":"docker/docker/#ejecutar-un-contenedor","text":"A partir de una imagen podemos crear y ejecutar un contenedor, especificando el ID de la imagen: docker run 20bb25d32758","title":"Ejecutar un contenedor"},{"location":"docker/docker/#docker-compose","text":"Si quisiera levantar varios contenedores de diferentes im\u00e1genes, me ver\u00eda obligado a definir diferentes Dockerfiles para cada uno y levantar los contenedores uno a uno. Docker-compose es una herramienta que nos permite: Definir varios servicios en un solo archivo de configuraci\u00f3n Con un solo comando podemos poner en marcha varios contenedores al mismo tiempo. Podemos decir que un servicio solo se levante si otro se ha iniciado previamente","title":"Docker compose"},{"location":"docker/docker/#definicion-de-servicios","text":"Para ello definimos la configuraci\u00f3n de los servicios mediante un archivo en formato YAML, que llamaremos docker-compose. Ejemplo de docker-compose, en el que podemos ver dos servicios: Un servicio basededatos que cargar\u00e1 una imagen de mysql:5.7 Un servicio wordpress que cargar\u00e1 una imagen wordpress:latest Estas im\u00e1genes saldr\u00e1n de docker hub. Los propios desarrolladores generan las im\u00e1genes docker y las publican all\u00ed.","title":"Definici\u00f3n de servicios"},{"location":"docker/docker/#montaje-de-volumenes","text":"Como ya sabemos, los contenedores tienen un ciclo de vida y dentro de ellos los datos no persisten, por lo que tendremos que enlazar una carpeta externa a una interna del contenedor. Por ejemplo, la carpeta db_data que tenemos en la carpeta contenedora de los dockerfiles y el c\u00f3digo fuente se montar\u00e1 dentro del contenedor en la carpeta /var/lib/mysql . De este modo, al morir el contenedor los datos no ser\u00e1n borrados.","title":"Montaje de vol\u00famenes"},{"location":"docker/docker/#variables-de-entorno","text":"Los diferentes servicios pueden tener que compartir variables entre ellos. Por ejemplo, wordpress necesitar\u00e1 saber los datos de acceso a la BD donde guardar\u00e1 la informaci\u00f3n que necesite. Esto, que generalmente har\u00edamos a mano modificando archivos de configuraci\u00f3n, se puede hacer definiendo variables externamente dentro del dockerfile.","title":"Variables de entorno"},{"location":"docker/docker/#ejemplo-de-docker-compose","text":"version: '3.3' services: basededatos: image: mysql:5.7 volumes: - db_data:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: somewordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: depends_on: - basededatos image: wordpress:latest ports: - \"8000:80\" restart: always environment: WORDPRESS_DB_HOST: basededatos:3306 WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpress WORDPRESS_DB_NAME: wordpress volumes: db_data: {}","title":"Ejemplo de docker-compose"},{"location":"docker/docker/#ejecutar-docker-compose","text":"Para ejecutar docker-compose: docker-compose up El inconveniente de hacerlo as\u00ed es que la consola se ver\u00e1 bloqueada por la ejecuci\u00f3n del proceso hasta que el contenedor finalice. De todos modos, tambi\u00e9n podemos ejecutar los contenedores en segundo plano (detached), utilizando: docker-compose up -d","title":"Ejecutar docker-compose"},{"location":"docker/docker/#visualizar-contenedores","text":"Si queremos visualizar los contenedores que se est\u00e1n ejecutando: docker ps","title":"Visualizar contenedores"},{"location":"docker/docker/#monitorizar-contenedores","text":"Comprobar recursos que utiliza un contenedor: docker stats xxx Comprobar los logs de un contenedor: docker logs Comprobar todos los eventos que han ocurrido a un contenedor: docker events Listar procesos de un contenedor: docker top xxx","title":"Monitorizar contenedores"},{"location":"docker/docker/#eliminar-contenedores","text":"","title":"Eliminar contenedores"},{"location":"docker/docker/#eliminar-contenedores-linux","text":"Actualizaci\u00f3n: podemos borrar todas las im\u00e1genes: docker system prune -a Eliminar todos los contenedores existentes (subshell): docker stop $(docker ps -q) docker rm -v $(docker ps -aq)","title":"Eliminar contenedores linux"},{"location":"docker/docker/#eliminar-contenedores-windows","text":"Borrar todos los contenedores en windows. Meter en un bat FOR /f \"tokens=*\" %i IN ('docker ps -a -q') DO docker rm %i","title":"Eliminar contenedores Windows"},{"location":"docker/docker/#eliminar-contenedores-y-imagenes-con-batch","text":"Un bat que te lo hace todo (maravilloso), borra contenedores e im\u00e1genes. @echo off FOR /f \"tokens=*\" %%i IN ('docker ps -aq') DO docker rm %%i FOR /f \"tokens=*\" %%i IN ('docker images --format \"{{.ID}}\"') DO docker rmi %%i","title":"Eliminar contenedores y im\u00e1genes con batch"},{"location":"docker/docker/#eliminar-contenedores-en-powershell","text":"docker ps -aq | foreach {docker rm $_}","title":"Eliminar contenedores en powershell:"},{"location":"docker/docker/#persistencia","text":"Los contenedores por defecto est\u00e1n completamente aislados del mundo exterior. Podemos montar un volumen que funcionar\u00e1 como si fuer una carpeta compartida a la que puedes acceder desde otro lugar.","title":"Persistencia"},{"location":"docker/docker/#dive","text":"Existe una herramienta llamada dive que permite monitorizar una imagen para ver detalles, espacio ocupado, sistema de archivos, etc. e intentar optimizarla. No he tenido tiempo de probarlo, pero el proyecto est\u00e1 en: https://github.com/yosifkit/dive","title":"Dive"},{"location":"docker/docker/#multi-stage-builds","text":"Definimos un dockerfile y ponemos en primer lugar una l\u00ednea FROM. A continuaci\u00f3n ponemos otra l\u00ednea FROM. Por ejemplo: FROM alpine golang FROM alpine Puedes cargar el c\u00f3digo fuente en una imagen y compilarlo Luego borrar el c\u00f3digo fuente Etiquetamos el estado y utilizarlo como un nuevo statement. Todo lo que hay antes del segundo FROM se elimina","title":"Multi stage builds"},{"location":"docker/docker/#buenas-practicas-para-construir-contenedores","text":"Una sola aplicaci\u00f3n por contenedor. Por ejemplo, PHP y Mysql en dos contenedores. Agregar el c\u00f3digo fuente de la aplici\u00f3n lo m\u00e1s tarde posible. Las capas y dependencias se pueden cachear y acelerar las builds posteriores Eliminar todo lo que no sea necesario, o utilizar una imagen scratch o distroless. Hacer las im\u00e1genes lo m\u00e1s peque\u00f1as posibles. Reduce downtimes, tiempo de arranque y espacio en disco. Etiquetar las im\u00e1genes Utiliza vol\u00famenes para manejar guardar la configuraci\u00f3n y los datos fuera de los contenedores","title":"Buenas pr\u00e1cticas para construir contenedores"},{"location":"docker/docker/#ventajas-de-dockerizar","text":"Algunas ventajas de cambiar a un entorno docker son: Ciclos de desarrollo m\u00e1s r\u00e1pidos Aplicaciones m\u00e1s peque\u00f1as Ayuda a tener m\u00e1s documentados los pasos de aprovisionamiento del servidor, al tenerlos que definir como instrucciones en un Dockerfile. Al hacer los dockerfiles tratas tu infraestructura como c\u00f3digo que puede ser commited y compartido, as\u00ed como ver un hist\u00f3rico de cambios.","title":"Ventajas de dockerizar"},{"location":"docker/docker/#almacenar-en-repositorio","text":"Podemos pushear la imagen a un registro del tipo Docker hub , para poderla utilizar y construir y escalar contenedores a partir de ella.","title":"Almacenar en repositorio"},{"location":"docker/docker/#construir-la-imagen","text":"Primero creo la imagen, si no la ten\u00eda ya creada: docker build -t danimrtic/nodejs-mongodb . Comprobamos que me la ha creado: C:\\xxx>docker images REPOSITORY TAG IMAGE ID CREATED SIZE danimrtic/nodejs-mongodb latest 1d3b7e77a948 32 seconds ago 117MB Ahora podr\u00edamos crear todos los contenedores que queramos a partir de ella, o utilizarla como punto de partida para crear otras im\u00e1genes.","title":"Construir la imagen"},{"location":"docker/docker/#login-en-docker-hub","text":"Ahora vamos a subir la imagen al repositorio. Para ello nos logueamos: C:\\xxx>docker login -u danimrtic Password: Login Succeeded Una vez esto, me guarda la configuraci\u00f3n en un archivo JSON .","title":"Login en docker hub"},{"location":"docker/docker/#subir-imagen","text":"Pusheo la imagen: docker push danimrtic/nodejs-mongodb Y ale, a subir se ha dicho: C:\\xxx> docker push danimrtic/nodejs-mongodb The push refers to repository [docker.io/danimrtic/nodejs-mongodb] c9b7262cf2a9: Pushed 484f9423b541: Pushed 6faf95ed340e: Pushed a4c2fd79fb93: Pushed 2faeaaebb113: Mounted from library/node 387bc77dd3f2: Mounted from library/node df64d3292fd6: Mounted from library/node latest: digest: sha256:c0540a9bcce05b35ef3b0738aee2681b78246b91503d0ae25091b52644c4df49 size: 1788 Al no darle etiqueta, se convierte en la versi\u00f3n latest . Ahora la puedo pullear desde cualquier proveedor cloud y montar los contenedores que quiera. Borro todas las im\u00e1genes para obligar la descarga: docker system prune -a","title":"Subir imagen"},{"location":"docker/docker/#descargar-imagen","text":"Y a descargar la imagen: docker pull danimrtic/nodejs-mongodb Respuesta: C:\\Users\\dnick\\Desktop\\github\\node.js-mongodb>docker pull danimrtic/nodejs-mongodb Using default tag: latest latest: Pulling from danimrtic/nodejs-mongodb 4fe2ade4980c: Pull complete c245f6a8ecc5: Pull complete 82bdc9503d50: Pull complete f4a77d5c469c: Pull complete 628735677efb: Pull complete 69feec983dbb: Pull complete 7a0d47fa11c7: Pull complete Digest: sha256:c0540a9bcce05b35ef3b0738aee2681b78246b91503d0ae25091b52644c4df49 Status: Downloaded newer image for danimrtic/nodejs-mongodb:latest","title":"Descargar imagen"},{"location":"kubernetes/arquitectura%20de%20k8s/","text":"Arquitectura de kubernetes Cluster Nodos Nodos worker Pods Arquitectura de kubernetes Conceptos importantes: Cluster Nodos Pods Cluster Un cluster es un conjunto de nodos . cada uno de estos nodos puede ser: Una m\u00e1quina real f\u00edsica Una m\u00e1quina virtual Nodos Pueden existir: Varios nodos worker , sobre los que se desplegar\u00e1n los contenedores Al menos un nodo maestro , que gestionar\u00e1 todo. Nodos worker Los nodos worker son m\u00e1quinas que ejecutan aplicaciones dentro de contenedores. Ejecutan, monitorizan y proveen de servicios a las aplicaciones a trav\u00e9s de diferentes componentes: Docker (u otro sistema) ejecuta los contenedores Los kubeletes se comunican con la API del servidor y gestionan los contenedores en su propio nodo Un proxy de red balancea el tr\u00e1fico entre los diferente componentes Pods Se trata de un grupo de uno o m\u00e1s contenedores que comparten: Almacenamiento Red Una manera com\u00fan de utilizarse. Los contenedores dentro de un pod se colocan, programan y ejecutan conjuntamente en un mismo contexto. Los contenedores dentro de un pod comparten IP y puertos, y se pueden comunicar a trav\u00e9s de localhost. Asimismo, los contenedores dentro de un mismo pod suelen compartir vol\u00famenes.","title":"Arquitectura de k8s"},{"location":"kubernetes/arquitectura%20de%20k8s/#arquitectura-de-kubernetes","text":"Conceptos importantes: Cluster Nodos Pods","title":"Arquitectura de kubernetes"},{"location":"kubernetes/arquitectura%20de%20k8s/#cluster","text":"Un cluster es un conjunto de nodos . cada uno de estos nodos puede ser: Una m\u00e1quina real f\u00edsica Una m\u00e1quina virtual","title":"Cluster"},{"location":"kubernetes/arquitectura%20de%20k8s/#nodos","text":"Pueden existir: Varios nodos worker , sobre los que se desplegar\u00e1n los contenedores Al menos un nodo maestro , que gestionar\u00e1 todo.","title":"Nodos"},{"location":"kubernetes/arquitectura%20de%20k8s/#nodos-worker","text":"Los nodos worker son m\u00e1quinas que ejecutan aplicaciones dentro de contenedores. Ejecutan, monitorizan y proveen de servicios a las aplicaciones a trav\u00e9s de diferentes componentes: Docker (u otro sistema) ejecuta los contenedores Los kubeletes se comunican con la API del servidor y gestionan los contenedores en su propio nodo Un proxy de red balancea el tr\u00e1fico entre los diferente componentes","title":"Nodos worker"},{"location":"kubernetes/arquitectura%20de%20k8s/#pods","text":"Se trata de un grupo de uno o m\u00e1s contenedores que comparten: Almacenamiento Red Una manera com\u00fan de utilizarse. Los contenedores dentro de un pod se colocan, programan y ejecutan conjuntamente en un mismo contexto. Los contenedores dentro de un pod comparten IP y puertos, y se pueden comunicar a trav\u00e9s de localhost. Asimismo, los contenedores dentro de un mismo pod suelen compartir vol\u00famenes.","title":"Pods"},{"location":"kubernetes/crear%20cluster%20kubernetes/","text":"Crear un cluster a mano Paso 1: Agregar repositorio k8s Paso 2: Instalamos Docker y las herramientas de k8s Paso 3: Agregamos permisos Paso 4: Inicializamos el nodo master (tardar\u00e1 algunos minutos) Paso 5: Comandos posteriores (solo nodo master) Paso 6: Inicializar la red de cluster (nodo master) Paso 7: Agregar nodos a la red (nodos worker) Crear un cluster a mano Para este caso creamos 3 MV diferentes: Una har\u00e1 de nodo m\u00e1ster, que orquestar\u00e1 todo el sistema. Las otras 2 har\u00e1n de nodos worker. Las 3 MV ser\u00e1n Ubuntu 16.04 para las pruebas. Paso 1: Agregar repositorio k8s k8s no viene por defecto en los repositorios de nuestro SO, por lo que deberemos agregar el enlace al repositorio de k8s para que podamos instalarlo a trav\u00e9s del gestor apt curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" Paso 2: Instalamos Docker y las herramientas de k8s Deberemos actualizar la lista de paquets para que nos coja los del repositorio nuevo que acabamos de agregar. apt update apt install -y docker.io apt install -y kubelet kubeadm kubectl Paso 3: Agregamos permisos usermod -aG docker vagrant systemctl enable docker Paso 4: Inicializamos el nodo master (tardar\u00e1 algunos minutos) Iniciamos, pas\u00e1ndole la IP de la interfaz correcta (important\u00edsimo) kubeadm init --apiserver-advertise-address 192.168.205.10 Una vez iniciado el cluster, nos devolver\u00e1 un comando para ejecutar en los nodos worker que queramos agregar al cluster, tal que as\u00ed: kubeadm join 192.168.205.10:6443 --token gsvzsq.3k76aiuuj12dk1fm --discovery-token-ca-cert-hash sha256:8f478c0f3440f8cf6b108f4a947b8c5d3a6185419c5d23033f378e5d9fc3cf66 Si la liamos, podemos reiniciar en el maestro y volver a iniciar, reseteando el cluster: kubeadm reset Despu\u00e9s de esto, volver\u00edamos a hacer el init en el master y hacer join en los workers. Paso 5: Comandos posteriores (solo nodo master) Para empezar a utilizar mi cluster me va apedir ejecutar una serie de comandos mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config Paso 6: Inicializar la red de cluster (nodo master) Me recomienda desplegar una red de pods en el cluster: kubectl apply -n kube-system -f \\ \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\" Tardar\u00e1 un poquito en levantar los pods, unos 3 minutos. Podemos verlo utilizando: kubectl get pods --all-namespaces Al final tendremos un nodo desplegado como master: kubecetl get nodes Deber\u00edamos ver el node1 con estado Ready, si todo va bien. Paso 7: Agregar nodos a la red (nodos worker) En cada uno de los nodos worker que queramos agregar al cluster: kubeadm join 192.168.205.10:6443 --token gsvzsq.3k76aiuuj12dk1fm --discovery-token-ca-cert-hash sha256:8f478c0f3440f8cf6b108f4a947b8c5d3a6185419c5d23033f378e5d9fc3cf66 Si todo va bi\u00e9n se agregar\u00e1 al cluster y contestar\u00e1 algo como: This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster. Nos vamos al master y comprobamos la lista de nodos: kubectl --insecure-skip-tls-verify get nodes Aqu\u00ed me ha dado un error debido a falta de certificados","title":"Crear cluster kubernetes"},{"location":"kubernetes/crear%20cluster%20kubernetes/#crear-un-cluster-a-mano","text":"Para este caso creamos 3 MV diferentes: Una har\u00e1 de nodo m\u00e1ster, que orquestar\u00e1 todo el sistema. Las otras 2 har\u00e1n de nodos worker. Las 3 MV ser\u00e1n Ubuntu 16.04 para las pruebas.","title":"Crear un cluster a mano"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-1-agregar-repositorio-k8s","text":"k8s no viene por defecto en los repositorios de nuestro SO, por lo que deberemos agregar el enlace al repositorio de k8s para que podamos instalarlo a trav\u00e9s del gestor apt curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"","title":"Paso 1: Agregar repositorio k8s"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-2-instalamos-docker-y-las-herramientas-de-k8s","text":"Deberemos actualizar la lista de paquets para que nos coja los del repositorio nuevo que acabamos de agregar. apt update apt install -y docker.io apt install -y kubelet kubeadm kubectl","title":"Paso 2: Instalamos Docker y las herramientas de k8s"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-3-agregamos-permisos","text":"usermod -aG docker vagrant systemctl enable docker","title":"Paso 3: Agregamos permisos"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-4-inicializamos-el-nodo-master-tardara-algunos-minutos","text":"Iniciamos, pas\u00e1ndole la IP de la interfaz correcta (important\u00edsimo) kubeadm init --apiserver-advertise-address 192.168.205.10 Una vez iniciado el cluster, nos devolver\u00e1 un comando para ejecutar en los nodos worker que queramos agregar al cluster, tal que as\u00ed: kubeadm join 192.168.205.10:6443 --token gsvzsq.3k76aiuuj12dk1fm --discovery-token-ca-cert-hash sha256:8f478c0f3440f8cf6b108f4a947b8c5d3a6185419c5d23033f378e5d9fc3cf66 Si la liamos, podemos reiniciar en el maestro y volver a iniciar, reseteando el cluster: kubeadm reset Despu\u00e9s de esto, volver\u00edamos a hacer el init en el master y hacer join en los workers.","title":"Paso 4: Inicializamos el nodo master (tardar\u00e1 algunos minutos)"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-5-comandos-posteriores-solo-nodo-master","text":"Para empezar a utilizar mi cluster me va apedir ejecutar una serie de comandos mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config","title":"Paso 5: Comandos posteriores (solo nodo master)"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-6-inicializar-la-red-de-cluster-nodo-master","text":"Me recomienda desplegar una red de pods en el cluster: kubectl apply -n kube-system -f \\ \"https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\\n')\" Tardar\u00e1 un poquito en levantar los pods, unos 3 minutos. Podemos verlo utilizando: kubectl get pods --all-namespaces Al final tendremos un nodo desplegado como master: kubecetl get nodes Deber\u00edamos ver el node1 con estado Ready, si todo va bien.","title":"Paso 6: Inicializar la red de cluster (nodo master)"},{"location":"kubernetes/crear%20cluster%20kubernetes/#paso-7-agregar-nodos-a-la-red-nodos-worker","text":"En cada uno de los nodos worker que queramos agregar al cluster: kubeadm join 192.168.205.10:6443 --token gsvzsq.3k76aiuuj12dk1fm --discovery-token-ca-cert-hash sha256:8f478c0f3440f8cf6b108f4a947b8c5d3a6185419c5d23033f378e5d9fc3cf66 Si todo va bi\u00e9n se agregar\u00e1 al cluster y contestar\u00e1 algo como: This node has joined the cluster: * Certificate signing request was sent to apiserver and a response was received. * The Kubelet was informed of the new secure connection details. Run 'kubectl get nodes' on the control-plane to see this node join the cluster. Nos vamos al master y comprobamos la lista de nodos: kubectl --insecure-skip-tls-verify get nodes Aqu\u00ed me ha dado un error debido a falta de certificados","title":"Paso 7: Agregar nodos a la red (nodos worker)"},{"location":"kubernetes/despliegues/","text":"Despliegues en k8s \u00bfQu\u00e9 es un despliegue? Los despliegues (deployments) son una colecci\u00f3n de recursos y referencias. Un despliegue: Describe qu\u00e9 contenedores nos interesan Indica c\u00f3mo os contenedores se relacionan entre ellos Qu\u00e9 se requiere para qu\u00e9 funcionen correctamente Qu\u00e9 hacer si dejan de funcionar correctamente Qu\u00e9 puedo hacer con despliegues Cosas que puedo hacer con despliegues: Crear uno nuevo Actualizar un despliegue existente Aplicar actualizaciones a pods que se est\u00e9n ejecutando en el cluster Volver a una versi\u00f3n anterior (rollback) Pausar y arrancar un despliegue Gracias a kubectl puedo trabajar e interactuar con los diferentes despliegues y: Listar despliegues Ver el estado de los rollouts Establecer la imagen para un despliegue Ver el hist\u00f3rico de rollouts Ejemplo de despliegue Los despliegues se suelen describir en un archivo YAML. En el siguiente deployment, tendremos una r\u00e9plica con un \u00fanico contenedor, que ser\u00e1 la imagen oficial de tomcat 9.0 y que escuchar\u00e1 en el puerto 8080. La imagen del contenedor la descargar\u00e1 de Docker Hub. apiVersion: apps/v1beta2 kind: Deployment metadata: name: tomcat-deployment spec: selector: matchLabels: app: tomcat replicas: 1 template: metadata: labels: app: tomcat spec: containers: - name: tomcat image: tomcat:9.0 ports: - containerPort: 8080 El deployment se deber\u00eda guardar en un fichero con extensi\u00f3n YAML, como por ejemplo deployment.yaml Despliegue del deployment Kubectl es una herramienta que nos permite interaccionar con cualquier cluster de Kubernetes, desde un shell. Para crear el deployment: kubectl apply -f ./deployment.yaml contestaci\u00f3n: deployment.apps/tomcat-deployment created Exponemos el despliegue para que nos asocie una IP y puerto kubectl expose deployment tomcat-deployment --type=NodePort Contestaci\u00f3n: service/tomcat-deployment exposed Para saber la IP y el puerto en el que nos ha expuesto el servicio: minikube service tomcat-deployment --url Contestaci\u00f3n: http://192.168.99.100:30836 Si accedemos a esta URL veremos que est\u00e1 el servidor Tomcat escuchando","title":"Despliegues en k8s"},{"location":"kubernetes/despliegues/#despliegues-en-k8s","text":"","title":"Despliegues en k8s"},{"location":"kubernetes/despliegues/#que-es-un-despliegue","text":"Los despliegues (deployments) son una colecci\u00f3n de recursos y referencias. Un despliegue: Describe qu\u00e9 contenedores nos interesan Indica c\u00f3mo os contenedores se relacionan entre ellos Qu\u00e9 se requiere para qu\u00e9 funcionen correctamente Qu\u00e9 hacer si dejan de funcionar correctamente","title":"\u00bfQu\u00e9 es un despliegue?"},{"location":"kubernetes/despliegues/#que-puedo-hacer-con-despliegues","text":"Cosas que puedo hacer con despliegues: Crear uno nuevo Actualizar un despliegue existente Aplicar actualizaciones a pods que se est\u00e9n ejecutando en el cluster Volver a una versi\u00f3n anterior (rollback) Pausar y arrancar un despliegue Gracias a kubectl puedo trabajar e interactuar con los diferentes despliegues y: Listar despliegues Ver el estado de los rollouts Establecer la imagen para un despliegue Ver el hist\u00f3rico de rollouts","title":"Qu\u00e9 puedo hacer con despliegues"},{"location":"kubernetes/despliegues/#ejemplo-de-despliegue","text":"Los despliegues se suelen describir en un archivo YAML. En el siguiente deployment, tendremos una r\u00e9plica con un \u00fanico contenedor, que ser\u00e1 la imagen oficial de tomcat 9.0 y que escuchar\u00e1 en el puerto 8080. La imagen del contenedor la descargar\u00e1 de Docker Hub. apiVersion: apps/v1beta2 kind: Deployment metadata: name: tomcat-deployment spec: selector: matchLabels: app: tomcat replicas: 1 template: metadata: labels: app: tomcat spec: containers: - name: tomcat image: tomcat:9.0 ports: - containerPort: 8080 El deployment se deber\u00eda guardar en un fichero con extensi\u00f3n YAML, como por ejemplo deployment.yaml","title":"Ejemplo de despliegue"},{"location":"kubernetes/despliegues/#despliegue-del-deployment","text":"Kubectl es una herramienta que nos permite interaccionar con cualquier cluster de Kubernetes, desde un shell. Para crear el deployment: kubectl apply -f ./deployment.yaml contestaci\u00f3n: deployment.apps/tomcat-deployment created Exponemos el despliegue para que nos asocie una IP y puerto kubectl expose deployment tomcat-deployment --type=NodePort Contestaci\u00f3n: service/tomcat-deployment exposed Para saber la IP y el puerto en el que nos ha expuesto el servicio: minikube service tomcat-deployment --url Contestaci\u00f3n: http://192.168.99.100:30836 Si accedemos a esta URL veremos que est\u00e1 el servidor Tomcat escuchando","title":"Despliegue del deployment"},{"location":"kubernetes/escalado%20y%20replicacion/","text":"Escalado y replicaci\u00f3n Escalado y replicaci\u00f3n Escalado modificando el despliegue Escalado por comando Crear servicio de balanceo de carga Mostrar informaci\u00f3n del balanceador Nos puede interesar tener m\u00e1s de una instancia de un POD, pero por necesidades de demanda o por disponibilidad, nos puede interesar tener r\u00e9plicas de un POD. Vamos a ver c\u00f3mo utilizar esto en aplicaciones stateless. La forma m\u00e1s habitual es especificar el par\u00e1metro replica en nuestro despliegue. Escalado modificando el despliegue Podemos hacer varias cosas, entre ellas podemos cambiar el despliegue para que nos cree 4 r\u00e9plicas del POD. apiVersion: apps/v1beta2 kind: Deployment metadata: name: tomcat-deployment spec: selector: matchLabels:1 app: tomcat replicas: 4 ... ... Escalado por comando Otra opci\u00f3n es no modificar el despliegue (dejarlo a replicas=1 y ejecutar el comando scale para decirle cuantas r\u00e9plicas quiero kubectl scale --replicas=4 deployment/tomcat-deployment deployment.extensions/tomcat-deployment scaled Veremos que ahora los despliegues nos mostrar\u00e1n el n\u00famero de r\u00e9plicas: kubectl get deployments NAME READY UP-TO-DATE AVAILABLE AGE hazelcast 0/1 1 0 29m hello-minikube 1/1 1 1 6d20h tomcat-deployment 4/4 4 4 53m Ahora tenemos un problema de red, puesto que cuando \u00fanicamente ten\u00edamos un POD, mape\u00e1bamos un puerto suyo con uno accesible externamente. Para que los 4 puedan escuchar en el mismo puerto y se repartan las peticiones de servicio entre todos, necesitaremos un balanceador de carga . Crear servicio de balanceo de carga Crearemos un servicio para utilizar un load balancer que exponga un \u00fanico puerto externo y balancear la carga a los diferentes pods. Ojo que est\u00e1 en varias l\u00edneas pero es una sola. kubectl expose deployment tomcat-deployment --type=LoadBalancer --port=8080 --target-port 8080 --name=tomcat-load-balancer A lo que nos contesta: service/tomcat-load-balancer exposed Como podemos ver, hemos asignado el balanceador al despliegue tomcat-deployment , para que act\u00fae sobre \u00e9l. Mostrar informaci\u00f3n del balanceador Vamos a ver c\u00f3mo ha quedado la cosa, mirando la descripci\u00f3n del balanceador que hemos creado: kubectl describe service tomcat-load-balancer La respuesta nos indica que hemos mapeado el puerto 8080 al 8080 de cada uno de los 4 PODs que tenemos en ejecuci\u00f3n. Se encargar\u00e1 de redirigir las peticiones a uno de ellos, repartiendo la carga. Name: tomcat-load-balancer Namespace: default Labels: <none> Annotations: <none> Selector: app=tomcat Type: LoadBalancer IP: 10.96.43.114 Port: <unset> 8080/TCP TargetPort: 8080/TCP NodePort: <unset> 30854/TCP Endpoints: 172.17.0.5:8080,172.17.0.7:8080,172.17.0.8:8080 + 1 more... Session Affinity: None External Traffic Policy: Cluster Events: <none> Como podemos ver, las peticiones al puerto 8080 de la IP 10.96.43.114 se distribuir\u00e1n a los endpoints: 172.17.0.5:8080 172.17.0.7:8080 etc.","title":"Escalado y replicacion"},{"location":"kubernetes/escalado%20y%20replicacion/#escalado-y-replicacion","text":"Escalado y replicaci\u00f3n Escalado modificando el despliegue Escalado por comando Crear servicio de balanceo de carga Mostrar informaci\u00f3n del balanceador Nos puede interesar tener m\u00e1s de una instancia de un POD, pero por necesidades de demanda o por disponibilidad, nos puede interesar tener r\u00e9plicas de un POD. Vamos a ver c\u00f3mo utilizar esto en aplicaciones stateless. La forma m\u00e1s habitual es especificar el par\u00e1metro replica en nuestro despliegue.","title":"Escalado y replicaci\u00f3n"},{"location":"kubernetes/escalado%20y%20replicacion/#escalado-modificando-el-despliegue","text":"Podemos hacer varias cosas, entre ellas podemos cambiar el despliegue para que nos cree 4 r\u00e9plicas del POD. apiVersion: apps/v1beta2 kind: Deployment metadata: name: tomcat-deployment spec: selector: matchLabels:1 app: tomcat replicas: 4 ... ...","title":"Escalado modificando el despliegue"},{"location":"kubernetes/escalado%20y%20replicacion/#escalado-por-comando","text":"Otra opci\u00f3n es no modificar el despliegue (dejarlo a replicas=1 y ejecutar el comando scale para decirle cuantas r\u00e9plicas quiero kubectl scale --replicas=4 deployment/tomcat-deployment deployment.extensions/tomcat-deployment scaled Veremos que ahora los despliegues nos mostrar\u00e1n el n\u00famero de r\u00e9plicas: kubectl get deployments NAME READY UP-TO-DATE AVAILABLE AGE hazelcast 0/1 1 0 29m hello-minikube 1/1 1 1 6d20h tomcat-deployment 4/4 4 4 53m Ahora tenemos un problema de red, puesto que cuando \u00fanicamente ten\u00edamos un POD, mape\u00e1bamos un puerto suyo con uno accesible externamente. Para que los 4 puedan escuchar en el mismo puerto y se repartan las peticiones de servicio entre todos, necesitaremos un balanceador de carga .","title":"Escalado por comando"},{"location":"kubernetes/escalado%20y%20replicacion/#crear-servicio-de-balanceo-de-carga","text":"Crearemos un servicio para utilizar un load balancer que exponga un \u00fanico puerto externo y balancear la carga a los diferentes pods. Ojo que est\u00e1 en varias l\u00edneas pero es una sola. kubectl expose deployment tomcat-deployment --type=LoadBalancer --port=8080 --target-port 8080 --name=tomcat-load-balancer A lo que nos contesta: service/tomcat-load-balancer exposed Como podemos ver, hemos asignado el balanceador al despliegue tomcat-deployment , para que act\u00fae sobre \u00e9l.","title":"Crear servicio de balanceo de carga"},{"location":"kubernetes/escalado%20y%20replicacion/#mostrar-informacion-del-balanceador","text":"Vamos a ver c\u00f3mo ha quedado la cosa, mirando la descripci\u00f3n del balanceador que hemos creado: kubectl describe service tomcat-load-balancer La respuesta nos indica que hemos mapeado el puerto 8080 al 8080 de cada uno de los 4 PODs que tenemos en ejecuci\u00f3n. Se encargar\u00e1 de redirigir las peticiones a uno de ellos, repartiendo la carga. Name: tomcat-load-balancer Namespace: default Labels: <none> Annotations: <none> Selector: app=tomcat Type: LoadBalancer IP: 10.96.43.114 Port: <unset> 8080/TCP TargetPort: 8080/TCP NodePort: <unset> 30854/TCP Endpoints: 172.17.0.5:8080,172.17.0.7:8080,172.17.0.8:8080 + 1 more... Session Affinity: None External Traffic Policy: Cluster Events: <none> Como podemos ver, las peticiones al puerto 8080 de la IP 10.96.43.114 se distribuir\u00e1n a los endpoints: 172.17.0.5:8080 172.17.0.7:8080 etc.","title":"Mostrar informaci\u00f3n del balanceador"},{"location":"kubernetes/etiquetas%20y%20selectores/","text":"Etiquetas y selectores Puedo etiquetar diferentes nodos (m\u00e1quinas), de tal forma que en los despliegues puedo especificar en qu\u00e9 tipo de nodos quiero que se despliegue un pod en concreto. Para ello: Etiqueto el nodo o nodos que quiero agrupar Modifico el YAML del despliegue agregando una opci\u00f3n NodeSelector, especificando la etiqueta sobre la que quiero hacer el despliegue. De este modo, el pod s\u00f3lo se va a ejecutar sobre los nodos que est\u00e9n etiquetados de este modo.","title":"Etiquetas y selectores"},{"location":"kubernetes/etiquetas%20y%20selectores/#etiquetas-y-selectores","text":"Puedo etiquetar diferentes nodos (m\u00e1quinas), de tal forma que en los despliegues puedo especificar en qu\u00e9 tipo de nodos quiero que se despliegue un pod en concreto. Para ello: Etiqueto el nodo o nodos que quiero agrupar Modifico el YAML del despliegue agregando una opci\u00f3n NodeSelector, especificando la etiqueta sobre la que quiero hacer el despliegue. De este modo, el pod s\u00f3lo se va a ejecutar sobre los nodos que est\u00e9n etiquetados de este modo.","title":"Etiquetas y selectores"},{"location":"kubernetes/kubectl%20y%20pods/","text":"Trabajando con PODs y kubectl Listar PODs en ejecuci\u00f3n Ver informaci\u00f3n de un pod Ejecutar comandos dentro de un pod Desplegar PODs sin crear un deployment Trabajando con PODs y kubectl Listar PODs en ejecuci\u00f3n Podemos comprobar cuantos pods tengo en marcha. En este caso hay dos pods en ejecuci\u00f3n kubectl get pods Nos mostrar\u00e1 la informaci\u00f3n de los pods existentes. NAME READY STATUS RESTARTS AGE hello-minikube-5857d96c67-nt4x7 1/1 Running 1 6d19h tomcat-deployment-5c4b9b9c99-zp7t5 1/1 Running 0 13m Ver informaci\u00f3n de un pod Vamos a ver m\u00e1s informaci\u00f3n de un pod concreto si le pasamos el nombre: kubectl describe pods tomcat-deployment-5c4b9b9c99-zp7t5 Nos devuelve: Name: tomcat-deployment-5c4b9b9c99-zp7t5 Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Wed, 03 Apr 2019 12:13:19 +0200 Labels: app=tomcat pod-template-hash=5c4b9b9c99 Annotations: <none> Status: Running IP: 172.17.0.5 Controlled By: ReplicaSet/tomcat-deployment-5c4b9b9c99 Containers: tomcat: Container ID: docker://d2a6f90d7b42598dd8971862bcbfb3f56d43acf7f55f1a5f4e2b4ab737050ce6 Image: tomcat:9.0 Image ID: docker-pullable://tomcat@sha256:3f4b2548996ffd6d7984f76557fc4db75f92e155340191f7a7325b1f751d10ac Port: 8080/TCP Host Port: 0/TCP State: Running Started: Wed, 03 Apr 2019 12:14:39 +0200 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-6zhlc (ro) Ejecutar comandos dentro de un pod Podemos ejecutar un comando dentro de un pod pas\u00e1ndoselo como par\u00e1metro. En este caso abrimos un shell dentro del pod, que nos puede servir para debuguear. kubectl exec -it tomcat-deployment-5c4b9b9c99-zp7t5 bash En este caso entraremos en la shell del pod root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# ls BUILDING.txt LICENSE README.md RUNNING.txt conf lib native-jni-lib webapps CONTRIBUTING.md NOTICE RELEASE-NOTES bin include logs temp work root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# whoami root root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# uname -r 4.15.0 Desplegar PODs sin crear un deployment Podemos utilizarlo para desplegar PODs directamente sin tener que crear un archivo de despliegue. kubectl run hazelcast --image=hazelcast --port=5701 deployment.apps/hazelcast created","title":"Kubectl y pods"},{"location":"kubernetes/kubectl%20y%20pods/#trabajando-con-pods-y-kubectl","text":"","title":"Trabajando con PODs y kubectl"},{"location":"kubernetes/kubectl%20y%20pods/#listar-pods-en-ejecucion","text":"Podemos comprobar cuantos pods tengo en marcha. En este caso hay dos pods en ejecuci\u00f3n kubectl get pods Nos mostrar\u00e1 la informaci\u00f3n de los pods existentes. NAME READY STATUS RESTARTS AGE hello-minikube-5857d96c67-nt4x7 1/1 Running 1 6d19h tomcat-deployment-5c4b9b9c99-zp7t5 1/1 Running 0 13m","title":"Listar PODs en ejecuci\u00f3n"},{"location":"kubernetes/kubectl%20y%20pods/#ver-informacion-de-un-pod","text":"Vamos a ver m\u00e1s informaci\u00f3n de un pod concreto si le pasamos el nombre: kubectl describe pods tomcat-deployment-5c4b9b9c99-zp7t5 Nos devuelve: Name: tomcat-deployment-5c4b9b9c99-zp7t5 Namespace: default Priority: 0 PriorityClassName: <none> Node: minikube/10.0.2.15 Start Time: Wed, 03 Apr 2019 12:13:19 +0200 Labels: app=tomcat pod-template-hash=5c4b9b9c99 Annotations: <none> Status: Running IP: 172.17.0.5 Controlled By: ReplicaSet/tomcat-deployment-5c4b9b9c99 Containers: tomcat: Container ID: docker://d2a6f90d7b42598dd8971862bcbfb3f56d43acf7f55f1a5f4e2b4ab737050ce6 Image: tomcat:9.0 Image ID: docker-pullable://tomcat@sha256:3f4b2548996ffd6d7984f76557fc4db75f92e155340191f7a7325b1f751d10ac Port: 8080/TCP Host Port: 0/TCP State: Running Started: Wed, 03 Apr 2019 12:14:39 +0200 Ready: True Restart Count: 0 Environment: <none> Mounts: /var/run/secrets/kubernetes.io/serviceaccount from default-token-6zhlc (ro)","title":"Ver informaci\u00f3n de un pod"},{"location":"kubernetes/kubectl%20y%20pods/#ejecutar-comandos-dentro-de-un-pod","text":"Podemos ejecutar un comando dentro de un pod pas\u00e1ndoselo como par\u00e1metro. En este caso abrimos un shell dentro del pod, que nos puede servir para debuguear. kubectl exec -it tomcat-deployment-5c4b9b9c99-zp7t5 bash En este caso entraremos en la shell del pod root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# ls BUILDING.txt LICENSE README.md RUNNING.txt conf lib native-jni-lib webapps CONTRIBUTING.md NOTICE RELEASE-NOTES bin include logs temp work root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# whoami root root@tomcat-deployment-5c4b9b9c99-zp7t5:/usr/local/tomcat# uname -r 4.15.0","title":"Ejecutar comandos dentro de un pod"},{"location":"kubernetes/kubectl%20y%20pods/#desplegar-pods-sin-crear-un-deployment","text":"Podemos utilizarlo para desplegar PODs directamente sin tener que crear un archivo de despliegue. kubectl run hazelcast --image=hazelcast --port=5701 deployment.apps/hazelcast created","title":"Desplegar PODs sin crear un deployment"},{"location":"kubernetes/playground%20k8s/","text":"Playground para k8s Crear un cluster de kubernetes puede ser una tarea complicada, por lo que existe la posibilidad de utilizar un entorno de pruebas predefinido. Podemos entrar en un sandbox online para probar cosas: https://labs.play-with-k8s.com/ Nos pedir\u00e1 logearnos con GitHub.","title":"Playground k8s"},{"location":"kubernetes/playground%20k8s/#playground-para-k8s","text":"Crear un cluster de kubernetes puede ser una tarea complicada, por lo que existe la posibilidad de utilizar un entorno de pruebas predefinido. Podemos entrar en un sandbox online para probar cosas: https://labs.play-with-k8s.com/ Nos pedir\u00e1 logearnos con GitHub.","title":"Playground para k8s"},{"location":"kubernetes/readme/","text":"kubernetes Es un sistema de gesti\u00f3n y orquestaci\u00f3n de contenedores. Permite automatizar el despliegue, escalado y gesti\u00f3n de contenedores. Con Docker-compose puedo desplegar varios contenedores sobre el mismo nodo creando servicios. A\u00f1ade un nivel de abstracci\u00f3n m\u00e1s por encima de Docker. A k8s le puedo escribir en un archivo YAML : Qu\u00e9 im\u00e1genes de docker quiero que coja Decirle que quiero 10 contenedores de estos, 5 de estos, y 3 de estos. Le digo que tengo 30 nodos (m\u00e1quinas) a su disposici\u00f3n Le pido que ejecute todos los contenedores y que se asegure que siempre \u00c9l los distribuye sobre los nodos del cluster Se asegurar\u00e1 de que habr\u00e1 el n\u00famero que yo le diga de contenedores en marcha Puedo asignar recursos a los contenedores y hacer que se asegure que tiene los recursos que necesita. En resumen, defino el estado final completo que yo quiero para mi infraestructura. Puedo ejecutar k8s en uno o m\u00e1s clouds, y k8s se asegurar\u00e1 que la infraestructura quede como yo le digo. Los nodos tendr\u00e1n diferentes roles. Algunos har\u00e1n de master , con los que yo me comunicar\u00e9. Puedo decirle que tengo estos nodos, que pueden ser, por ejemplo: Instancias EC2 Google Compute Instances Estos ser\u00e1n los nodos worker o minions . Los asocio a los nodos m\u00e1ster para que puedan ejecutar contenedores en esos nodos. Minikube Minikube es una herramienta que facilita la ejecuci\u00f3n local de Kubernetes. Minikube ejecuta un cl\u00faster Kubernetes de un solo nodo dentro de una m\u00e1quina virtual. Proporciona una soluci\u00f3n sencilla para usuarios que desean probar Kubernetes o desarrollar soluciones sobre \u00e9l.","title":"kubernetes"},{"location":"kubernetes/readme/#kubernetes","text":"Es un sistema de gesti\u00f3n y orquestaci\u00f3n de contenedores. Permite automatizar el despliegue, escalado y gesti\u00f3n de contenedores. Con Docker-compose puedo desplegar varios contenedores sobre el mismo nodo creando servicios. A\u00f1ade un nivel de abstracci\u00f3n m\u00e1s por encima de Docker. A k8s le puedo escribir en un archivo YAML : Qu\u00e9 im\u00e1genes de docker quiero que coja Decirle que quiero 10 contenedores de estos, 5 de estos, y 3 de estos. Le digo que tengo 30 nodos (m\u00e1quinas) a su disposici\u00f3n Le pido que ejecute todos los contenedores y que se asegure que siempre \u00c9l los distribuye sobre los nodos del cluster Se asegurar\u00e1 de que habr\u00e1 el n\u00famero que yo le diga de contenedores en marcha Puedo asignar recursos a los contenedores y hacer que se asegure que tiene los recursos que necesita. En resumen, defino el estado final completo que yo quiero para mi infraestructura. Puedo ejecutar k8s en uno o m\u00e1s clouds, y k8s se asegurar\u00e1 que la infraestructura quede como yo le digo. Los nodos tendr\u00e1n diferentes roles. Algunos har\u00e1n de master , con los que yo me comunicar\u00e9. Puedo decirle que tengo estos nodos, que pueden ser, por ejemplo: Instancias EC2 Google Compute Instances Estos ser\u00e1n los nodos worker o minions . Los asocio a los nodos m\u00e1ster para que puedan ejecutar contenedores en esos nodos.","title":"kubernetes"},{"location":"kubernetes/readme/#minikube","text":"Minikube es una herramienta que facilita la ejecuci\u00f3n local de Kubernetes. Minikube ejecuta un cl\u00faster Kubernetes de un solo nodo dentro de una m\u00e1quina virtual. Proporciona una soluci\u00f3n sencilla para usuarios que desean probar Kubernetes o desarrollar soluciones sobre \u00e9l.","title":"Minikube"},{"location":"vagrant/vagrant/","text":"Vagrant Vagrant Introducci\u00f3n Caracter\u00edsticas C\u00f3mo instalarlo Boxes Creaci\u00f3n de boxes Cosas que puedes hacer con Vagrant Vagrantfiles Comandos vagrant Version utilizada Descargando boxes Inicializando configuraciones (Vagrantfile) Conectando con las m\u00e1quinas virtuales Parando m\u00e1quinas Configuraciones de Vagrant Aprovisionamiento Herramientas de aprovisionamiento Ejemplos de aprovisionamiento shell script ansible Ejecucion de un playbook Proyectos en este repositorio vagrant-ansible vagrant-mult vagrant-wordpress Introducci\u00f3n Vagrant es una herramienta que permite crear entornos de desarrollo basados en m\u00e1quinas virtuales. La idea es crear entornos que sean lo m\u00e1s parecido o id\u00e9nticos a los servidores de producci\u00f3n. El objetivo es solucionar el problema de \"en mi m\u00e1quina funciona\". Si definimos un entorno determinado, lo podemos ejecutar en cualquier lugar, sabiendo que cada vez que implemente en un sitio diferente se crear\u00e1n las mismas m\u00e1quinas y funcionar\u00e1n de la misma forma. Caracter\u00edsticas Caracter\u00edsticas de Vagrant: Agrega una capa por encima del software de virtualizaci\u00f3n (Virtualbox, VMware, etc). Est\u00e1 escrito en Ruby Inicialmente se construy\u00f3 para ser utilizado con VirtualBox como hipervisor Actualmente soporta muchos m\u00e1s. Vagrant permite crear entornos de desarrollo: Reproducibles Portables Ligeros C\u00f3mo instalarlo Para poner en macha Vagrant necesitaremos, por lo menos: Descargar e instalar VirtualBox (si es el hipervisor elegido). apt install virtualbox Descargar e instalar Vagrant apt install vagrant Descargar la box de vagrant que queramos En caso de aprovisionamiento con ansible: apt install ansible Boxes Una box es un archivo (tareado y gzipeado) parecida a una imagen de m\u00e1quina virtual, lista para ejecutarse (sin necesidad de instalaci\u00f3n). Las podemos: Descargar de diferentes proveedores Crear nosotros manualmente Cada box contiene: Un Vagrantfile Una imagen de m\u00e1quina virtual ( vmdk ) Un archivo OVF que define el hardware virtual del box Un archivo JSON que define que proveedor trabaja con la caja Creaci\u00f3n de boxes Las boxes se pueden crear: Utilizando herramientas (packer.io, imagefactory) Manualmente a trav\u00e9s del comando vagrant package. Cosas que puedes hacer con Vagrant Redactando correctamenteun archivo de configuraci\u00f3n podemos: Arrancar y parar m\u00e1quinas Customizar las MV con tantos CPU cores, memoria como queramos Conectar por SSH a las diferentes m\u00e1quinas con vagrant ssh Aprovisionar las m\u00e1quinas con todo lo que se necesite, utilizando Puppet, chef, ansible, shell, etc. Vagrantfiles La configuraci\u00f3n del entorno que queremos implementar se realiza en un archivo de texto plano escrito en Ruby llamado Vagrantfile (similar a los Dockerfiles). A trav\u00e9s de este archivo podemos definir el entorno que queramos, y podemos: Configurar m\u00e1quinas virtuales Comandos vagrant Version utilizada Para conocer la versi\u00f3n de Vagrant instalada: vagrant version Descargando boxes Podemos consultar las boxes que hay publicadas en: https://app.vagrantup.com/boxes/search Para descargar una box de una m\u00e1quina virtual concreta: vagrant box ubuntu/precise64 Podemos listar las boxes que tenemos descargadas. Si una box no est\u00e1 descargada pero hacemos un vagrant up se descargar\u00e1 la primera vez. vagrant box list Inicializando configuraciones (Vagrantfile) Creamos una carpeta para guardar los archivos de configuraci\u00f3n, y una vez dentro inicializamos vagrant en esta carpeta: vagrant init Nos ha creado el archivo Vagrantfile que procederemos a adaptar a nuestras necesidades. Para hacer un init no tiene que existir ning\u00fan Vagrantfile. Una vez definido el vagrantfile ya podemos levantar la/s MV: vagrant up Veremos que nos empieza a descargar la box, que no estaba descargada en el equipo Bringing machine 'default' up with 'virtualbox' provider... ==> default: Box 'ubuntu/precise64' could not be found. Attempting to find and install... default: Box Provider: virtualbox default: Box Version: >= 0 ==> default: Loading metadata for box 'ubuntu/precise64' default: URL: https://vagrantcloud.com/ubuntu/precise64 ==> default: Adding box 'ubuntu/precise64' (v20170427.0.0) for provider: virtualbox default: Downloading: https://vagrantcloud.com/ubuntu/boxes/precise64/versions/20170427.0.0/providers/virtualbox.box default: Download redirected to host: cloud-images.ubuntu.com Podemos ver qu\u00e9 MV tenemos levantadas con: vagrant status Conectando con las m\u00e1quinas virtuales Podemos conectar a la m\u00e1quina con la un comando SSH de vagrant. Otra opci\u00f3n es desocultar la MV (que habr\u00e1 arrancado en Virtualbox en modo oculto), o bien tirar de putty. vagrant ssh M\u00e1gicamente se nos meter\u00e1 por ssh en la MV, sin pedir contrase\u00f1a. Una vez dentro podemos hacer lo que queramos. Si solo tenemos una MV levantada, se conectar\u00e1 a esta. Si tenemos m\u00e1s de una, pedir\u00e1 el nombre de la MV. Salimos con exit Parando m\u00e1quinas Para cerrar las m\u00e1quinas virtuales por las buenas: vagrant halt Las podemos volver a levantar con un up. Para destruir la m\u00e1quina virtual (veremos que ya no aparece en Virtualbox) vagrant destroy Configuraciones de Vagrant Todas las configuraciones se guardan en una carpeta oculta llamada .vagrant. Estas configuraciones se pueden subir a github y llevar un control de versiones, al ser la configuraci\u00f3n guardada en archivos de texto plano. Las boxes se meten en la carpeta que tengamos definida en Virtualbox para almacenar las MV. Aprovisionamiento Cuando preparamos un entorno de desarrollo, se suele hacer de forma manual. Se ejecutan los comandos necesarios en el SO guest para personalizar nuestro entorno. Esto lo podemos automatizar, almacenando los comandos a realizar en scripts especiales. Estos scripts son los que se ejecutar\u00e1n autom\u00e1ticamente al levantar las MV. Este proceso de instalar y configurar software dentro del SO guest autom\u00e1ticamente se conoce como aprovisionamiento . Herramientas de aprovisionamiento Existen diferentes herramientas para ello: Shell scripts Puppet Ansible Chef Ejemplos de aprovisionamiento shell To-do script To-do ansible Para aprovisionar con Ansible, podemos tener un playbook creado en la misma carpeta. Lo habitual es crear un archivo hosts para ello. Si no le decimos nada, en distribuciones linux buscar\u00e1 el archivo en /etc/ansible/hosts . Si no queremos que coja ese, y queremos que coja uno que queramos nosotros (en este caso en la misma carpeta del playbook): ansible-playbook instrucciones.yml -i hosts Ejecucion de un playbook La primera vez nos pedir\u00e1 confirmaci\u00f3n: PLAY [Configurar webserver con nginx] ************************************************************************** TASK [Gathering Facts] ***************************************************************************************** The authenticity of host '[127.0.0.1]:2222 ([127.0.0.1]:2222)' can't be established. ECDSA key fingerprint is SHA256:MGWE4lf8Hgq9vYEe4Qr52RJNKpM9mfN124g96Y/xc2Y. Are you sure you want to continue connecting (yes/no)? Proyectos en este repositorio vagrant-ansible La idea es aprovisionar m\u00e1quinas virtuales a trav\u00e9s de un playbook de ansible. vagrant-mult Automatizar el aprovisionamiento de varias MV en un \u00fanico Vagrantfile vagrant-wordpress Automatizar y aprovisionar una MV con wordpress","title":"Vagrant"},{"location":"vagrant/vagrant/#vagrant","text":"Vagrant Introducci\u00f3n Caracter\u00edsticas C\u00f3mo instalarlo Boxes Creaci\u00f3n de boxes Cosas que puedes hacer con Vagrant Vagrantfiles Comandos vagrant Version utilizada Descargando boxes Inicializando configuraciones (Vagrantfile) Conectando con las m\u00e1quinas virtuales Parando m\u00e1quinas Configuraciones de Vagrant Aprovisionamiento Herramientas de aprovisionamiento Ejemplos de aprovisionamiento shell script ansible Ejecucion de un playbook Proyectos en este repositorio vagrant-ansible vagrant-mult vagrant-wordpress","title":"Vagrant"},{"location":"vagrant/vagrant/#introduccion","text":"Vagrant es una herramienta que permite crear entornos de desarrollo basados en m\u00e1quinas virtuales. La idea es crear entornos que sean lo m\u00e1s parecido o id\u00e9nticos a los servidores de producci\u00f3n. El objetivo es solucionar el problema de \"en mi m\u00e1quina funciona\". Si definimos un entorno determinado, lo podemos ejecutar en cualquier lugar, sabiendo que cada vez que implemente en un sitio diferente se crear\u00e1n las mismas m\u00e1quinas y funcionar\u00e1n de la misma forma.","title":"Introducci\u00f3n"},{"location":"vagrant/vagrant/#caracteristicas","text":"Caracter\u00edsticas de Vagrant: Agrega una capa por encima del software de virtualizaci\u00f3n (Virtualbox, VMware, etc). Est\u00e1 escrito en Ruby Inicialmente se construy\u00f3 para ser utilizado con VirtualBox como hipervisor Actualmente soporta muchos m\u00e1s. Vagrant permite crear entornos de desarrollo: Reproducibles Portables Ligeros","title":"Caracter\u00edsticas"},{"location":"vagrant/vagrant/#como-instalarlo","text":"Para poner en macha Vagrant necesitaremos, por lo menos: Descargar e instalar VirtualBox (si es el hipervisor elegido). apt install virtualbox Descargar e instalar Vagrant apt install vagrant Descargar la box de vagrant que queramos En caso de aprovisionamiento con ansible: apt install ansible","title":"C\u00f3mo instalarlo"},{"location":"vagrant/vagrant/#boxes","text":"Una box es un archivo (tareado y gzipeado) parecida a una imagen de m\u00e1quina virtual, lista para ejecutarse (sin necesidad de instalaci\u00f3n). Las podemos: Descargar de diferentes proveedores Crear nosotros manualmente Cada box contiene: Un Vagrantfile Una imagen de m\u00e1quina virtual ( vmdk ) Un archivo OVF que define el hardware virtual del box Un archivo JSON que define que proveedor trabaja con la caja","title":"Boxes"},{"location":"vagrant/vagrant/#creacion-de-boxes","text":"Las boxes se pueden crear: Utilizando herramientas (packer.io, imagefactory) Manualmente a trav\u00e9s del comando vagrant package.","title":"Creaci\u00f3n de boxes"},{"location":"vagrant/vagrant/#cosas-que-puedes-hacer-con-vagrant","text":"Redactando correctamenteun archivo de configuraci\u00f3n podemos: Arrancar y parar m\u00e1quinas Customizar las MV con tantos CPU cores, memoria como queramos Conectar por SSH a las diferentes m\u00e1quinas con vagrant ssh Aprovisionar las m\u00e1quinas con todo lo que se necesite, utilizando Puppet, chef, ansible, shell, etc.","title":"Cosas que puedes hacer con Vagrant"},{"location":"vagrant/vagrant/#vagrantfiles","text":"La configuraci\u00f3n del entorno que queremos implementar se realiza en un archivo de texto plano escrito en Ruby llamado Vagrantfile (similar a los Dockerfiles). A trav\u00e9s de este archivo podemos definir el entorno que queramos, y podemos: Configurar m\u00e1quinas virtuales","title":"Vagrantfiles"},{"location":"vagrant/vagrant/#comandos-vagrant","text":"","title":"Comandos vagrant"},{"location":"vagrant/vagrant/#version-utilizada","text":"Para conocer la versi\u00f3n de Vagrant instalada: vagrant version","title":"Version utilizada"},{"location":"vagrant/vagrant/#descargando-boxes","text":"Podemos consultar las boxes que hay publicadas en: https://app.vagrantup.com/boxes/search Para descargar una box de una m\u00e1quina virtual concreta: vagrant box ubuntu/precise64 Podemos listar las boxes que tenemos descargadas. Si una box no est\u00e1 descargada pero hacemos un vagrant up se descargar\u00e1 la primera vez. vagrant box list","title":"Descargando boxes"},{"location":"vagrant/vagrant/#inicializando-configuraciones-vagrantfile","text":"Creamos una carpeta para guardar los archivos de configuraci\u00f3n, y una vez dentro inicializamos vagrant en esta carpeta: vagrant init Nos ha creado el archivo Vagrantfile que procederemos a adaptar a nuestras necesidades. Para hacer un init no tiene que existir ning\u00fan Vagrantfile. Una vez definido el vagrantfile ya podemos levantar la/s MV: vagrant up Veremos que nos empieza a descargar la box, que no estaba descargada en el equipo Bringing machine 'default' up with 'virtualbox' provider... ==> default: Box 'ubuntu/precise64' could not be found. Attempting to find and install... default: Box Provider: virtualbox default: Box Version: >= 0 ==> default: Loading metadata for box 'ubuntu/precise64' default: URL: https://vagrantcloud.com/ubuntu/precise64 ==> default: Adding box 'ubuntu/precise64' (v20170427.0.0) for provider: virtualbox default: Downloading: https://vagrantcloud.com/ubuntu/boxes/precise64/versions/20170427.0.0/providers/virtualbox.box default: Download redirected to host: cloud-images.ubuntu.com Podemos ver qu\u00e9 MV tenemos levantadas con: vagrant status","title":"Inicializando configuraciones (Vagrantfile)"},{"location":"vagrant/vagrant/#conectando-con-las-maquinas-virtuales","text":"Podemos conectar a la m\u00e1quina con la un comando SSH de vagrant. Otra opci\u00f3n es desocultar la MV (que habr\u00e1 arrancado en Virtualbox en modo oculto), o bien tirar de putty. vagrant ssh M\u00e1gicamente se nos meter\u00e1 por ssh en la MV, sin pedir contrase\u00f1a. Una vez dentro podemos hacer lo que queramos. Si solo tenemos una MV levantada, se conectar\u00e1 a esta. Si tenemos m\u00e1s de una, pedir\u00e1 el nombre de la MV. Salimos con exit","title":"Conectando con las m\u00e1quinas virtuales"},{"location":"vagrant/vagrant/#parando-maquinas","text":"Para cerrar las m\u00e1quinas virtuales por las buenas: vagrant halt Las podemos volver a levantar con un up. Para destruir la m\u00e1quina virtual (veremos que ya no aparece en Virtualbox) vagrant destroy","title":"Parando m\u00e1quinas"},{"location":"vagrant/vagrant/#configuraciones-de-vagrant","text":"Todas las configuraciones se guardan en una carpeta oculta llamada .vagrant. Estas configuraciones se pueden subir a github y llevar un control de versiones, al ser la configuraci\u00f3n guardada en archivos de texto plano. Las boxes se meten en la carpeta que tengamos definida en Virtualbox para almacenar las MV.","title":"Configuraciones de Vagrant"},{"location":"vagrant/vagrant/#aprovisionamiento","text":"Cuando preparamos un entorno de desarrollo, se suele hacer de forma manual. Se ejecutan los comandos necesarios en el SO guest para personalizar nuestro entorno. Esto lo podemos automatizar, almacenando los comandos a realizar en scripts especiales. Estos scripts son los que se ejecutar\u00e1n autom\u00e1ticamente al levantar las MV. Este proceso de instalar y configurar software dentro del SO guest autom\u00e1ticamente se conoce como aprovisionamiento .","title":"Aprovisionamiento"},{"location":"vagrant/vagrant/#herramientas-de-aprovisionamiento","text":"Existen diferentes herramientas para ello: Shell scripts Puppet Ansible Chef","title":"Herramientas de aprovisionamiento"},{"location":"vagrant/vagrant/#ejemplos-de-aprovisionamiento","text":"","title":"Ejemplos de aprovisionamiento"},{"location":"vagrant/vagrant/#shell","text":"To-do","title":"shell"},{"location":"vagrant/vagrant/#script","text":"To-do","title":"script"},{"location":"vagrant/vagrant/#ansible","text":"Para aprovisionar con Ansible, podemos tener un playbook creado en la misma carpeta. Lo habitual es crear un archivo hosts para ello. Si no le decimos nada, en distribuciones linux buscar\u00e1 el archivo en /etc/ansible/hosts . Si no queremos que coja ese, y queremos que coja uno que queramos nosotros (en este caso en la misma carpeta del playbook): ansible-playbook instrucciones.yml -i hosts","title":"ansible"},{"location":"vagrant/vagrant/#ejecucion-de-un-playbook","text":"La primera vez nos pedir\u00e1 confirmaci\u00f3n: PLAY [Configurar webserver con nginx] ************************************************************************** TASK [Gathering Facts] ***************************************************************************************** The authenticity of host '[127.0.0.1]:2222 ([127.0.0.1]:2222)' can't be established. ECDSA key fingerprint is SHA256:MGWE4lf8Hgq9vYEe4Qr52RJNKpM9mfN124g96Y/xc2Y. Are you sure you want to continue connecting (yes/no)?","title":"Ejecucion de un playbook"},{"location":"vagrant/vagrant/#proyectos-en-este-repositorio","text":"","title":"Proyectos en este repositorio"},{"location":"vagrant/vagrant/#vagrant-ansible","text":"La idea es aprovisionar m\u00e1quinas virtuales a trav\u00e9s de un playbook de ansible.","title":"vagrant-ansible"},{"location":"vagrant/vagrant/#vagrant-mult","text":"Automatizar el aprovisionamiento de varias MV en un \u00fanico Vagrantfile","title":"vagrant-mult"},{"location":"vagrant/vagrant/#vagrant-wordpress","text":"Automatizar y aprovisionar una MV con wordpress","title":"vagrant-wordpress"},{"location":"windows%20server/1.%20SO%20en%20red/","text":"Introducci\u00f3n Los SO en red son sistemas que: Mantienen dos o m\u00e1s equipos unidos a trav\u00e9s de alg\u00fan medio de comunicaci\u00f3n Con la finalidad de compartir diferentes recursos, tanto f\u00edsicos como l\u00f3gicos. Se suelen basar en una arquitectura cliente / servidor. Estructura Servidores : equipos configurados con un SO en red que proporcionan recursos a los clientes Pueden ser dedicados o no dedicados Clientes : equipos configurados con un SO monousuario, que se conectan y validan en el servidor para poder empezar a trabajar en red. Pueden llamarse tambi\u00e9n estaciones de trabajo. Tipos de servidores Servidor de archivos Servidor de impresi\u00f3n Servidor de comunicaciones Servidor de correo electr\u00f3nico Servidor web Servidor FTP Servidor proxy Caracter\u00edsticas de los SO en red Conectar los equipos y recursos de la red. Coordinar las funciones de todos los perif\u00e9ricos y recursos. Proporcionar seguridad controlando el acceso a los datos y recursos. Optimizar la utilizaci\u00f3n de los recursos. La gesti\u00f3n de los recursos y de los equipos de la red se realiza de forma centralizada. Funciones del SO en red Compartir recursos. Diferentes niveles de acceso = privilegios Acceso a los recursos (P.ej., la cola de impresi\u00f3n) Gesti\u00f3n de usuarios. Gesti\u00f3n de la red. Bloqueo de archivos y registros. Distribuci\u00f3n de los espacios de los discos duros. Selecci\u00f3n de un SO en red A la hora de elegir un SO en red es importante tener en cuenta los siguientes par\u00e1metros: Nivel de seguridad N\u00famero de usuarios N\u00famero de equipos Interoperabilidad SOR tipo Windows Server Dise\u00f1ados para un entorno de servidores que trabajan con un modelo llamado dominio Un dominio es un conjunto de equipos (clientes y servidores)que comparten una pol\u00edtica de seguridad y una base de datos com\u00fan (directorio activo) Los servidores dentro de un dominio pueden actuar como: Controladores de dominio Servidores miembro","title":"Introducci\u00f3n"},{"location":"windows%20server/1.%20SO%20en%20red/#introduccion","text":"Los SO en red son sistemas que: Mantienen dos o m\u00e1s equipos unidos a trav\u00e9s de alg\u00fan medio de comunicaci\u00f3n Con la finalidad de compartir diferentes recursos, tanto f\u00edsicos como l\u00f3gicos. Se suelen basar en una arquitectura cliente / servidor.","title":"Introducci\u00f3n"},{"location":"windows%20server/1.%20SO%20en%20red/#estructura","text":"Servidores : equipos configurados con un SO en red que proporcionan recursos a los clientes Pueden ser dedicados o no dedicados Clientes : equipos configurados con un SO monousuario, que se conectan y validan en el servidor para poder empezar a trabajar en red. Pueden llamarse tambi\u00e9n estaciones de trabajo.","title":"Estructura"},{"location":"windows%20server/1.%20SO%20en%20red/#tipos-de-servidores","text":"Servidor de archivos Servidor de impresi\u00f3n Servidor de comunicaciones Servidor de correo electr\u00f3nico Servidor web Servidor FTP Servidor proxy","title":"Tipos de servidores"},{"location":"windows%20server/1.%20SO%20en%20red/#caracteristicas-de-los-so-en-red","text":"Conectar los equipos y recursos de la red. Coordinar las funciones de todos los perif\u00e9ricos y recursos. Proporcionar seguridad controlando el acceso a los datos y recursos. Optimizar la utilizaci\u00f3n de los recursos. La gesti\u00f3n de los recursos y de los equipos de la red se realiza de forma centralizada.","title":"Caracter\u00edsticas de los SO en red"},{"location":"windows%20server/1.%20SO%20en%20red/#funciones-del-so-en-red","text":"Compartir recursos. Diferentes niveles de acceso = privilegios Acceso a los recursos (P.ej., la cola de impresi\u00f3n) Gesti\u00f3n de usuarios. Gesti\u00f3n de la red. Bloqueo de archivos y registros. Distribuci\u00f3n de los espacios de los discos duros.","title":"Funciones del SO en red"},{"location":"windows%20server/1.%20SO%20en%20red/#seleccion-de-un-so-en-red","text":"A la hora de elegir un SO en red es importante tener en cuenta los siguientes par\u00e1metros: Nivel de seguridad N\u00famero de usuarios N\u00famero de equipos Interoperabilidad","title":"Selecci\u00f3n de un SO en red"},{"location":"windows%20server/1.%20SO%20en%20red/#sor-tipo-windows-server","text":"Dise\u00f1ados para un entorno de servidores que trabajan con un modelo llamado dominio Un dominio es un conjunto de equipos (clientes y servidores)que comparten una pol\u00edtica de seguridad y una base de datos com\u00fan (directorio activo) Los servidores dentro de un dominio pueden actuar como: Controladores de dominio Servidores miembro","title":"SOR tipo Windows Server"},{"location":"windows%20server/2.%20active%20directory/","text":"Convertir en servidor de red Funcionalidades necesarias Active directory Controladores de dominio Requisitos para montar active directory Ventajas de active directory Conceptos de active directory Dominio. Unidad organizativa (UO) Grupos. Objetos. Identificaci\u00f3n de un dominio Active directory y DNS Resoluci\u00f3n de nombres Definici\u00f3n del espacio de nombres B\u00fasqueda de los componentes de DA NetBIOS y DNS Convertir en servidor de red Hasta el momento, y tras la instalaci\u00f3n de Windows Server, lo \u00fanico que hemos hecho ha sido identificar al equipo en una red asign\u00e1ndole: Un nombre Una direcci\u00f3n IP Un grupo de trabajo De esta forma y por el momento nuestro equipo, salvando las diferencias, es como un equipo m\u00e1s de la red. Hasta ahora, a pesar de poder ofrecer m\u00e1s servicios, no le hemos instalado ning\u00fan rol ni caracter\u00edstica que lo diferencie del resto. Funcionalidades necesarias Es ahora el momento de hacer que este SO se convierta en un servidor de red, con funcionalidad para: Autenticaci\u00f3n de usuarios Gestionar de forma centralizada los recursos de la infraestructura de red. La forma m\u00e1s eficiente de realizar todo es mediante la creaci\u00f3n de los llamados dominios . En estos dominios se almacena de forma centralizada (facilitando as\u00ed la labor del administrador) informaci\u00f3n administrativa (cuentas de usuarios, impresoras, directorios, etc. Informaci\u00f3n de seguridad, facilitando as\u00ed la labor del administrador. Active directory WS utiliza el concepto de Directorio Activo ( Active Directory ) como almac\u00e9n de datos (objetos). El DA es un servicio de red que Guarda en una base de datos toda la informaci\u00f3n sobre los recursos de la red Permite el acceso de los usuarios a dichos recursos y a determinadas aplicaciones. Active directory: Permite que los usuarios tengan un \u00fanico inicio de sesi\u00f3n independientemente del ordenador en el que se sienten. A partir de iniciar sesi\u00f3n en el servidor podr\u00e1n acceder a los recursos de red a los que cada uno de ellos est\u00e9 autorizado. Hay que tener en cuenta que recursos de red pueden ser carpetas y archivos, equipos, los servicios del directorio, etc. Se convierte en un modelo para organizar, controlar y administrar de forma centralizada el acceso a los recursos de la red. Controladores de dominio Cuando instalemos un DA en uno o varios equipos Windows Server de nuestra red, convertimos a dichos equipos en controladores de dominio (Domain Controllers). El resto de los equipos de la red que no sean servidores pueden actuar como clientes del controlador de dominio y, por lo tanto, del dominio. Incluso pueden actuar como clientes los servidores que no se hayan convertido en controladores de dominio. Los clientes del dominio tienen acceso a la informaci\u00f3n almacenada en los controladores de dominio (cuentas de usuario, grupo, equipo, etc.). El DA es una herramienta fundamental de administraci\u00f3n de la infraestructura inform\u00e1tica de una empresa u organizaci\u00f3n con dominio. Requisitos para montar active directory Que el equipo Windows Server tenga un nombre \u00fanico en la red representativo de un dominio. El nombre de equipo y dominio no pueden coincidir. TCP/IP instalado y configurado manualmente y no de forma autom\u00e1tica con DHCP. Instalar y configurar el servicio de DNS. Este servidor DNS puede ser el mismo en el que se instale DA, ya que durante el proceso de instalaci\u00f3n de DA el SO se encarga de configurarlo adecuadamente de forma autom\u00e1tica. Tener m\u00e1s de 250 MB de espacio libre en disco y por lo menos una partici\u00f3n debe estar en formato NTFS, no necesariamente donde est\u00e9 instalado el SO. Que el usuario Administrador del equipo tenga contrase\u00f1a. Ventajas de active directory Una de las ventajas fundamentales del DA es separar la estructura l\u00f3gica de la organizaci\u00f3n (dominios) de la estructura f\u00edsica (topolog\u00eda de red). El DA permite a los administradores: Crear pol\u00edticas a nivel de empresa Aplicar actualizaciones a una organizaci\u00f3n completa Desplegar programas en m\u00faltiples ordenadores. El DA almacena informaci\u00f3n sobre una organizaci\u00f3n en una base de datos central. Conceptos de active directory La estructura de un DA se basa en los siguientes conceptos: Dominio. Estructura fundamental. Permite agrupar todos los objetos que se administran de forma estructural y jer\u00e1rquica. Unidad organizativa (UO) Es la unidad jer\u00e1rquica inferior al dominio Puede estar compuesta por una serie de objetos y/o por otras UO. Las unidades organizativas son contenedores del Directorio Activo. Grupos. Conjunto de objetos del mismo tipo que se utilizan fundamentalmente para la asignaci\u00f3n de derechos de acceso a los recursos (Normalmente usuarios) Objetos. Forman una representaci\u00f3n de un recurso de red, como pueden ser usuarios, impresoras, ordenadores, unidades de almacenamiento, etc. Identificaci\u00f3n de un dominio Cada dominio de WS queda identificado un\u00edvocamente mediante un nombre DNS: mcgrawhill.es. Cada equipo WS que forma parte de un dominio tiene un nombre que lo identifica dentro del dominio. Este nombre, que ser\u00e1 de tipo DNS, tambi\u00e9n llamado FQDN (Fully Qualified Domain Name) Constar\u00e1 de dos partes: Nombre NetBios del equipo + nombre DNS del dominio. Por ejemplo, server.mcgrawhill.es. Recordemos que el nombre NetBios del equipo es el nombre que le hemos dado al equipo durante el proceso de instalaci\u00f3n o el que se le asign\u00f3 en las tareas iniciales nada m\u00e1s terminar la instalaci\u00f3n del SO Active directory y DNS El DA utiliza los nombres y servicios DNS para 3 funciones principales: Resoluci\u00f3n de nombres Convertir los nombres de host (nombres de equipo) a direcciones IP. Definici\u00f3n del espacio de nombres DA utiliza las convenciones de nomenclatura de DNS para asignarles nombre a los dominios. B\u00fasqueda de los componentes de DA Para iniciar una sesi\u00f3n de red y utilizar los recursos de DA, el equipo que se conecta al dominio debe encontrar primero un controlador de dominio o servidor de cat\u00e1logo global para procesar la autenticaci\u00f3n de inicio de la sesi\u00f3n o la consulta. NetBIOS y DNS Microsoft se desprende de la interfaz NetBios que viene desde los \u00abantiguos sistemas\u00bb La sigue utilizando por razones de compatibilidad. En la actualidad estructura de dominios de Windows Server se basa en un sistema jer\u00e1rquico de nombres ampliamente aceptado, probado, normalizado: el espacio de nombres de DNS. La forma en que Windows Server encuentra los servicios de red es a trav\u00e9s del espacio de nombres de DNS y no a trav\u00e9s de NetBios.","title":"2. active directory"},{"location":"windows%20server/2.%20active%20directory/#convertir-en-servidor-de-red","text":"Hasta el momento, y tras la instalaci\u00f3n de Windows Server, lo \u00fanico que hemos hecho ha sido identificar al equipo en una red asign\u00e1ndole: Un nombre Una direcci\u00f3n IP Un grupo de trabajo De esta forma y por el momento nuestro equipo, salvando las diferencias, es como un equipo m\u00e1s de la red. Hasta ahora, a pesar de poder ofrecer m\u00e1s servicios, no le hemos instalado ning\u00fan rol ni caracter\u00edstica que lo diferencie del resto.","title":"Convertir en servidor de red"},{"location":"windows%20server/2.%20active%20directory/#funcionalidades-necesarias","text":"Es ahora el momento de hacer que este SO se convierta en un servidor de red, con funcionalidad para: Autenticaci\u00f3n de usuarios Gestionar de forma centralizada los recursos de la infraestructura de red. La forma m\u00e1s eficiente de realizar todo es mediante la creaci\u00f3n de los llamados dominios . En estos dominios se almacena de forma centralizada (facilitando as\u00ed la labor del administrador) informaci\u00f3n administrativa (cuentas de usuarios, impresoras, directorios, etc. Informaci\u00f3n de seguridad, facilitando as\u00ed la labor del administrador.","title":"Funcionalidades necesarias"},{"location":"windows%20server/2.%20active%20directory/#active-directory","text":"WS utiliza el concepto de Directorio Activo ( Active Directory ) como almac\u00e9n de datos (objetos). El DA es un servicio de red que Guarda en una base de datos toda la informaci\u00f3n sobre los recursos de la red Permite el acceso de los usuarios a dichos recursos y a determinadas aplicaciones. Active directory: Permite que los usuarios tengan un \u00fanico inicio de sesi\u00f3n independientemente del ordenador en el que se sienten. A partir de iniciar sesi\u00f3n en el servidor podr\u00e1n acceder a los recursos de red a los que cada uno de ellos est\u00e9 autorizado. Hay que tener en cuenta que recursos de red pueden ser carpetas y archivos, equipos, los servicios del directorio, etc. Se convierte en un modelo para organizar, controlar y administrar de forma centralizada el acceso a los recursos de la red.","title":"Active directory"},{"location":"windows%20server/2.%20active%20directory/#controladores-de-dominio","text":"Cuando instalemos un DA en uno o varios equipos Windows Server de nuestra red, convertimos a dichos equipos en controladores de dominio (Domain Controllers). El resto de los equipos de la red que no sean servidores pueden actuar como clientes del controlador de dominio y, por lo tanto, del dominio. Incluso pueden actuar como clientes los servidores que no se hayan convertido en controladores de dominio. Los clientes del dominio tienen acceso a la informaci\u00f3n almacenada en los controladores de dominio (cuentas de usuario, grupo, equipo, etc.). El DA es una herramienta fundamental de administraci\u00f3n de la infraestructura inform\u00e1tica de una empresa u organizaci\u00f3n con dominio.","title":"Controladores de dominio"},{"location":"windows%20server/2.%20active%20directory/#requisitos-para-montar-active-directory","text":"Que el equipo Windows Server tenga un nombre \u00fanico en la red representativo de un dominio. El nombre de equipo y dominio no pueden coincidir. TCP/IP instalado y configurado manualmente y no de forma autom\u00e1tica con DHCP. Instalar y configurar el servicio de DNS. Este servidor DNS puede ser el mismo en el que se instale DA, ya que durante el proceso de instalaci\u00f3n de DA el SO se encarga de configurarlo adecuadamente de forma autom\u00e1tica. Tener m\u00e1s de 250 MB de espacio libre en disco y por lo menos una partici\u00f3n debe estar en formato NTFS, no necesariamente donde est\u00e9 instalado el SO. Que el usuario Administrador del equipo tenga contrase\u00f1a.","title":"Requisitos para montar active directory"},{"location":"windows%20server/2.%20active%20directory/#ventajas-de-active-directory","text":"Una de las ventajas fundamentales del DA es separar la estructura l\u00f3gica de la organizaci\u00f3n (dominios) de la estructura f\u00edsica (topolog\u00eda de red). El DA permite a los administradores: Crear pol\u00edticas a nivel de empresa Aplicar actualizaciones a una organizaci\u00f3n completa Desplegar programas en m\u00faltiples ordenadores. El DA almacena informaci\u00f3n sobre una organizaci\u00f3n en una base de datos central.","title":"Ventajas de active directory"},{"location":"windows%20server/2.%20active%20directory/#conceptos-de-active-directory","text":"La estructura de un DA se basa en los siguientes conceptos:","title":"Conceptos de active directory"},{"location":"windows%20server/2.%20active%20directory/#dominio","text":"Estructura fundamental. Permite agrupar todos los objetos que se administran de forma estructural y jer\u00e1rquica.","title":"Dominio."},{"location":"windows%20server/2.%20active%20directory/#unidad-organizativa-uo","text":"Es la unidad jer\u00e1rquica inferior al dominio Puede estar compuesta por una serie de objetos y/o por otras UO. Las unidades organizativas son contenedores del Directorio Activo.","title":"Unidad organizativa (UO)"},{"location":"windows%20server/2.%20active%20directory/#grupos","text":"Conjunto de objetos del mismo tipo que se utilizan fundamentalmente para la asignaci\u00f3n de derechos de acceso a los recursos (Normalmente usuarios)","title":"Grupos."},{"location":"windows%20server/2.%20active%20directory/#objetos","text":"Forman una representaci\u00f3n de un recurso de red, como pueden ser usuarios, impresoras, ordenadores, unidades de almacenamiento, etc.","title":"Objetos."},{"location":"windows%20server/2.%20active%20directory/#identificacion-de-un-dominio","text":"Cada dominio de WS queda identificado un\u00edvocamente mediante un nombre DNS: mcgrawhill.es. Cada equipo WS que forma parte de un dominio tiene un nombre que lo identifica dentro del dominio. Este nombre, que ser\u00e1 de tipo DNS, tambi\u00e9n llamado FQDN (Fully Qualified Domain Name) Constar\u00e1 de dos partes: Nombre NetBios del equipo + nombre DNS del dominio. Por ejemplo, server.mcgrawhill.es. Recordemos que el nombre NetBios del equipo es el nombre que le hemos dado al equipo durante el proceso de instalaci\u00f3n o el que se le asign\u00f3 en las tareas iniciales nada m\u00e1s terminar la instalaci\u00f3n del SO","title":"Identificaci\u00f3n de un dominio"},{"location":"windows%20server/2.%20active%20directory/#active-directory-y-dns","text":"El DA utiliza los nombres y servicios DNS para 3 funciones principales:","title":"Active directory y DNS"},{"location":"windows%20server/2.%20active%20directory/#resolucion-de-nombres","text":"Convertir los nombres de host (nombres de equipo) a direcciones IP.","title":"Resoluci\u00f3n de nombres"},{"location":"windows%20server/2.%20active%20directory/#definicion-del-espacio-de-nombres","text":"DA utiliza las convenciones de nomenclatura de DNS para asignarles nombre a los dominios.","title":"Definici\u00f3n del espacio de nombres"},{"location":"windows%20server/2.%20active%20directory/#busqueda-de-los-componentes-de-da","text":"Para iniciar una sesi\u00f3n de red y utilizar los recursos de DA, el equipo que se conecta al dominio debe encontrar primero un controlador de dominio o servidor de cat\u00e1logo global para procesar la autenticaci\u00f3n de inicio de la sesi\u00f3n o la consulta.","title":"B\u00fasqueda de los componentes de DA"},{"location":"windows%20server/2.%20active%20directory/#netbios-y-dns","text":"Microsoft se desprende de la interfaz NetBios que viene desde los \u00abantiguos sistemas\u00bb La sigue utilizando por razones de compatibilidad. En la actualidad estructura de dominios de Windows Server se basa en un sistema jer\u00e1rquico de nombres ampliamente aceptado, probado, normalizado: el espacio de nombres de DNS. La forma en que Windows Server encuentra los servicios de red es a trav\u00e9s del espacio de nombres de DNS y no a trav\u00e9s de NetBios.","title":"NetBIOS y DNS"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/","text":"Como instalar el Directorio Activo Instalar el Directorio Activo para un controlador de dominio \u00fanico en una red en equipos con Windows Server 2016 1) Cambiar el nombre del equipo Antes de instalar el controlador de dominio, conviene cambiar el nombre del equipo, ya que esta operaci\u00f3n no se puede hacer a posteriori. Este nombre ser\u00e1 el identificador en la red y facilitar\u00e1 su ubicaci\u00f3n en la red. Podemos usar diferentes alternativas para modificarlo: Desde el Administrador del servidor (Server Manager) A trav\u00e9s de la opci\u00f3n Servidor local y, entonces, sobre el nombre del servidor. Con la opci\u00f3n Sistema Clic derecho sobre el bot\u00f3n Inicio, seleccionando la opci\u00f3n Sistema y entonces Configuraci\u00f3n avanzada del sistema. Cambiar el campo N\u00famero de equipo. Cambiar el nombre del equipo a ServidorDomini. Una vez cambiado el nombre se debe reiniciar el equipo. 2) Asignar una IP fija al servidor Al haber reiniciado debe ajustarse el direccionamiento de red del equipo. Es decir que se debe modificar la direcci\u00f3n IP del servidor. Para garantizar una estabilidad de la red se hace necesario dotar de una direcci\u00f3n IP est\u00e1tica, ya que si fuera din\u00e1mica podr\u00eda afectar la conectividad entre equipos y dominio. Para establecer la direcci\u00f3n IP en Windows Server 2.016 se puede hacer de diferentes formas: Desde el Panel de control / Redes e Internet / Centro de redes y recursos compartidos / Cambiar la configuraci\u00f3n del adaptador. Con un clic derecho en el icono de red de la barra de tareas y seleccionando Centro de redes y recursos compartidos / Cambiar la configuraci\u00f3n de el adaptador Otro pico sobre el Administrador del servidor hacer clic sobre el enlace de Ethernet ... En la ventana que aparece seleccionamos el adaptador de red actual, clic con bot\u00f3n derecho y Propiedades. des-seleccionar Protocolo de Internet versi\u00f3n 6 (TCP / IPv6) / seleccionar Protocolo de Internet versi\u00f3n 4 (TCP / IPv4) / Usar la siguiente direcci\u00f3n IP. Escribir las IPs adecuadas al equipo. La configuraci\u00f3n del equipo ser\u00e1: Direcci\u00f3n IP: 172.168.1.201 M\u00e1scara de subred: 255.255.0.0 Puerta de enlace: (la del router: 172.16.0.1) DNS principal: 127.0.0.1 DNS secundaria: la que se indique para acceder a Internet. 3\u00ba) Creaci\u00f3n del Directorio Activo (AD) Al igual que en Windows Server 2012, en la versi\u00f3n 2016 tampoco existe el orden dcpromo, as\u00ed que a\u00f1adiremos este rol directamente desde Server Manager. Para instalar el rol Servicios de dominio de Active Directorio, desde el Administrador del servidor, se selecciona la opci\u00f3n Agregar roles y caracter\u00edsticas, donde se inicia un asistente que nos indica que tenemos que comprobar que se han cumplido las siguientes tareas previas: La cuenta de Administrador tiene una contrase\u00f1a segura. Las direcciones IP, como las direcciones de red est\u00e1ticas, est\u00e1n configuradas. Las actualizaciones de Windows Update est\u00e1n instaladas. Hacer clic en Siguiente>. A continuaci\u00f3n se elige el tipo de instalaci\u00f3n, por defecto, Instalaci\u00f3n basada en caracter\u00edsticas o en roles. Siguente> y se selecciona el servidor de destino. (Como s\u00f3lo tenemos uno creado, apuntar\u00e1 a este). Otro pico en Siguiente y, de la lista de roles que aparece, se selecciona Servicios de dominio de Active Directory. Se muestra una ventana con la opci\u00f3n Agregar caracter\u00edsticas. Volvemos pulsar Siguiente, sin a\u00f1adir ninguna nueva caracter\u00edstica.","title":"Como instalar el Directorio Activo"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/#como-instalar-el-directorio-activo","text":"","title":"Como instalar el Directorio Activo"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/#instalar-el-directorio-activo-para-un-controlador-de-dominio-unico-en-una-red-en-equipos-con-windows-server-2016","text":"","title":"Instalar el Directorio Activo para un controlador de dominio \u00fanico en una red en equipos con Windows Server 2016"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/#1-cambiar-el-nombre-del-equipo","text":"Antes de instalar el controlador de dominio, conviene cambiar el nombre del equipo, ya que esta operaci\u00f3n no se puede hacer a posteriori. Este nombre ser\u00e1 el identificador en la red y facilitar\u00e1 su ubicaci\u00f3n en la red. Podemos usar diferentes alternativas para modificarlo: Desde el Administrador del servidor (Server Manager) A trav\u00e9s de la opci\u00f3n Servidor local y, entonces, sobre el nombre del servidor. Con la opci\u00f3n Sistema Clic derecho sobre el bot\u00f3n Inicio, seleccionando la opci\u00f3n Sistema y entonces Configuraci\u00f3n avanzada del sistema. Cambiar el campo N\u00famero de equipo. Cambiar el nombre del equipo a ServidorDomini. Una vez cambiado el nombre se debe reiniciar el equipo.","title":"1) Cambiar el nombre del equipo"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/#2-asignar-una-ip-fija-al-servidor","text":"Al haber reiniciado debe ajustarse el direccionamiento de red del equipo. Es decir que se debe modificar la direcci\u00f3n IP del servidor. Para garantizar una estabilidad de la red se hace necesario dotar de una direcci\u00f3n IP est\u00e1tica, ya que si fuera din\u00e1mica podr\u00eda afectar la conectividad entre equipos y dominio. Para establecer la direcci\u00f3n IP en Windows Server 2.016 se puede hacer de diferentes formas: Desde el Panel de control / Redes e Internet / Centro de redes y recursos compartidos / Cambiar la configuraci\u00f3n del adaptador. Con un clic derecho en el icono de red de la barra de tareas y seleccionando Centro de redes y recursos compartidos / Cambiar la configuraci\u00f3n de el adaptador Otro pico sobre el Administrador del servidor hacer clic sobre el enlace de Ethernet ... En la ventana que aparece seleccionamos el adaptador de red actual, clic con bot\u00f3n derecho y Propiedades. des-seleccionar Protocolo de Internet versi\u00f3n 6 (TCP / IPv6) / seleccionar Protocolo de Internet versi\u00f3n 4 (TCP / IPv4) / Usar la siguiente direcci\u00f3n IP. Escribir las IPs adecuadas al equipo. La configuraci\u00f3n del equipo ser\u00e1: Direcci\u00f3n IP: 172.168.1.201 M\u00e1scara de subred: 255.255.0.0 Puerta de enlace: (la del router: 172.16.0.1) DNS principal: 127.0.0.1 DNS secundaria: la que se indique para acceder a Internet.","title":"2) Asignar una IP fija al servidor"},{"location":"windows%20server/3.%20Instalar%20AD%20en%20WS/#3o-creacion-del-directorio-activo-ad","text":"Al igual que en Windows Server 2012, en la versi\u00f3n 2016 tampoco existe el orden dcpromo, as\u00ed que a\u00f1adiremos este rol directamente desde Server Manager. Para instalar el rol Servicios de dominio de Active Directorio, desde el Administrador del servidor, se selecciona la opci\u00f3n Agregar roles y caracter\u00edsticas, donde se inicia un asistente que nos indica que tenemos que comprobar que se han cumplido las siguientes tareas previas: La cuenta de Administrador tiene una contrase\u00f1a segura. Las direcciones IP, como las direcciones de red est\u00e1ticas, est\u00e1n configuradas. Las actualizaciones de Windows Update est\u00e1n instaladas. Hacer clic en Siguiente>. A continuaci\u00f3n se elige el tipo de instalaci\u00f3n, por defecto, Instalaci\u00f3n basada en caracter\u00edsticas o en roles. Siguente> y se selecciona el servidor de destino. (Como s\u00f3lo tenemos uno creado, apuntar\u00e1 a este). Otro pico en Siguiente y, de la lista de roles que aparece, se selecciona Servicios de dominio de Active Directory. Se muestra una ventana con la opci\u00f3n Agregar caracter\u00edsticas. Volvemos pulsar Siguiente, sin a\u00f1adir ninguna nueva caracter\u00edstica.","title":"3\u00ba) Creaci\u00f3n del Directorio Activo (AD)"},{"location":"windows%20server/Politicas%20de%20grupo/","text":"Pol\u00edticas de grupo (GPO) Vinculaci\u00f3n Pol\u00edticas de grupo (GPO) La pol\u00edtica de grupo es un mecanismo para controlar e implementar la configuraci\u00f3n del sistema operativo en las computadoras en toda su red. La Pol\u00edtica de grupo consiste en la configuraci\u00f3n de usuario y computadora para los diversos sistemas operativos de Microsoft Windows, que los sistemas implementan durante el inicio y apagado de la computadora y el inicio y cierre de sesi\u00f3n del usuario. Vinculaci\u00f3n Se pueden configurar uno o m\u00e1s objetos de directiva de grupo (GPO) y luego usar un proceso llamado vinculaci\u00f3n para asociarlos con objetos espec\u00edficos de servicios de dominio de Active Directory (AD DS). Cuando se vincula un GPO a un objeto contenedor, todos los objetos en ese contenedor reciben las configuraciones que configur\u00f3 en el GPO. Puede vincular varios GPO a un solo contenedor de AD DS o vincular un GPO a m\u00faltiples contenedores a lo largo de la jerarqu\u00eda de AD DS.","title":"Politicas de grupo"},{"location":"windows%20server/Politicas%20de%20grupo/#politicas-de-grupo-gpo","text":"La pol\u00edtica de grupo es un mecanismo para controlar e implementar la configuraci\u00f3n del sistema operativo en las computadoras en toda su red. La Pol\u00edtica de grupo consiste en la configuraci\u00f3n de usuario y computadora para los diversos sistemas operativos de Microsoft Windows, que los sistemas implementan durante el inicio y apagado de la computadora y el inicio y cierre de sesi\u00f3n del usuario.","title":"Pol\u00edticas de grupo (GPO)"},{"location":"windows%20server/Politicas%20de%20grupo/#vinculacion","text":"Se pueden configurar uno o m\u00e1s objetos de directiva de grupo (GPO) y luego usar un proceso llamado vinculaci\u00f3n para asociarlos con objetos espec\u00edficos de servicios de dominio de Active Directory (AD DS). Cuando se vincula un GPO a un objeto contenedor, todos los objetos en ese contenedor reciben las configuraciones que configur\u00f3 en el GPO. Puede vincular varios GPO a un solo contenedor de AD DS o vincular un GPO a m\u00faltiples contenedores a lo largo de la jerarqu\u00eda de AD DS.","title":"Vinculaci\u00f3n"},{"location":"windows%20server/bosque/","text":"Concepto de bosque Un bosque es un conjunto de \u00e1rboles que no forman un espacio de nombres contiguo. Todos los \u00e1rboles de un mismo bosque comparten un esquema, una configuraci\u00f3n y un cat\u00e1logo global. Todos los \u00e1rboles en un bosque conf\u00edan en los otros mediante relaciones de confianza (transitivas y jer\u00e1rquicas). Los \u00e1rboles en un bosque forman una jerarqu\u00eda para los prop\u00f3sitos de la relaci\u00f3n de confianza, y el nombre del bosque es el del primer \u00e1rbol creado Relaci\u00f3n entre dominios de un bosque Todos los dominios de un bosque comparten: Relaciones de confianza transitivas entre dominios Relaciones de confianza transitivas entre \u00e1rboles de dominio Un esquema com\u00fan, informaci\u00f3n de configuraci\u00f3n com\u00fan y un cat\u00e1logo com\u00fan","title":"Concepto de bosque"},{"location":"windows%20server/bosque/#concepto-de-bosque","text":"Un bosque es un conjunto de \u00e1rboles que no forman un espacio de nombres contiguo. Todos los \u00e1rboles de un mismo bosque comparten un esquema, una configuraci\u00f3n y un cat\u00e1logo global. Todos los \u00e1rboles en un bosque conf\u00edan en los otros mediante relaciones de confianza (transitivas y jer\u00e1rquicas). Los \u00e1rboles en un bosque forman una jerarqu\u00eda para los prop\u00f3sitos de la relaci\u00f3n de confianza, y el nombre del bosque es el del primer \u00e1rbol creado","title":"Concepto de bosque"},{"location":"windows%20server/bosque/#relacion-entre-dominios-de-un-bosque","text":"Todos los dominios de un bosque comparten: Relaciones de confianza transitivas entre dominios Relaciones de confianza transitivas entre \u00e1rboles de dominio Un esquema com\u00fan, informaci\u00f3n de configuraci\u00f3n com\u00fan y un cat\u00e1logo com\u00fan","title":"Relaci\u00f3n entre dominios de un bosque"},{"location":"windows%20server/conexion-estacion-trabajo/","text":"Conexi\u00f3n de la estaci\u00f3n de trabajo Desde Windows cliente (7, 8.1. 10 ...) Seleccionar Inicio / Panel de control / Men\u00fa contextual de Equipo / Ver estado y las Tareas de red / Conexiones de \u00e1rea local / mostrar el men\u00fa contextual y Propiedades. Sobre el Protocolo TCP / IP / Propiedades y: Si est\u00e1 instalado el protocolo DHCP, activar la casilla Obtener una direcci\u00f3n IP autom\u00e1ticamente. Si no est\u00e1 instalado el protocolo DHCP, indicar la direcci\u00f3n IP est\u00e1tica del equipo, su m\u00e1scara de subred y la direcci\u00f3n IP de la puerta de enlace. En ambos casos indicar la direcci\u00f3n IP de Windows Server como servidor DNS preferido. Aceptar. A las propiedades de protocolo de internet TCP / IPv4 indicar las siguientes direcciones IP: Si el equipo cliente es la m\u00e1quina anfitriona y el servidor se encuentra en la m\u00e1quina virtual \uf0e0Estado de Virtual Box Host-Only Network. Si el equipo cliente y el servidor se encuentran en las m\u00e1quinas virtuales 1.Adre\u00e7a IP: 172.16.1.201 2.M\u00e0scara de subred: 255.255.0.0 3.Porta de enlace: (la del router: 172.16.1.201) 4.DNS principal: 172.168.1.201 5.DNS secundaria: la que se indique para acceder a Internet. Conectar al dominio Situarse sobre Mi PC y, en el men\u00fa contextual, seleccionar Propiedades . - En la ficha N\u00famero de equipo se lo ha de hacer pertenecer al dominio de Windows Server en el que nos queremos conectar. - Por ello pulsar el bot\u00f3n Cambiar y activar la casilla Dominio para escribir el nombre correspondiente (curs1819.smx) y pulsar Aceptar. - Nos pedir\u00e1 el nombre de una cuenta de usuario y la contrase\u00f1a con permisos para poder unir el equipo al dominio. - Introducir la del Administrador de dominio. Al haber pulsado Aceptar nos dar\u00e1 la bienvenida al dominio. - Despu\u00e9s de reiniciar el equipo, indicar el nombre de un usuario del dominio, la contrase\u00f1a y el dominio al que nos queremos conectar (no el equipo). Pulsar Aceptar para conectarse al servidor. Tambi\u00e9n se puede introducir el nombre del usuario indicando ante el dominio (curs1819.smx \\ Administrador)","title":"Conexi\u00f3n de la estaci\u00f3n de trabajo Desde Windows cliente (7, 8.1. 10 ...)"},{"location":"windows%20server/conexion-estacion-trabajo/#conexion-de-la-estacion-de-trabajo-desde-windows-cliente-7-81-10","text":"Seleccionar Inicio / Panel de control / Men\u00fa contextual de Equipo / Ver estado y las Tareas de red / Conexiones de \u00e1rea local / mostrar el men\u00fa contextual y Propiedades. Sobre el Protocolo TCP / IP / Propiedades y: Si est\u00e1 instalado el protocolo DHCP, activar la casilla Obtener una direcci\u00f3n IP autom\u00e1ticamente. Si no est\u00e1 instalado el protocolo DHCP, indicar la direcci\u00f3n IP est\u00e1tica del equipo, su m\u00e1scara de subred y la direcci\u00f3n IP de la puerta de enlace. En ambos casos indicar la direcci\u00f3n IP de Windows Server como servidor DNS preferido. Aceptar. A las propiedades de protocolo de internet TCP / IPv4 indicar las siguientes direcciones IP: Si el equipo cliente es la m\u00e1quina anfitriona y el servidor se encuentra en la m\u00e1quina virtual \uf0e0Estado de Virtual Box Host-Only Network. Si el equipo cliente y el servidor se encuentran en las m\u00e1quinas virtuales 1.Adre\u00e7a IP: 172.16.1.201 2.M\u00e0scara de subred: 255.255.0.0 3.Porta de enlace: (la del router: 172.16.1.201) 4.DNS principal: 172.168.1.201 5.DNS secundaria: la que se indique para acceder a Internet.","title":"Conexi\u00f3n de la estaci\u00f3n de trabajo Desde Windows cliente (7, 8.1. 10 ...)"},{"location":"windows%20server/conexion-estacion-trabajo/#conectar-al-dominio","text":"Situarse sobre Mi PC y, en el men\u00fa contextual, seleccionar Propiedades . - En la ficha N\u00famero de equipo se lo ha de hacer pertenecer al dominio de Windows Server en el que nos queremos conectar. - Por ello pulsar el bot\u00f3n Cambiar y activar la casilla Dominio para escribir el nombre correspondiente (curs1819.smx) y pulsar Aceptar. - Nos pedir\u00e1 el nombre de una cuenta de usuario y la contrase\u00f1a con permisos para poder unir el equipo al dominio. - Introducir la del Administrador de dominio. Al haber pulsado Aceptar nos dar\u00e1 la bienvenida al dominio. - Despu\u00e9s de reiniciar el equipo, indicar el nombre de un usuario del dominio, la contrase\u00f1a y el dominio al que nos queremos conectar (no el equipo). Pulsar Aceptar para conectarse al servidor. Tambi\u00e9n se puede introducir el nombre del usuario indicando ante el dominio (curs1819.smx \\ Administrador)","title":"Conectar al dominio"},{"location":"windows%20server/grupos/","text":"Grupos Grupos Pertenencia a grupos y grupos anidados Ejemplo de agrupamiento anidado Tipos de grupos Grupos de distribuci\u00f3n Grupos de seguridad Pertenencia a grupos y grupos anidados Los usuarios pueden ser miembros de m\u00e1s de un grupo. Los grupos pueden contener otros objetos de active directory Ordenadores Otros grupos Los grupos se pueden anidar utilizando agrupamiento anidado El agrupamiento anidado describe el proceso de configuraci\u00f3n de uno o m\u00e1s grupos como miembros de otro grupo. Ejemplo de agrupamiento anidado Considere una empresa que tiene dos grupos: marketing y dise\u00f1o gr\u00e1fico. Los miembros del grupo de dise\u00f1o gr\u00e1fico tienen acceso a una impresora l\u00e1ser color de alta resoluci\u00f3n. Si en marketing los miembros del grupo tambi\u00e9n necesitan acceso a la impresora Agregar el grupo de marketing como miembro del grupo de dise\u00f1o gr\u00e1fico. Esto le da a los miembros del grupo de marketing lo mismo Permiso para la impresora l\u00e1ser color como miembros del grupo de dise\u00f1o gr\u00e1fico. Tipos de grupos Hay dos clasificaciones de grupo en Windows Server: Tipo de grupo \u00c1mbito de grupo. El tipo de grupo define c\u00f3mo se usa un grupo dentro de Active Directory. Los dos tipos de grupos de Windows Server 2012 R2 son los siguientes: Grupos de distribuci\u00f3n Grupos no relacionados con la seguridad creados para la distribuci\u00f3n de Informaci\u00f3n a una o m\u00e1s personas. Grupos de seguridad Grupos relacionados con la seguridad creados para otorgar permisos de acceso a recursos a m\u00faltiples usuarios Grupos de distribuci\u00f3n Las aplicaciones compatibles con Active Directory pueden usar grupos de distribuci\u00f3n para funciones no relacionadas con la seguridad Por ejemplo, Microsoft Exchange usa grupos de distribuci\u00f3n para enviar mensajes a m\u00faltiples usuarios. Grupos de seguridad Los grupos que utiliza para asignar permisos a los recursos se denominan grupos de seguridad. Los administradores hacen que los usuarios que necesitan acceso a los mismos recursos sean miembros de un grupo de seguridad. Luego otorgan permiso al grupo de seguridad para acceder al recurso.","title":"Grupos"},{"location":"windows%20server/grupos/#grupos","text":"Grupos Pertenencia a grupos y grupos anidados Ejemplo de agrupamiento anidado Tipos de grupos Grupos de distribuci\u00f3n Grupos de seguridad","title":"Grupos"},{"location":"windows%20server/grupos/#pertenencia-a-grupos-y-grupos-anidados","text":"Los usuarios pueden ser miembros de m\u00e1s de un grupo. Los grupos pueden contener otros objetos de active directory Ordenadores Otros grupos Los grupos se pueden anidar utilizando agrupamiento anidado El agrupamiento anidado describe el proceso de configuraci\u00f3n de uno o m\u00e1s grupos como miembros de otro grupo.","title":"Pertenencia a grupos y grupos anidados"},{"location":"windows%20server/grupos/#ejemplo-de-agrupamiento-anidado","text":"Considere una empresa que tiene dos grupos: marketing y dise\u00f1o gr\u00e1fico. Los miembros del grupo de dise\u00f1o gr\u00e1fico tienen acceso a una impresora l\u00e1ser color de alta resoluci\u00f3n. Si en marketing los miembros del grupo tambi\u00e9n necesitan acceso a la impresora Agregar el grupo de marketing como miembro del grupo de dise\u00f1o gr\u00e1fico. Esto le da a los miembros del grupo de marketing lo mismo Permiso para la impresora l\u00e1ser color como miembros del grupo de dise\u00f1o gr\u00e1fico.","title":"Ejemplo de agrupamiento anidado"},{"location":"windows%20server/grupos/#tipos-de-grupos","text":"Hay dos clasificaciones de grupo en Windows Server: Tipo de grupo \u00c1mbito de grupo. El tipo de grupo define c\u00f3mo se usa un grupo dentro de Active Directory. Los dos tipos de grupos de Windows Server 2012 R2 son los siguientes: Grupos de distribuci\u00f3n Grupos no relacionados con la seguridad creados para la distribuci\u00f3n de Informaci\u00f3n a una o m\u00e1s personas. Grupos de seguridad Grupos relacionados con la seguridad creados para otorgar permisos de acceso a recursos a m\u00faltiples usuarios","title":"Tipos de grupos"},{"location":"windows%20server/grupos/#grupos-de-distribucion","text":"Las aplicaciones compatibles con Active Directory pueden usar grupos de distribuci\u00f3n para funciones no relacionadas con la seguridad Por ejemplo, Microsoft Exchange usa grupos de distribuci\u00f3n para enviar mensajes a m\u00faltiples usuarios.","title":"Grupos de distribuci\u00f3n"},{"location":"windows%20server/grupos/#grupos-de-seguridad","text":"Los grupos que utiliza para asignar permisos a los recursos se denominan grupos de seguridad. Los administradores hacen que los usuarios que necesitan acceso a los mismos recursos sean miembros de un grupo de seguridad. Luego otorgan permiso al grupo de seguridad para acceder al recurso.","title":"Grupos de seguridad"},{"location":"windows%20server/niveles%20funcionales/","text":"El m\u00e1ximo nivel funcional de un dominio es determinado por la versi\u00f3n de WS de los DC. No influye la versi\u00f3n de los servidores miembros. El m\u00e1ximo nivel funcional del bosque es determinado por el nivel funcional de los dominios que lo integran.","title":"Niveles funcionales"},{"location":"windows%20server/perfiles%20de%20usuario/","text":"Usuarios Perfil de usuario Ventajas de disponer de un perfil de usuario Qu\u00e9 se guarda en un perfil Tipos de perfiles Tipos de perfil de red Perfil m\u00f3vil Perfil obligatorio Perfil s\u00faper-obligatorio Ver el perfil de un usuario Usuarios En un controlador de dominio con Windows Server se crean cuentas de usuario y de grupo que sirven para: Identificar y autentificar las personas o usuarios que podr\u00e1n acceder a los recursos del sistema. Administrar y gestionar los permisos y privilegios que servir\u00e1n para controlar los recursos de los usuarios a los recursos del sistema. Perfil de usuario Un perfil es un entorno personalizado espec\u00edficamente para un usuario. Contiene configuraci\u00f3n del escritorio y de los programas del usuario. Cuando se inicia sesi\u00f3n en un equipo por primera vez, se crea autom\u00e1ticamente un perfil para ese usuario. Ventajas de disponer de un perfil de usuario M\u00faltiples usuarios pueden utilizar el mismo equipo, con la configuraci\u00f3n de cada uno recuperada al iniciar la sesi\u00f3n al mismo estado en que estaba cuando cerr\u00f3 la sesi\u00f3n Los cambios hechos por un usuarios en el escritorio no afectan a otro usuario. Si los perfiles de usuarios se almacenan en un servidor pueden seguir a los usuarios a cualquier equipo de la red que ejecute Windows Server u otras versiones de Windows. Qu\u00e9 se guarda en un perfil Configuraci\u00f3n local: Datos de programa, historial y archivos temp. Cookies. Datos de programa: Configuraciones especif\u00edcas de programa determinadas por el fabricante del programa. Entorno de red: Accesos directos a Mis sitios de red. Escritorio. Favoritos. Impresoras. Men\u00fa inicio. Mis documentos Plantillas: Plantillas de programas. Reciente: Archivos m\u00e1s recientes utilizados. SendTo: Elementos del men\u00fa Enviar a. Tipos de perfiles Perfil local : Solo accesible desde la estaci\u00f3n de trabajo donde se ha creado Perfil temporal : Se crea por error en la carga del perfil de usuario Perfil de red : Los usuarios de Windows Server pueden acceder desde cualquier estaci\u00f3n de trabajo. M\u00f3vil Obligatorio Superobligatorio Tipos de perfil de red Existen 3 tipos principales de perfil de red: Perfil m\u00f3vil Perfil obligatorio Perfil superobligatorio Perfil m\u00f3vil Gran ventaja para usuarios que utilizan habitualmente m\u00e1s de un equipo Permite que un usuario tenga el mismo escritorio, configuraci\u00f3n de aplicaciones y configuraci\u00f3n local en cualquier ordenador que ejecute Windows S\u00f3lo hay un perfil por cada usuario Cada perfil de usuario se almacena en una carpeta compartida en el servidor Los cambios en el perfil del usuario permanecen disponibles desde cualquier equipo Despu\u00e9s de iniciar sesi\u00f3n el usuario, se copia la informaci\u00f3n del perfil al equipo local desde el servidor Perfil obligatorio Caracter\u00edsticas: No almacena los cambios. Es un perfil m\u00f3vil de solo lectura Si guardamos cualquier documento en el perfil, despu\u00e9s de cerrar sesi\u00f3n todos los documentos guardados ser\u00e1n borrados autom\u00e1ticamente Cada perfil tiene su propio archivo de preferencias llamado NTUSER.DAT Los perfiles de usuario se convierten en perfiles obligatorios cuando el administrador cambia el nombre del archivo NTuser.dat (el sub\u00e1rbol del Registro) de cada perfil de usuario en el sistema de archivos del servidor de perfiles de NTuser.dat a NTuser.man. La .man extensi\u00f3n hace que el perfil de usuario sea un perfil de solo lectura. Perfil s\u00faper-obligatorio Se incorpora a partir de Windows Server 2008 La diferencia es que, si se produce un error que impide cargar el perfil, el usuario no podr\u00e1 iniciar sesi\u00f3n Este perfil impedir\u00e1 que se cargue un perfil temporal cuando exista alg\u00fan motivo que impida cargar el perfil super-obligatorio Ver el perfil de un usuario Para ver el tipo de perfil de un usuario: Inicio / Panel de control / Sistema / Configuraci\u00f3n avanzada del sistema (desde de Windows Server, Opciones avanzadas) / El blog Perfiles de usuario hacer clic en Configuraci\u00f3n. Podemos comprobar que se ha creado una carpeta para el usuario. Si entramos en la carpeta podremos ver lo que se guarda.","title":"Perfiles de usuario"},{"location":"windows%20server/perfiles%20de%20usuario/#usuarios","text":"En un controlador de dominio con Windows Server se crean cuentas de usuario y de grupo que sirven para: Identificar y autentificar las personas o usuarios que podr\u00e1n acceder a los recursos del sistema. Administrar y gestionar los permisos y privilegios que servir\u00e1n para controlar los recursos de los usuarios a los recursos del sistema.","title":"Usuarios"},{"location":"windows%20server/perfiles%20de%20usuario/#perfil-de-usuario","text":"Un perfil es un entorno personalizado espec\u00edficamente para un usuario. Contiene configuraci\u00f3n del escritorio y de los programas del usuario. Cuando se inicia sesi\u00f3n en un equipo por primera vez, se crea autom\u00e1ticamente un perfil para ese usuario.","title":"Perfil de usuario"},{"location":"windows%20server/perfiles%20de%20usuario/#ventajas-de-disponer-de-un-perfil-de-usuario","text":"M\u00faltiples usuarios pueden utilizar el mismo equipo, con la configuraci\u00f3n de cada uno recuperada al iniciar la sesi\u00f3n al mismo estado en que estaba cuando cerr\u00f3 la sesi\u00f3n Los cambios hechos por un usuarios en el escritorio no afectan a otro usuario. Si los perfiles de usuarios se almacenan en un servidor pueden seguir a los usuarios a cualquier equipo de la red que ejecute Windows Server u otras versiones de Windows.","title":"Ventajas de disponer de un perfil de usuario"},{"location":"windows%20server/perfiles%20de%20usuario/#que-se-guarda-en-un-perfil","text":"Configuraci\u00f3n local: Datos de programa, historial y archivos temp. Cookies. Datos de programa: Configuraciones especif\u00edcas de programa determinadas por el fabricante del programa. Entorno de red: Accesos directos a Mis sitios de red. Escritorio. Favoritos. Impresoras. Men\u00fa inicio. Mis documentos Plantillas: Plantillas de programas. Reciente: Archivos m\u00e1s recientes utilizados. SendTo: Elementos del men\u00fa Enviar a.","title":"Qu\u00e9 se guarda en un perfil"},{"location":"windows%20server/perfiles%20de%20usuario/#tipos-de-perfiles","text":"Perfil local : Solo accesible desde la estaci\u00f3n de trabajo donde se ha creado Perfil temporal : Se crea por error en la carga del perfil de usuario Perfil de red : Los usuarios de Windows Server pueden acceder desde cualquier estaci\u00f3n de trabajo. M\u00f3vil Obligatorio Superobligatorio","title":"Tipos de perfiles"},{"location":"windows%20server/perfiles%20de%20usuario/#tipos-de-perfil-de-red","text":"Existen 3 tipos principales de perfil de red: Perfil m\u00f3vil Perfil obligatorio Perfil superobligatorio","title":"Tipos de perfil de red"},{"location":"windows%20server/perfiles%20de%20usuario/#perfil-movil","text":"Gran ventaja para usuarios que utilizan habitualmente m\u00e1s de un equipo Permite que un usuario tenga el mismo escritorio, configuraci\u00f3n de aplicaciones y configuraci\u00f3n local en cualquier ordenador que ejecute Windows S\u00f3lo hay un perfil por cada usuario Cada perfil de usuario se almacena en una carpeta compartida en el servidor Los cambios en el perfil del usuario permanecen disponibles desde cualquier equipo Despu\u00e9s de iniciar sesi\u00f3n el usuario, se copia la informaci\u00f3n del perfil al equipo local desde el servidor","title":"Perfil m\u00f3vil"},{"location":"windows%20server/perfiles%20de%20usuario/#perfil-obligatorio","text":"Caracter\u00edsticas: No almacena los cambios. Es un perfil m\u00f3vil de solo lectura Si guardamos cualquier documento en el perfil, despu\u00e9s de cerrar sesi\u00f3n todos los documentos guardados ser\u00e1n borrados autom\u00e1ticamente Cada perfil tiene su propio archivo de preferencias llamado NTUSER.DAT Los perfiles de usuario se convierten en perfiles obligatorios cuando el administrador cambia el nombre del archivo NTuser.dat (el sub\u00e1rbol del Registro) de cada perfil de usuario en el sistema de archivos del servidor de perfiles de NTuser.dat a NTuser.man. La .man extensi\u00f3n hace que el perfil de usuario sea un perfil de solo lectura.","title":"Perfil obligatorio"},{"location":"windows%20server/perfiles%20de%20usuario/#perfil-super-obligatorio","text":"Se incorpora a partir de Windows Server 2008 La diferencia es que, si se produce un error que impide cargar el perfil, el usuario no podr\u00e1 iniciar sesi\u00f3n Este perfil impedir\u00e1 que se cargue un perfil temporal cuando exista alg\u00fan motivo que impida cargar el perfil super-obligatorio","title":"Perfil s\u00faper-obligatorio"},{"location":"windows%20server/perfiles%20de%20usuario/#ver-el-perfil-de-un-usuario","text":"Para ver el tipo de perfil de un usuario: Inicio / Panel de control / Sistema / Configuraci\u00f3n avanzada del sistema (desde de Windows Server, Opciones avanzadas) / El blog Perfiles de usuario hacer clic en Configuraci\u00f3n. Podemos comprobar que se ha creado una carpeta para el usuario. Si entramos en la carpeta podremos ver lo que se guarda.","title":"Ver el perfil de un usuario"},{"location":"windows%20server/relaciones%20de%20confianza/","text":"Tipos de relaciones de confianza M\u00e9todo de creaci\u00f3n. Direcci\u00f3n. Transitividad. Crear relaciones de confianza Paso 1 Paso 2: Comprobaci\u00f3n de puertos Paso 3: Crear un reenviador condicional Relaciones de confianza Una relaci\u00f3n de confianza es una relaci\u00f3n establecida entre dos dominios. Permite a los usuarios de un dominio ser reconocidos por los controladores de Dominio de otro dominio. Estas relaciones permiten: * A los usuarios acceder a los recursos de otro dominio * A los administradores definir los permisos y derechos de usuario para los usuarios del otro dominio. Permite establecer comunicaci\u00f3n entre varios controladores de dominio, con el fin de poder administrar desde un solo punto de la red a todos los usuarios y recursos que tengas. En una red que consista en dos o m\u00e1s dominios, cada dominio act\u00faa como una red por separado con su propia base de datos de cuentas. Puede pasar que un usuario de un dominio necesite utilizar algunos o todos los recursos del otro dominio. La soluci\u00f3n usual para la configuraci\u00f3n de niveles de acceso de usuario entre dominios es lo que se llama relaci\u00f3n de confianza. Tipos de relaciones de confianza Windows Server soporta varios tipos de relaciones de confianza. Los diferentes tipos de relaciones se diferencian en funci\u00f3n de 3 rasgos caracter\u00edsticos: M\u00e9todo de creaci\u00f3n. Algunos tipos de relaciones de confianza se crean de forma autom\u00e1tica (impl\u00edcita) Otros se tienen que crear de forma manual (expl\u00edcita). Direcci\u00f3n. Si la relaci\u00f3n de confianza es unidireccional, los usuarios del dominio A (de confianza) pueden utilizar los recursos del dominio B (que conf\u00eda), pero no al rev\u00e9s. En una relaci\u00f3n bidireccional, ambas acciones son posibles. Transitividad. En una relaci\u00f3n de confianza transitiva, si un dominio A conf\u00eda en otro B, y este conf\u00eda en un tercero C, entonces, de forma autom\u00e1tica, A conf\u00eda en C. En las relaciones no transitivas, la confianza entre A y C tendr\u00eda que a\u00f1adirse expl\u00edcitamente. Crear relaciones de confianza Paso 1 Comprobamos con PING que podemos conectar de un server a otro y viceversa. Paso 2: Comprobaci\u00f3n de puertos Descargar la aplicaci\u00f3n port query: https://www.microsoft.com/en-us/download/details.aspx?id=24009 Paso 3: Crear un reenviador condicional","title":"Relaciones de confianza"},{"location":"windows%20server/relaciones%20de%20confianza/#relaciones-de-confianza","text":"Una relaci\u00f3n de confianza es una relaci\u00f3n establecida entre dos dominios. Permite a los usuarios de un dominio ser reconocidos por los controladores de Dominio de otro dominio. Estas relaciones permiten: * A los usuarios acceder a los recursos de otro dominio * A los administradores definir los permisos y derechos de usuario para los usuarios del otro dominio. Permite establecer comunicaci\u00f3n entre varios controladores de dominio, con el fin de poder administrar desde un solo punto de la red a todos los usuarios y recursos que tengas. En una red que consista en dos o m\u00e1s dominios, cada dominio act\u00faa como una red por separado con su propia base de datos de cuentas. Puede pasar que un usuario de un dominio necesite utilizar algunos o todos los recursos del otro dominio. La soluci\u00f3n usual para la configuraci\u00f3n de niveles de acceso de usuario entre dominios es lo que se llama relaci\u00f3n de confianza.","title":"Relaciones de confianza"},{"location":"windows%20server/relaciones%20de%20confianza/#tipos-de-relaciones-de-confianza","text":"Windows Server soporta varios tipos de relaciones de confianza. Los diferentes tipos de relaciones se diferencian en funci\u00f3n de 3 rasgos caracter\u00edsticos:","title":"Tipos de relaciones de confianza"},{"location":"windows%20server/relaciones%20de%20confianza/#metodo-de-creacion","text":"Algunos tipos de relaciones de confianza se crean de forma autom\u00e1tica (impl\u00edcita) Otros se tienen que crear de forma manual (expl\u00edcita).","title":"M\u00e9todo de creaci\u00f3n."},{"location":"windows%20server/relaciones%20de%20confianza/#direccion","text":"Si la relaci\u00f3n de confianza es unidireccional, los usuarios del dominio A (de confianza) pueden utilizar los recursos del dominio B (que conf\u00eda), pero no al rev\u00e9s. En una relaci\u00f3n bidireccional, ambas acciones son posibles.","title":"Direcci\u00f3n."},{"location":"windows%20server/relaciones%20de%20confianza/#transitividad","text":"En una relaci\u00f3n de confianza transitiva, si un dominio A conf\u00eda en otro B, y este conf\u00eda en un tercero C, entonces, de forma autom\u00e1tica, A conf\u00eda en C. En las relaciones no transitivas, la confianza entre A y C tendr\u00eda que a\u00f1adirse expl\u00edcitamente.","title":"Transitividad."},{"location":"windows%20server/relaciones%20de%20confianza/#crear-relaciones-de-confianza","text":"","title":"Crear relaciones de confianza"},{"location":"windows%20server/relaciones%20de%20confianza/#paso-1","text":"Comprobamos con PING que podemos conectar de un server a otro y viceversa.","title":"Paso 1"},{"location":"windows%20server/relaciones%20de%20confianza/#paso-2-comprobacion-de-puertos","text":"Descargar la aplicaci\u00f3n port query: https://www.microsoft.com/en-us/download/details.aspx?id=24009","title":"Paso 2: Comprobaci\u00f3n de puertos"},{"location":"windows%20server/relaciones%20de%20confianza/#paso-3-crear-un-reenviador-condicional","text":"","title":"Paso 3: Crear un reenviador condicional"},{"location":"windows%20server/roles%20de%20equipos%20en%20dominio/","text":"Roles que puede desarrollar un equipo dentro de un dominio Controladores de dominio (DC) Servidores miembros (MS): Clientes Roles que puede desarrollar un equipo dentro de un dominio Controladores de dominio (DC) Servidores miembros (MS): Servidores que se hacen miembros de un dominio para proporcionar servicios sin necesidad de mantener la lista de usuarios. Recomendable IIS, Exchange y SQL server como miembros Clientes Equipos que requieren servicios y recursos de un dominio","title":"Roles de equipos en dominio"},{"location":"windows%20server/roles%20de%20equipos%20en%20dominio/#roles-que-puede-desarrollar-un-equipo-dentro-de-un-dominio","text":"","title":"Roles que puede desarrollar un equipo dentro de un dominio"},{"location":"windows%20server/roles%20de%20equipos%20en%20dominio/#controladores-de-dominio-dc","text":"","title":"Controladores de dominio (DC)"},{"location":"windows%20server/roles%20de%20equipos%20en%20dominio/#servidores-miembros-ms","text":"Servidores que se hacen miembros de un dominio para proporcionar servicios sin necesidad de mantener la lista de usuarios. Recomendable IIS, Exchange y SQL server como miembros","title":"Servidores miembros (MS):"},{"location":"windows%20server/roles%20de%20equipos%20en%20dominio/#clientes","text":"Equipos que requieren servicios y recursos de un dominio","title":"Clientes"},{"location":"windows%20server/roles%20de%20servidor/","text":"Roles Un rol es una combinaci\u00f3n predefinida de varios servicios. Controlador de dominio Servidor DNS Servidor web IIS Los roles stan formados por componentes m\u00e1s peque\u00f1os llamados caracter\u00edsticas WS puede ejecutar tantos roles como el hardware permita. La recomendaci\u00f3n es que cada servidor ejecute solo 1 o 2 por servidor Algunos de los roles est\u00e1n instalados por defecto, y otros se pueden agregar manualmente. Se pueden agregan roles y caracter\u00edsticas de dos formas: Gr\u00e1ficamente mediante un asistente en la consola de administraci\u00f3n de servidor Desde la consola de PowerShell","title":"Roles"},{"location":"windows%20server/roles%20de%20servidor/#roles","text":"Un rol es una combinaci\u00f3n predefinida de varios servicios. Controlador de dominio Servidor DNS Servidor web IIS Los roles stan formados por componentes m\u00e1s peque\u00f1os llamados caracter\u00edsticas WS puede ejecutar tantos roles como el hardware permita. La recomendaci\u00f3n es que cada servidor ejecute solo 1 o 2 por servidor Algunos de los roles est\u00e1n instalados por defecto, y otros se pueden agregar manualmente. Se pueden agregan roles y caracter\u00edsticas de dos formas: Gr\u00e1ficamente mediante un asistente en la consola de administraci\u00f3n de servidor Desde la consola de PowerShell","title":"Roles"},{"location":"windows%20server/unidades%20organizativas/","text":"Unidades organizativas Diferencias entre grupos y unidades organizativas Uso de unidades organizativas Asignar configuraciones de directiva de grupo Delegar tareas de administraci\u00f3n de Active Directory Unidades organizativas Diferencias entre grupos y unidades organizativas Las unidades organizativas no se consideran principios de seguridad. Esto significa que no puede asignar permisos de acceso a un recurso basado en la pertenencia a una OU. Aqu\u00ed radica la diferencia entre las unidades organizativas y los grupos globales, de dominio local y universales. Los grupos se utilizan para asignar permisos de acceso, mientras que las unidades organizativas se utilizan para delegar permisos y pol\u00edticas de grupo. Uso de unidades organizativas Asignar configuraciones de directiva de grupo Una de las razones principales para crear una OU es asignar diferentes configuraciones de Directiva de grupo a una colecci\u00f3n particular de objetos. Cuando asigna configuraciones de Directiva de grupo a una OU, cada objeto contenido en esa OU recibe esas configuraciones, incluidas otras OU. Esto permite a los administradores implementar la configuraci\u00f3n de la directiva de grupo en solo parte de un dominio, en lugar de todo el dominio. Delegar tareas de administraci\u00f3n de Active Directory La creaci\u00f3n de unidades organizativas le permite implementar un modelo de administraci\u00f3n descentralizado, en el que otros administran partes de la jerarqu\u00eda de AD DS, sin afectar al resto de la estructura. La delegaci\u00f3n de autoridad a nivel de sitio afecta a todos los dominios y usuarios dentro del sitio. La delegaci\u00f3n de autoridad en el nivel de dominio afecta a todo el dominio. Sin embargo, la delegaci\u00f3n de autoridad en el nivel de OU afecta solo a esa OU y sus objetos subordinados.","title":"Unidades organizativas"},{"location":"windows%20server/unidades%20organizativas/#unidades-organizativas","text":"","title":"Unidades organizativas"},{"location":"windows%20server/unidades%20organizativas/#diferencias-entre-grupos-y-unidades-organizativas","text":"Las unidades organizativas no se consideran principios de seguridad. Esto significa que no puede asignar permisos de acceso a un recurso basado en la pertenencia a una OU. Aqu\u00ed radica la diferencia entre las unidades organizativas y los grupos globales, de dominio local y universales. Los grupos se utilizan para asignar permisos de acceso, mientras que las unidades organizativas se utilizan para delegar permisos y pol\u00edticas de grupo.","title":"Diferencias entre grupos y unidades organizativas"},{"location":"windows%20server/unidades%20organizativas/#uso-de-unidades-organizativas","text":"","title":"Uso de unidades organizativas"},{"location":"windows%20server/unidades%20organizativas/#asignar-configuraciones-de-directiva-de-grupo","text":"Una de las razones principales para crear una OU es asignar diferentes configuraciones de Directiva de grupo a una colecci\u00f3n particular de objetos. Cuando asigna configuraciones de Directiva de grupo a una OU, cada objeto contenido en esa OU recibe esas configuraciones, incluidas otras OU. Esto permite a los administradores implementar la configuraci\u00f3n de la directiva de grupo en solo parte de un dominio, en lugar de todo el dominio.","title":"Asignar configuraciones de directiva de grupo"},{"location":"windows%20server/unidades%20organizativas/#delegar-tareas-de-administracion-de-active-directory","text":"La creaci\u00f3n de unidades organizativas le permite implementar un modelo de administraci\u00f3n descentralizado, en el que otros administran partes de la jerarqu\u00eda de AD DS, sin afectar al resto de la estructura. La delegaci\u00f3n de autoridad a nivel de sitio afecta a todos los dominios y usuarios dentro del sitio. La delegaci\u00f3n de autoridad en el nivel de dominio afecta a todo el dominio. Sin embargo, la delegaci\u00f3n de autoridad en el nivel de OU afecta solo a esa OU y sus objetos subordinados.","title":"Delegar tareas de administraci\u00f3n de Active Directory"},{"location":"windows%20server/usuarios%20globales%20o%20de%20dominio/","text":"Usuarios globales Creaci\u00f3n de usuarios globales o del dominio Modificaci\u00f3n de usuarios globales Usuarios globales Se pueden crear cuentas de usuario global. Los datos de un usuario global almacenan en el Directorio Activo (por tanto, a la En un controlador de dominio con Windows Server ... almacenan su base de datos) Los usuarios globales son conocidos por todos los ordenadores del dominio (en realidad para todos los ordenadores del bosque). Los usuarios globales pueden convivir con los usuarios locales. Estos usuarios s\u00f3lo son visibles en el ordenador donde se han creado y se validan en la base de datos local del ordenador en cuesti\u00f3n, pero no se podr\u00e1n asignar permisos de acceso a recursos del dominio, ya que no hay t\u00e9compte. Creaci\u00f3n de usuarios globales o del dominio Men\u00fa Inicio / Herramientas administrativas / Usuarios y equipos de Active Directory / \"+\" en el nombre del dominio para mostrar el contenido. Sobre Users, se muestran los usuarios \u00a1grupos dados de alta en el Directorio Activo. Men\u00fa contextual de Users / Nuevo / Usuario Introducir los datos del usuario y el nombre con el que iniciar\u00e1 la sesi\u00f3n (por ejemplo, sox2a01). A la derecha se puede elegir el nombre del dominio al que se da de alta. Modificaci\u00f3n de usuarios globales Men\u00fa Inicio / Herramientas administrativas / Usuarios y equipos de Active Directory. Clic en \"+\" del nombre del domlni. Users / usuario a modificar / men\u00fa co | ntextual y Propiedades. Se muestran varias fichas con los correspondientes apartados: Fichas General, Direcci\u00f3n, Cuenta, etc. Desde el men\u00fa Acci\u00f3n se pueden realizar las siguientes operaciones: A\u00f1adir a un grupo. Deshabilitar cuenta. Usuarios y grupos en Windows Server Habilitar cuenta. Mover. Abrir la p\u00e1gina principal. Enviar correo.","title":"Usuarios globales o de dominio"},{"location":"windows%20server/usuarios%20globales%20o%20de%20dominio/#usuarios-globales","text":"Se pueden crear cuentas de usuario global. Los datos de un usuario global almacenan en el Directorio Activo (por tanto, a la En un controlador de dominio con Windows Server ... almacenan su base de datos) Los usuarios globales son conocidos por todos los ordenadores del dominio (en realidad para todos los ordenadores del bosque). Los usuarios globales pueden convivir con los usuarios locales. Estos usuarios s\u00f3lo son visibles en el ordenador donde se han creado y se validan en la base de datos local del ordenador en cuesti\u00f3n, pero no se podr\u00e1n asignar permisos de acceso a recursos del dominio, ya que no hay t\u00e9compte.","title":"Usuarios globales"},{"location":"windows%20server/usuarios%20globales%20o%20de%20dominio/#creacion-de-usuarios-globales-o-del-dominio","text":"Men\u00fa Inicio / Herramientas administrativas / Usuarios y equipos de Active Directory / \"+\" en el nombre del dominio para mostrar el contenido. Sobre Users, se muestran los usuarios \u00a1grupos dados de alta en el Directorio Activo. Men\u00fa contextual de Users / Nuevo / Usuario Introducir los datos del usuario y el nombre con el que iniciar\u00e1 la sesi\u00f3n (por ejemplo, sox2a01). A la derecha se puede elegir el nombre del dominio al que se da de alta.","title":"Creaci\u00f3n de usuarios globales o del dominio"},{"location":"windows%20server/usuarios%20globales%20o%20de%20dominio/#modificacion-de-usuarios-globales","text":"Men\u00fa Inicio / Herramientas administrativas / Usuarios y equipos de Active Directory. Clic en \"+\" del nombre del domlni. Users / usuario a modificar / men\u00fa co | ntextual y Propiedades. Se muestran varias fichas con los correspondientes apartados: Fichas General, Direcci\u00f3n, Cuenta, etc. Desde el men\u00fa Acci\u00f3n se pueden realizar las siguientes operaciones: A\u00f1adir a un grupo. Deshabilitar cuenta. Usuarios y grupos en Windows Server Habilitar cuenta. Mover. Abrir la p\u00e1gina principal. Enviar correo.","title":"Modificaci\u00f3n de usuarios globales"}]}